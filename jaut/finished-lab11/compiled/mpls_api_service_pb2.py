# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mpls_api_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import prpd_common_pb2 as prpd__common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='mpls_api_service.proto',
  package='routing',
  syntax='proto3',
  serialized_pb=_b('\n\x16mpls_api_service.proto\x12\x07routing\x1a\x11prpd_common.proto\"O\n\x0cRsvpLspFlags\x12\x1f\n\x17rsvp_dynamic_bypass_lsp\x18\x01 \x01(\x08\x12\x1e\n\x16rsvp_manual_bypass_lsp\x18\x02 \x01(\x08\"\x92\x01\n\x16RsvpLspPingInfoRequest\x12$\n\x05\x66lags\x18\x01 \x01(\x0b\x32\x15.routing.RsvpLspFlags\x12\x10\n\x08lsp_name\x18\x02 \x01(\t\x12\x11\n\tpath_name\x18\x03 \x01(\t\x12\x16\n\x0einterface_name\x18\x04 \x01(\t\x12\x15\n\rinstance_name\x18\x05 \x01(\t\"\x97\x02\n\x12MplsForwardingInfo\x12-\n\x0fnexthop_address\x18\x01 \x01(\x0b\x32\x14.routing.RoutePrefix\x12/\n\x11nexthop_router_id\x18\x02 \x01(\x0b\x32\x14.routing.RoutePrefix\x12/\n\x11nexthop_route_idx\x18\x03 \x01(\x0b\x32\x14.routing.RoutePrefix\x12$\n\x1cnexthop_control_channel_flag\x18\x04 \x01(\r\x12*\n\rnexthop_label\x18\x05 \x01(\x0b\x32\x13.routing.LabelStack\x12\x1e\n\x16nexthop_interface_name\x18\x06 \x01(\t\"\xdb\x03\n\x0fRsvpLspPingInfo\x12*\n\x06status\x18\x01 \x01(\x0e\x32\x1a.routing.RsvpLspPingStatus\x12\x39\n\x0esuccess_status\x18\x02 \x01(\x0e\x32!.routing.RsvpLspPingSuccessStatus\x12\x31\n\x13\x64\x65stination_address\x18\x03 \x01(\x0b\x32\x14.routing.RoutePrefix\x12+\n\rext_tunnel_id\x18\x04 \x01(\x0b\x32\x14.routing.RoutePrefix\x12,\n\x0esender_address\x18\x05 \x01(\x0b\x32\x14.routing.RoutePrefix\x12\x11\n\ttunnel_id\x18\x06 \x01(\r\x12\x0e\n\x06lsp_id\x18\x07 \x01(\r\x12\x10\n\x08nexthops\x18\x08 \x01(\r\x12\x19\n\x11\x62\x66\x64_discriminator\x18\t \x01(\r\x12.\n\x10lsp_from_address\x18\n \x01(\x0b\x32\x14.routing.RoutePrefix\x12\x11\n\tsensor_id\x18\x0b \x01(\x04\x12\r\n\x05\x66lags\x18\x0c \x01(\r\x12\x31\n\x0cnexthop_info\x18\r \x01(\x0b\x32\x1b.routing.MplsForwardingInfo\"r\n\x14RsvpLspPingInfoReply\x12-\n\x06status\x18\x01 \x01(\x0e\x32\x1d.routing.LspPingGetInfoStatus\x12+\n\trsvp_info\x18\x02 \x01(\x0b\x32\x18.routing.RsvpLspPingInfo\"k\n\x15LdpLspPingInfoRequest\x12$\n\x06prefix\x18\x01 \x01(\x0b\x32\x14.routing.RoutePrefix\x12\x15\n\rprefix_length\x18\x02 \x01(\r\x12\x15\n\rinstance_name\x18\x03 \x01(\t\"\x89\x01\n\x0eLdpLspPingInfo\x12)\n\x06status\x18\x01 \x01(\x0e\x32\x19.routing.LdpLspPingStatus\x12\x19\n\x11\x62\x66\x64_discriminator\x18\x02 \x01(\r\x12\x31\n\x0cnexthop_info\x18\x03 \x01(\x0b\x32\x1b.routing.MplsForwardingInfo\"o\n\x13LdpLspPingInfoReply\x12-\n\x06status\x18\x01 \x01(\x0e\x32\x1d.routing.LspPingGetInfoStatus\x12)\n\x08ldp_info\x18\x02 \x01(\x0b\x32\x17.routing.LdpLspPingInfo\"k\n\x15VpnLspPingInfoRequest\x12$\n\x06prefix\x18\x01 \x01(\x0b\x32\x14.routing.RoutePrefix\x12\x15\n\rprefix_length\x18\x02 \x01(\r\x12\x15\n\rinstance_name\x18\x03 \x01(\t\"\x97\x01\n\x0eVpnLspPingInfo\x12)\n\x06status\x18\x01 \x01(\x0e\x32\x19.routing.VpnLspPingStatus\x12\'\n\x02rd\x18\x02 \x01(\x0b\x32\x1b.routing.RouteDistinguisher\x12\x31\n\x0cnexthop_info\x18\x03 \x01(\x0b\x32\x1b.routing.MplsForwardingInfo\"o\n\x13VpnLspPingInfoReply\x12-\n\x06status\x18\x01 \x01(\x0e\x32\x1d.routing.LspPingGetInfoStatus\x12)\n\x08vpn_info\x18\x02 \x01(\x0b\x32\x17.routing.VpnLspPingInfo*u\n\x14LspPingGetInfoStatus\x12\x18\n\x14LSP_PING_GET_SUCCESS\x10\x00\x12\x1f\n\x1bLSP_PING_GET_INTERNAL_ERROR\x10\x01\x12\"\n\x1eLSP_PING_GET_INVALID_PARAMETER\x10\x02*\xac\x03\n\x11RsvpLspPingStatus\x12\x19\n\x15RSVP_LSP_PING_NOERROR\x10\x00\x12\x1e\n\x1aRSVP_LSP_PING_LSP_NOTFOUND\x10\x01\x12\x1e\n\x1aRSVP_LSP_PING_NO_RSVP_INFO\x10\x02\x12\x1e\n\x1aRSVP_LSP_PING_NO_PATH_INFO\x10\x03\x12\x1f\n\x1bRSVP_LSP_PING_NO_ROUTE_INFO\x10\x04\x12 \n\x1cRSVP_LSP_PING_NO_ACTIVE_PATH\x10\x05\x12\'\n#RSVP_LSP_PING_STANDBY_PATH_NOTFOUND\x10\x06\x12\x1b\n\x17RSVP_LSP_PING_CCC_NORRO\x10\x07\x12\x1c\n\x18RSVP_LSP_PING_P2MP_NOSUP\x10\x08\x12 \n\x1cRSVP_LSP_PING_P2MP_NO_EGRESS\x10\t\x12$\n RSVP_LSP_PING_P2MP_NO_FLOOD_NHOP\x10\n\x12-\n)RSVP_LSP_PING_BYPASS_NEED_IINTERFACE_NAME\x10\x0b*x\n\x18RsvpLspPingSuccessStatus\x12\x1d\n\x19RSVP_LSP_PING_LSP_PRIMARY\x10\x00\x12\x1f\n\x1bRSVP_LSP_PING_LSP_SECONDARY\x10\x01\x12\x1c\n\x18RSVP_LSP_PING_LSP_BYPASS\x10\x02*\x93\x01\n\x10LdpLspPingStatus\x12\x18\n\x14LDP_LSP_PING_NOERROR\x10\x00\x12\x1d\n\x19LDP_LSP_PING_FEC_NOTFOUND\x10\x01\x12\"\n\x1eLDP_LSP_PING_P2MP_FEC_NOTFOUND\x10\x02\x12\"\n\x1eLDP_LSP_PING_INSTANCE_NOTFOUND\x10\x03*\xec\x01\n\x10VpnLspPingStatus\x12\x18\n\x14VPN_LSP_PING_NOERROR\x10\x00\x12\x19\n\x15VPN_LSP_PING_NOTFOUND\x10\x01\x12\x1d\n\x19VPN_LSP_PING_PFX_NOTFOUND\x10\x02\x12\x1c\n\x18VPN_LSP_PING_NH_NOTFOUND\x10\x03\x12\x1e\n\x1aVPN_LSP_PING_NH_NOT_REMOTE\x10\x04\x12 \n\x1cVPN_LSP_PING_NH_NOT_RESOLVED\x10\x05\x12$\n VPN_LSP_PING_IN_GRACEFUL_RESTART\x10\x06\x32\x8b\x02\n\x07MplsApi\x12V\n\x12LspPingGetRsvpInfo\x12\x1f.routing.RsvpLspPingInfoRequest\x1a\x1d.routing.RsvpLspPingInfoReply\"\x00\x12S\n\x11LspPingGetLdpInfo\x12\x1e.routing.LdpLspPingInfoRequest\x1a\x1c.routing.LdpLspPingInfoReply\"\x00\x12S\n\x11LspPingGetVpnInfo\x12\x1e.routing.VpnLspPingInfoRequest\x1a\x1c.routing.VpnLspPingInfoReply\"\x00\x62\x06proto3')
  ,
  dependencies=[prpd__common__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_LSPPINGGETINFOSTATUS = _descriptor.EnumDescriptor(
  name='LspPingGetInfoStatus',
  full_name='routing.LspPingGetInfoStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LSP_PING_GET_SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LSP_PING_GET_INTERNAL_ERROR', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LSP_PING_GET_INVALID_PARAMETER', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1898,
  serialized_end=2015,
)
_sym_db.RegisterEnumDescriptor(_LSPPINGGETINFOSTATUS)

LspPingGetInfoStatus = enum_type_wrapper.EnumTypeWrapper(_LSPPINGGETINFOSTATUS)
_RSVPLSPPINGSTATUS = _descriptor.EnumDescriptor(
  name='RsvpLspPingStatus',
  full_name='routing.RsvpLspPingStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_NOERROR', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_LSP_NOTFOUND', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_NO_RSVP_INFO', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_NO_PATH_INFO', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_NO_ROUTE_INFO', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_NO_ACTIVE_PATH', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_STANDBY_PATH_NOTFOUND', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_CCC_NORRO', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_P2MP_NOSUP', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_P2MP_NO_EGRESS', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_P2MP_NO_FLOOD_NHOP', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_BYPASS_NEED_IINTERFACE_NAME', index=11, number=11,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2018,
  serialized_end=2446,
)
_sym_db.RegisterEnumDescriptor(_RSVPLSPPINGSTATUS)

RsvpLspPingStatus = enum_type_wrapper.EnumTypeWrapper(_RSVPLSPPINGSTATUS)
_RSVPLSPPINGSUCCESSSTATUS = _descriptor.EnumDescriptor(
  name='RsvpLspPingSuccessStatus',
  full_name='routing.RsvpLspPingSuccessStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_LSP_PRIMARY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_LSP_SECONDARY', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSVP_LSP_PING_LSP_BYPASS', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2448,
  serialized_end=2568,
)
_sym_db.RegisterEnumDescriptor(_RSVPLSPPINGSUCCESSSTATUS)

RsvpLspPingSuccessStatus = enum_type_wrapper.EnumTypeWrapper(_RSVPLSPPINGSUCCESSSTATUS)
_LDPLSPPINGSTATUS = _descriptor.EnumDescriptor(
  name='LdpLspPingStatus',
  full_name='routing.LdpLspPingStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LDP_LSP_PING_NOERROR', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LDP_LSP_PING_FEC_NOTFOUND', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LDP_LSP_PING_P2MP_FEC_NOTFOUND', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LDP_LSP_PING_INSTANCE_NOTFOUND', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2571,
  serialized_end=2718,
)
_sym_db.RegisterEnumDescriptor(_LDPLSPPINGSTATUS)

LdpLspPingStatus = enum_type_wrapper.EnumTypeWrapper(_LDPLSPPINGSTATUS)
_VPNLSPPINGSTATUS = _descriptor.EnumDescriptor(
  name='VpnLspPingStatus',
  full_name='routing.VpnLspPingStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='VPN_LSP_PING_NOERROR', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VPN_LSP_PING_NOTFOUND', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VPN_LSP_PING_PFX_NOTFOUND', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VPN_LSP_PING_NH_NOTFOUND', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VPN_LSP_PING_NH_NOT_REMOTE', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VPN_LSP_PING_NH_NOT_RESOLVED', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VPN_LSP_PING_IN_GRACEFUL_RESTART', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2721,
  serialized_end=2957,
)
_sym_db.RegisterEnumDescriptor(_VPNLSPPINGSTATUS)

VpnLspPingStatus = enum_type_wrapper.EnumTypeWrapper(_VPNLSPPINGSTATUS)
LSP_PING_GET_SUCCESS = 0
LSP_PING_GET_INTERNAL_ERROR = 1
LSP_PING_GET_INVALID_PARAMETER = 2
RSVP_LSP_PING_NOERROR = 0
RSVP_LSP_PING_LSP_NOTFOUND = 1
RSVP_LSP_PING_NO_RSVP_INFO = 2
RSVP_LSP_PING_NO_PATH_INFO = 3
RSVP_LSP_PING_NO_ROUTE_INFO = 4
RSVP_LSP_PING_NO_ACTIVE_PATH = 5
RSVP_LSP_PING_STANDBY_PATH_NOTFOUND = 6
RSVP_LSP_PING_CCC_NORRO = 7
RSVP_LSP_PING_P2MP_NOSUP = 8
RSVP_LSP_PING_P2MP_NO_EGRESS = 9
RSVP_LSP_PING_P2MP_NO_FLOOD_NHOP = 10
RSVP_LSP_PING_BYPASS_NEED_IINTERFACE_NAME = 11
RSVP_LSP_PING_LSP_PRIMARY = 0
RSVP_LSP_PING_LSP_SECONDARY = 1
RSVP_LSP_PING_LSP_BYPASS = 2
LDP_LSP_PING_NOERROR = 0
LDP_LSP_PING_FEC_NOTFOUND = 1
LDP_LSP_PING_P2MP_FEC_NOTFOUND = 2
LDP_LSP_PING_INSTANCE_NOTFOUND = 3
VPN_LSP_PING_NOERROR = 0
VPN_LSP_PING_NOTFOUND = 1
VPN_LSP_PING_PFX_NOTFOUND = 2
VPN_LSP_PING_NH_NOTFOUND = 3
VPN_LSP_PING_NH_NOT_REMOTE = 4
VPN_LSP_PING_NH_NOT_RESOLVED = 5
VPN_LSP_PING_IN_GRACEFUL_RESTART = 6



_RSVPLSPFLAGS = _descriptor.Descriptor(
  name='RsvpLspFlags',
  full_name='routing.RsvpLspFlags',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rsvp_dynamic_bypass_lsp', full_name='routing.RsvpLspFlags.rsvp_dynamic_bypass_lsp', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rsvp_manual_bypass_lsp', full_name='routing.RsvpLspFlags.rsvp_manual_bypass_lsp', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=54,
  serialized_end=133,
)


_RSVPLSPPINGINFOREQUEST = _descriptor.Descriptor(
  name='RsvpLspPingInfoRequest',
  full_name='routing.RsvpLspPingInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='flags', full_name='routing.RsvpLspPingInfoRequest.flags', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lsp_name', full_name='routing.RsvpLspPingInfoRequest.lsp_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path_name', full_name='routing.RsvpLspPingInfoRequest.path_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interface_name', full_name='routing.RsvpLspPingInfoRequest.interface_name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='instance_name', full_name='routing.RsvpLspPingInfoRequest.instance_name', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=136,
  serialized_end=282,
)


_MPLSFORWARDINGINFO = _descriptor.Descriptor(
  name='MplsForwardingInfo',
  full_name='routing.MplsForwardingInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nexthop_address', full_name='routing.MplsForwardingInfo.nexthop_address', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nexthop_router_id', full_name='routing.MplsForwardingInfo.nexthop_router_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nexthop_route_idx', full_name='routing.MplsForwardingInfo.nexthop_route_idx', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nexthop_control_channel_flag', full_name='routing.MplsForwardingInfo.nexthop_control_channel_flag', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nexthop_label', full_name='routing.MplsForwardingInfo.nexthop_label', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nexthop_interface_name', full_name='routing.MplsForwardingInfo.nexthop_interface_name', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=285,
  serialized_end=564,
)


_RSVPLSPPINGINFO = _descriptor.Descriptor(
  name='RsvpLspPingInfo',
  full_name='routing.RsvpLspPingInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='routing.RsvpLspPingInfo.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='success_status', full_name='routing.RsvpLspPingInfo.success_status', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='destination_address', full_name='routing.RsvpLspPingInfo.destination_address', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ext_tunnel_id', full_name='routing.RsvpLspPingInfo.ext_tunnel_id', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sender_address', full_name='routing.RsvpLspPingInfo.sender_address', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tunnel_id', full_name='routing.RsvpLspPingInfo.tunnel_id', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lsp_id', full_name='routing.RsvpLspPingInfo.lsp_id', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nexthops', full_name='routing.RsvpLspPingInfo.nexthops', index=7,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bfd_discriminator', full_name='routing.RsvpLspPingInfo.bfd_discriminator', index=8,
      number=9, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lsp_from_address', full_name='routing.RsvpLspPingInfo.lsp_from_address', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sensor_id', full_name='routing.RsvpLspPingInfo.sensor_id', index=10,
      number=11, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='flags', full_name='routing.RsvpLspPingInfo.flags', index=11,
      number=12, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nexthop_info', full_name='routing.RsvpLspPingInfo.nexthop_info', index=12,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=567,
  serialized_end=1042,
)


_RSVPLSPPINGINFOREPLY = _descriptor.Descriptor(
  name='RsvpLspPingInfoReply',
  full_name='routing.RsvpLspPingInfoReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='routing.RsvpLspPingInfoReply.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rsvp_info', full_name='routing.RsvpLspPingInfoReply.rsvp_info', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1044,
  serialized_end=1158,
)


_LDPLSPPINGINFOREQUEST = _descriptor.Descriptor(
  name='LdpLspPingInfoRequest',
  full_name='routing.LdpLspPingInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='prefix', full_name='routing.LdpLspPingInfoRequest.prefix', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='prefix_length', full_name='routing.LdpLspPingInfoRequest.prefix_length', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='instance_name', full_name='routing.LdpLspPingInfoRequest.instance_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1160,
  serialized_end=1267,
)


_LDPLSPPINGINFO = _descriptor.Descriptor(
  name='LdpLspPingInfo',
  full_name='routing.LdpLspPingInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='routing.LdpLspPingInfo.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bfd_discriminator', full_name='routing.LdpLspPingInfo.bfd_discriminator', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nexthop_info', full_name='routing.LdpLspPingInfo.nexthop_info', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1270,
  serialized_end=1407,
)


_LDPLSPPINGINFOREPLY = _descriptor.Descriptor(
  name='LdpLspPingInfoReply',
  full_name='routing.LdpLspPingInfoReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='routing.LdpLspPingInfoReply.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ldp_info', full_name='routing.LdpLspPingInfoReply.ldp_info', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1409,
  serialized_end=1520,
)


_VPNLSPPINGINFOREQUEST = _descriptor.Descriptor(
  name='VpnLspPingInfoRequest',
  full_name='routing.VpnLspPingInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='prefix', full_name='routing.VpnLspPingInfoRequest.prefix', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='prefix_length', full_name='routing.VpnLspPingInfoRequest.prefix_length', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='instance_name', full_name='routing.VpnLspPingInfoRequest.instance_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1522,
  serialized_end=1629,
)


_VPNLSPPINGINFO = _descriptor.Descriptor(
  name='VpnLspPingInfo',
  full_name='routing.VpnLspPingInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='routing.VpnLspPingInfo.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rd', full_name='routing.VpnLspPingInfo.rd', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nexthop_info', full_name='routing.VpnLspPingInfo.nexthop_info', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1632,
  serialized_end=1783,
)


_VPNLSPPINGINFOREPLY = _descriptor.Descriptor(
  name='VpnLspPingInfoReply',
  full_name='routing.VpnLspPingInfoReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='routing.VpnLspPingInfoReply.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vpn_info', full_name='routing.VpnLspPingInfoReply.vpn_info', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1785,
  serialized_end=1896,
)

_RSVPLSPPINGINFOREQUEST.fields_by_name['flags'].message_type = _RSVPLSPFLAGS
_MPLSFORWARDINGINFO.fields_by_name['nexthop_address'].message_type = prpd__common__pb2._ROUTEPREFIX
_MPLSFORWARDINGINFO.fields_by_name['nexthop_router_id'].message_type = prpd__common__pb2._ROUTEPREFIX
_MPLSFORWARDINGINFO.fields_by_name['nexthop_route_idx'].message_type = prpd__common__pb2._ROUTEPREFIX
_MPLSFORWARDINGINFO.fields_by_name['nexthop_label'].message_type = prpd__common__pb2._LABELSTACK
_RSVPLSPPINGINFO.fields_by_name['status'].enum_type = _RSVPLSPPINGSTATUS
_RSVPLSPPINGINFO.fields_by_name['success_status'].enum_type = _RSVPLSPPINGSUCCESSSTATUS
_RSVPLSPPINGINFO.fields_by_name['destination_address'].message_type = prpd__common__pb2._ROUTEPREFIX
_RSVPLSPPINGINFO.fields_by_name['ext_tunnel_id'].message_type = prpd__common__pb2._ROUTEPREFIX
_RSVPLSPPINGINFO.fields_by_name['sender_address'].message_type = prpd__common__pb2._ROUTEPREFIX
_RSVPLSPPINGINFO.fields_by_name['lsp_from_address'].message_type = prpd__common__pb2._ROUTEPREFIX
_RSVPLSPPINGINFO.fields_by_name['nexthop_info'].message_type = _MPLSFORWARDINGINFO
_RSVPLSPPINGINFOREPLY.fields_by_name['status'].enum_type = _LSPPINGGETINFOSTATUS
_RSVPLSPPINGINFOREPLY.fields_by_name['rsvp_info'].message_type = _RSVPLSPPINGINFO
_LDPLSPPINGINFOREQUEST.fields_by_name['prefix'].message_type = prpd__common__pb2._ROUTEPREFIX
_LDPLSPPINGINFO.fields_by_name['status'].enum_type = _LDPLSPPINGSTATUS
_LDPLSPPINGINFO.fields_by_name['nexthop_info'].message_type = _MPLSFORWARDINGINFO
_LDPLSPPINGINFOREPLY.fields_by_name['status'].enum_type = _LSPPINGGETINFOSTATUS
_LDPLSPPINGINFOREPLY.fields_by_name['ldp_info'].message_type = _LDPLSPPINGINFO
_VPNLSPPINGINFOREQUEST.fields_by_name['prefix'].message_type = prpd__common__pb2._ROUTEPREFIX
_VPNLSPPINGINFO.fields_by_name['status'].enum_type = _VPNLSPPINGSTATUS
_VPNLSPPINGINFO.fields_by_name['rd'].message_type = prpd__common__pb2._ROUTEDISTINGUISHER
_VPNLSPPINGINFO.fields_by_name['nexthop_info'].message_type = _MPLSFORWARDINGINFO
_VPNLSPPINGINFOREPLY.fields_by_name['status'].enum_type = _LSPPINGGETINFOSTATUS
_VPNLSPPINGINFOREPLY.fields_by_name['vpn_info'].message_type = _VPNLSPPINGINFO
DESCRIPTOR.message_types_by_name['RsvpLspFlags'] = _RSVPLSPFLAGS
DESCRIPTOR.message_types_by_name['RsvpLspPingInfoRequest'] = _RSVPLSPPINGINFOREQUEST
DESCRIPTOR.message_types_by_name['MplsForwardingInfo'] = _MPLSFORWARDINGINFO
DESCRIPTOR.message_types_by_name['RsvpLspPingInfo'] = _RSVPLSPPINGINFO
DESCRIPTOR.message_types_by_name['RsvpLspPingInfoReply'] = _RSVPLSPPINGINFOREPLY
DESCRIPTOR.message_types_by_name['LdpLspPingInfoRequest'] = _LDPLSPPINGINFOREQUEST
DESCRIPTOR.message_types_by_name['LdpLspPingInfo'] = _LDPLSPPINGINFO
DESCRIPTOR.message_types_by_name['LdpLspPingInfoReply'] = _LDPLSPPINGINFOREPLY
DESCRIPTOR.message_types_by_name['VpnLspPingInfoRequest'] = _VPNLSPPINGINFOREQUEST
DESCRIPTOR.message_types_by_name['VpnLspPingInfo'] = _VPNLSPPINGINFO
DESCRIPTOR.message_types_by_name['VpnLspPingInfoReply'] = _VPNLSPPINGINFOREPLY
DESCRIPTOR.enum_types_by_name['LspPingGetInfoStatus'] = _LSPPINGGETINFOSTATUS
DESCRIPTOR.enum_types_by_name['RsvpLspPingStatus'] = _RSVPLSPPINGSTATUS
DESCRIPTOR.enum_types_by_name['RsvpLspPingSuccessStatus'] = _RSVPLSPPINGSUCCESSSTATUS
DESCRIPTOR.enum_types_by_name['LdpLspPingStatus'] = _LDPLSPPINGSTATUS
DESCRIPTOR.enum_types_by_name['VpnLspPingStatus'] = _VPNLSPPINGSTATUS

RsvpLspFlags = _reflection.GeneratedProtocolMessageType('RsvpLspFlags', (_message.Message,), dict(
  DESCRIPTOR = _RSVPLSPFLAGS,
  __module__ = 'mpls_api_service_pb2'
  # @@protoc_insertion_point(class_scope:routing.RsvpLspFlags)
  ))
_sym_db.RegisterMessage(RsvpLspFlags)

RsvpLspPingInfoRequest = _reflection.GeneratedProtocolMessageType('RsvpLspPingInfoRequest', (_message.Message,), dict(
  DESCRIPTOR = _RSVPLSPPINGINFOREQUEST,
  __module__ = 'mpls_api_service_pb2'
  # @@protoc_insertion_point(class_scope:routing.RsvpLspPingInfoRequest)
  ))
_sym_db.RegisterMessage(RsvpLspPingInfoRequest)

MplsForwardingInfo = _reflection.GeneratedProtocolMessageType('MplsForwardingInfo', (_message.Message,), dict(
  DESCRIPTOR = _MPLSFORWARDINGINFO,
  __module__ = 'mpls_api_service_pb2'
  # @@protoc_insertion_point(class_scope:routing.MplsForwardingInfo)
  ))
_sym_db.RegisterMessage(MplsForwardingInfo)

RsvpLspPingInfo = _reflection.GeneratedProtocolMessageType('RsvpLspPingInfo', (_message.Message,), dict(
  DESCRIPTOR = _RSVPLSPPINGINFO,
  __module__ = 'mpls_api_service_pb2'
  # @@protoc_insertion_point(class_scope:routing.RsvpLspPingInfo)
  ))
_sym_db.RegisterMessage(RsvpLspPingInfo)

RsvpLspPingInfoReply = _reflection.GeneratedProtocolMessageType('RsvpLspPingInfoReply', (_message.Message,), dict(
  DESCRIPTOR = _RSVPLSPPINGINFOREPLY,
  __module__ = 'mpls_api_service_pb2'
  # @@protoc_insertion_point(class_scope:routing.RsvpLspPingInfoReply)
  ))
_sym_db.RegisterMessage(RsvpLspPingInfoReply)

LdpLspPingInfoRequest = _reflection.GeneratedProtocolMessageType('LdpLspPingInfoRequest', (_message.Message,), dict(
  DESCRIPTOR = _LDPLSPPINGINFOREQUEST,
  __module__ = 'mpls_api_service_pb2'
  # @@protoc_insertion_point(class_scope:routing.LdpLspPingInfoRequest)
  ))
_sym_db.RegisterMessage(LdpLspPingInfoRequest)

LdpLspPingInfo = _reflection.GeneratedProtocolMessageType('LdpLspPingInfo', (_message.Message,), dict(
  DESCRIPTOR = _LDPLSPPINGINFO,
  __module__ = 'mpls_api_service_pb2'
  # @@protoc_insertion_point(class_scope:routing.LdpLspPingInfo)
  ))
_sym_db.RegisterMessage(LdpLspPingInfo)

LdpLspPingInfoReply = _reflection.GeneratedProtocolMessageType('LdpLspPingInfoReply', (_message.Message,), dict(
  DESCRIPTOR = _LDPLSPPINGINFOREPLY,
  __module__ = 'mpls_api_service_pb2'
  # @@protoc_insertion_point(class_scope:routing.LdpLspPingInfoReply)
  ))
_sym_db.RegisterMessage(LdpLspPingInfoReply)

VpnLspPingInfoRequest = _reflection.GeneratedProtocolMessageType('VpnLspPingInfoRequest', (_message.Message,), dict(
  DESCRIPTOR = _VPNLSPPINGINFOREQUEST,
  __module__ = 'mpls_api_service_pb2'
  # @@protoc_insertion_point(class_scope:routing.VpnLspPingInfoRequest)
  ))
_sym_db.RegisterMessage(VpnLspPingInfoRequest)

VpnLspPingInfo = _reflection.GeneratedProtocolMessageType('VpnLspPingInfo', (_message.Message,), dict(
  DESCRIPTOR = _VPNLSPPINGINFO,
  __module__ = 'mpls_api_service_pb2'
  # @@protoc_insertion_point(class_scope:routing.VpnLspPingInfo)
  ))
_sym_db.RegisterMessage(VpnLspPingInfo)

VpnLspPingInfoReply = _reflection.GeneratedProtocolMessageType('VpnLspPingInfoReply', (_message.Message,), dict(
  DESCRIPTOR = _VPNLSPPINGINFOREPLY,
  __module__ = 'mpls_api_service_pb2'
  # @@protoc_insertion_point(class_scope:routing.VpnLspPingInfoReply)
  ))
_sym_db.RegisterMessage(VpnLspPingInfoReply)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class MplsApiStub(object):
    """*
    Following are services to get the appropriate information required to do
    a ping to the LSP.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.LspPingGetRsvpInfo = channel.unary_unary(
          '/routing.MplsApi/LspPingGetRsvpInfo',
          request_serializer=RsvpLspPingInfoRequest.SerializeToString,
          response_deserializer=RsvpLspPingInfoReply.FromString,
          )
      self.LspPingGetLdpInfo = channel.unary_unary(
          '/routing.MplsApi/LspPingGetLdpInfo',
          request_serializer=LdpLspPingInfoRequest.SerializeToString,
          response_deserializer=LdpLspPingInfoReply.FromString,
          )
      self.LspPingGetVpnInfo = channel.unary_unary(
          '/routing.MplsApi/LspPingGetVpnInfo',
          request_serializer=VpnLspPingInfoRequest.SerializeToString,
          response_deserializer=VpnLspPingInfoReply.FromString,
          )


  class MplsApiServicer(object):
    """*
    Following are services to get the appropriate information required to do
    a ping to the LSP.
    """

    def LspPingGetRsvpInfo(self, request, context):
      """* Service to get the RSVP LSP information 
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def LspPingGetLdpInfo(self, request, context):
      """* Service to get the LDP LSP information 
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def LspPingGetVpnInfo(self, request, context):
      """* Service to get the VPN LSP information 
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_MplsApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'LspPingGetRsvpInfo': grpc.unary_unary_rpc_method_handler(
            servicer.LspPingGetRsvpInfo,
            request_deserializer=RsvpLspPingInfoRequest.FromString,
            response_serializer=RsvpLspPingInfoReply.SerializeToString,
        ),
        'LspPingGetLdpInfo': grpc.unary_unary_rpc_method_handler(
            servicer.LspPingGetLdpInfo,
            request_deserializer=LdpLspPingInfoRequest.FromString,
            response_serializer=LdpLspPingInfoReply.SerializeToString,
        ),
        'LspPingGetVpnInfo': grpc.unary_unary_rpc_method_handler(
            servicer.LspPingGetVpnInfo,
            request_deserializer=VpnLspPingInfoRequest.FromString,
            response_serializer=VpnLspPingInfoReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'routing.MplsApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaMplsApiServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """*
    Following are services to get the appropriate information required to do
    a ping to the LSP.
    """
    def LspPingGetRsvpInfo(self, request, context):
      """* Service to get the RSVP LSP information 
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def LspPingGetLdpInfo(self, request, context):
      """* Service to get the LDP LSP information 
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def LspPingGetVpnInfo(self, request, context):
      """* Service to get the VPN LSP information 
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaMplsApiStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """*
    Following are services to get the appropriate information required to do
    a ping to the LSP.
    """
    def LspPingGetRsvpInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """* Service to get the RSVP LSP information 
      """
      raise NotImplementedError()
    LspPingGetRsvpInfo.future = None
    def LspPingGetLdpInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """* Service to get the LDP LSP information 
      """
      raise NotImplementedError()
    LspPingGetLdpInfo.future = None
    def LspPingGetVpnInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """* Service to get the VPN LSP information 
      """
      raise NotImplementedError()
    LspPingGetVpnInfo.future = None


  def beta_create_MplsApi_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('routing.MplsApi', 'LspPingGetLdpInfo'): LdpLspPingInfoRequest.FromString,
      ('routing.MplsApi', 'LspPingGetRsvpInfo'): RsvpLspPingInfoRequest.FromString,
      ('routing.MplsApi', 'LspPingGetVpnInfo'): VpnLspPingInfoRequest.FromString,
    }
    response_serializers = {
      ('routing.MplsApi', 'LspPingGetLdpInfo'): LdpLspPingInfoReply.SerializeToString,
      ('routing.MplsApi', 'LspPingGetRsvpInfo'): RsvpLspPingInfoReply.SerializeToString,
      ('routing.MplsApi', 'LspPingGetVpnInfo'): VpnLspPingInfoReply.SerializeToString,
    }
    method_implementations = {
      ('routing.MplsApi', 'LspPingGetLdpInfo'): face_utilities.unary_unary_inline(servicer.LspPingGetLdpInfo),
      ('routing.MplsApi', 'LspPingGetRsvpInfo'): face_utilities.unary_unary_inline(servicer.LspPingGetRsvpInfo),
      ('routing.MplsApi', 'LspPingGetVpnInfo'): face_utilities.unary_unary_inline(servicer.LspPingGetVpnInfo),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_MplsApi_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('routing.MplsApi', 'LspPingGetLdpInfo'): LdpLspPingInfoRequest.SerializeToString,
      ('routing.MplsApi', 'LspPingGetRsvpInfo'): RsvpLspPingInfoRequest.SerializeToString,
      ('routing.MplsApi', 'LspPingGetVpnInfo'): VpnLspPingInfoRequest.SerializeToString,
    }
    response_deserializers = {
      ('routing.MplsApi', 'LspPingGetLdpInfo'): LdpLspPingInfoReply.FromString,
      ('routing.MplsApi', 'LspPingGetRsvpInfo'): RsvpLspPingInfoReply.FromString,
      ('routing.MplsApi', 'LspPingGetVpnInfo'): VpnLspPingInfoReply.FromString,
    }
    cardinalities = {
      'LspPingGetLdpInfo': cardinality.Cardinality.UNARY_UNARY,
      'LspPingGetRsvpInfo': cardinality.Cardinality.UNARY_UNARY,
      'LspPingGetVpnInfo': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'routing.MplsApi', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
