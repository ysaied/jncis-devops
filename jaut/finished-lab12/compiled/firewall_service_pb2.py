# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: firewall_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import jnx_addr_pb2 as jnx__addr__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='firewall_service.proto',
  package='acl',
  syntax='proto3',
  serialized_pb=_b('\n\x16\x66irewall_service.proto\x12\x03\x61\x63l\x1a\x0ejnx_addr.proto\"\x1e\n\x0e\x41\x63\x63\x65ssListVoid\x12\x0c\n\x04void\x18\x01 \x01(\t\"\xea\x01\n\x12\x41\x63lPolicerTwoColor\x12$\n\x07\x62w_unit\x18\x01 \x01(\x0e\x32\x13.acl.AclPolicerRate\x12\x11\n\tbandwidth\x18\x02 \x01(\x04\x12,\n\nburst_unit\x18\x03 \x01(\x0e\x32\x18.acl.AclPolicerBurstSize\x12\x12\n\nburst_size\x18\x04 \x01(\x04\x12 \n\x02lp\x18\x05 \x01(\x0e\x32\x14.acl.AclLossPriority\x12\x11\n\tfc_string\x18\x06 \x01(\t\x12$\n\x07\x64iscard\x18\x07 \x01(\x0e\x32\x13.acl.AclBooleanType\"\xe1\x02\n\x1e\x41\x63lPolicerSingleRateThreeColor\x12\x30\n\x13\x63ommitted_rate_unit\x18\x01 \x01(\x0e\x32\x13.acl.AclPolicerRate\x12\x16\n\x0e\x63ommitted_rate\x18\x02 \x01(\x04\x12\x36\n\x14\x63ommitted_burst_unit\x18\x03 \x01(\x0e\x32\x18.acl.AclPolicerBurstSize\x12\x1c\n\x14\x63ommitted_burst_size\x18\x04 \x01(\x04\x12\x19\n\x11\x65xcess_burst_size\x18\x05 \x01(\x04\x12\x33\n\x11\x65xcess_burst_unit\x18\x06 \x01(\x0e\x32\x18.acl.AclPolicerBurstSize\x12$\n\x07\x64iscard\x18\x07 \x01(\x0e\x32\x13.acl.AclBooleanType\x12)\n\ncolor_mode\x18\x08 \x01(\x0e\x32\x15.acl.AclColorModeType\"\xa2\x03\n\x1b\x41\x63lPolicerTwoRateThreeColor\x12\x30\n\x13\x63ommitted_rate_unit\x18\x01 \x01(\x0e\x32\x13.acl.AclPolicerRate\x12\x16\n\x0e\x63ommitted_rate\x18\x02 \x01(\x04\x12\x36\n\x14\x63ommitted_burst_unit\x18\x03 \x01(\x0e\x32\x18.acl.AclPolicerBurstSize\x12\x1c\n\x14\x63ommitted_burst_size\x18\x04 \x01(\x04\x12-\n\x10\x65xcess_rate_unit\x18\x05 \x01(\x0e\x32\x13.acl.AclPolicerRate\x12\x13\n\x0b\x65xcess_rate\x18\x06 \x01(\x04\x12\x33\n\x11\x65xcess_burst_unit\x18\x07 \x01(\x0e\x32\x18.acl.AclPolicerBurstSize\x12\x19\n\x11\x65xcess_burst_size\x18\x08 \x01(\x04\x12$\n\x07\x64iscard\x18\t \x01(\x0e\x32\x13.acl.AclBooleanType\x12)\n\ncolor_mode\x18\n \x01(\x0e\x32\x15.acl.AclColorModeType\"\x80\x03\n\x16\x41\x63lPolicerHierarchical\x12\x30\n\x13\x61ggregate_rate_unit\x18\x01 \x01(\x0e\x32\x13.acl.AclPolicerRate\x12\x16\n\x0e\x61ggregate_rate\x18\x02 \x01(\x04\x12;\n\x19\x61ggregate_burst_size_unit\x18\x03 \x01(\x0e\x32\x18.acl.AclPolicerBurstSize\x12\x1c\n\x14\x61ggregate_burst_size\x18\x04 \x01(\x04\x12.\n\x11premium_rate_unit\x18\x05 \x01(\x0e\x32\x13.acl.AclPolicerRate\x12\x14\n\x0cpremium_rate\x18\x06 \x01(\x04\x12\x39\n\x17premium_burst_size_unit\x18\x07 \x01(\x0e\x32\x18.acl.AclPolicerBurstSize\x12\x1a\n\x12premium_burst_size\x18\x08 \x01(\x04\x12$\n\x07\x64iscard\x18\t \x01(\x0e\x32\x13.acl.AclBooleanType\"\xb5\x02\n\x13\x41\x63lPolicerParameter\x12\x36\n\x13two_color_parameter\x18\x01 \x01(\x0b\x32\x17.acl.AclPolicerTwoColorH\x00\x12G\n\x18sr_three_color_parameter\x18\x02 \x01(\x0b\x32#.acl.AclPolicerSingleRateThreeColorH\x00\x12\x44\n\x18tr_three_color_parameter\x18\x03 \x01(\x0b\x32 .acl.AclPolicerTwoRateThreeColorH\x00\x12=\n\x16hierarchical_parameter\x18\x04 \x01(\x0b\x32\x1b.acl.AclPolicerHierarchicalH\x00\x42\x18\n\x16OneOf_PolicerParameter\"\xb2\x01\n\x11\x41\x63\x63\x65ssListPolicer\x12\x14\n\x0cpolicer_name\x18\x01 \x01(\t\x12)\n\x0cpolicer_type\x18\x02 \x01(\x0e\x32\x13.acl.AclPolicerType\x12*\n\x0cpolicer_flag\x18\x03 \x01(\x0e\x32\x14.acl.AclPolicerFlags\x12\x30\n\x0epolicer_params\x18\x04 \x01(\x0b\x32\x18.acl.AclPolicerParameter\"s\n\x11\x41\x63lMatchIpAddress\x12 \n\x04\x61\x64\x64r\x18\x01 \x01(\x0b\x32\x12.jnxBase.IpAddress\x12\x12\n\nprefix_len\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"R\n\x0c\x41\x63lMatchPort\x12\x0b\n\x03min\x18\x01 \x01(\x05\x12\x0b\n\x03max\x18\x02 \x01(\x05\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"|\n\x14\x41\x63lMatchIpPrecedence\x12\x1c\n\x03min\x18\x01 \x01(\x0e\x32\x0f.acl.Precedence\x12\x1c\n\x03max\x18\x02 \x01(\x0e\x32\x0f.acl.Precedence\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"Z\n\x14\x41\x63lMatchTrafficClass\x12\x0b\n\x03min\x18\x01 \x01(\x05\x12\x0b\n\x03max\x18\x02 \x01(\x05\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"V\n\x10\x41\x63lMatchDscpCode\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"V\n\x10\x41\x63lMatchProtocol\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"V\n\x10\x41\x63lMatchIcmpType\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"V\n\x10\x41\x63lMatchIcmpCode\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"T\n\x0e\x41\x63lMatchPktLen\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"b\n\x14\x41\x63lMatchLossPriority\x12 \n\x02lp\x18\x01 \x01(\x0e\x32\x14.acl.AclLossPriority\x12(\n\x08match_op\x18\x02 \x01(\x0e\x32\x16.acl.AclMatchOperation\"o\n\x17\x41\x63lMatchForwardingClass\x12*\n\tfwd_class\x18\x01 \x01(\x0e\x32\x17.acl.AclForwardingClass\x12(\n\x08match_op\x18\x02 \x01(\x0e\x32\x16.acl.AclMatchOperation\"X\n\x12\x41\x63lMatchNextHeader\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"W\n\x11\x41\x63lMatchMplsLabel\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"T\n\x0e\x41\x63lMatchVlanId\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"T\n\x11\x41\x63lMatchMeshGroup\x12\x15\n\rmesh_group_id\x18\x01 \x01(\r\x12(\n\x08match_op\x18\x02 \x01(\x0e\x32\x16.acl.AclMatchOperation\"J\n\x0f\x41\x63lMatchL2Token\x12\r\n\x05token\x18\x01 \x01(\r\x12(\n\x08match_op\x18\x02 \x01(\x0e\x32\x16.acl.AclMatchOperation\"O\n\x10\x41\x63lMatchCfmLevel\x12\x11\n\tcfm_level\x18\x01 \x01(\r\x12(\n\x08match_op\x18\x02 \x01(\x0e\x32\x16.acl.AclMatchOperation\"W\n\x11\x41\x63lMatchCfmOpcode\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"Q\n\x0b\x41\x63lMatchTtl\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"\\\n\x16\x41\x63lMatchFragmentOffset\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\";\n\x10\x41\x63lActionPolicer\x12\'\n\x07policer\x18\x01 \x01(\x0b\x32\x16.acl.AccessListPolicer\"(\n\x10\x41\x63lActionCounter\x12\x14\n\x0c\x63ounter_name\x18\x01 \x01(\t\",\n\x15\x41\x63lActionSendToClient\x12\x13\n\x0b\x63lient_name\x18\x01 \x01(\t\"*\n\x13\x41\x63lActionCopyToHost\x12\x13\n\x0b\x63lient_name\x18\x01 \x01(\t\"4\n\x18\x41\x63lActionRoutingInstance\x12\x18\n\x10rt_instance_name\x18\x01 \x01(\t\"]\n\x18\x41\x63lActionPolicerInstance\x12\'\n\x07policer\x18\x01 \x01(\x0b\x32\x16.acl.AccessListPolicer\x12\x18\n\x10policer_instance\x18\x02 \x01(\t\"L\n\x19\x41\x63lActionTopologyRedirect\x12\x18\n\x10rt_instance_name\x18\x01 \x01(\t\x12\x15\n\rtopology_name\x18\x02 \x01(\t\"%\n\x13\x41\x63lActionSetNexthop\x12\x0e\n\x06nh_idx\x18\x01 \x01(\r\"9\n\x15\x41\x63lActionLossPriority\x12 \n\x02lp\x18\x01 \x01(\x0e\x32\x14.acl.AclLossPriority\"/\n\x1b\x41\x63lActionForwardingPriority\x12\x10\n\x08priority\x18\x01 \x01(\r\"?\n\x18\x41\x63lActionForwardingClass\x12#\n\x02\x66\x63\x18\x01 \x01(\x0e\x32\x17.acl.AclForwardingClass\"\"\n\x12\x41\x63lActionSetIpDscp\x12\x0c\n\x04\x64scp\x18\x01 \x01(\r\"_\n\x15\x41\x63lActionIflNameIndex\x12\x12\n\x08ifl_name\x18\x01 \x01(\tH\x00\x12\x13\n\tifl_index\x18\x02 \x01(\rH\x00\x42\x1d\n\x1b\x41\x63lEntryActionIflNameFormat\"S\n\x16\x41\x63lActionNextInterface\x12\x10\n\x08rti_name\x18\x01 \x01(\t\x12\'\n\x03ifl\x18\x02 \x01(\x0b\x32\x1a.acl.AclActionIflNameIndex\"Y\n\x0f\x41\x63lActionNextIp\x12\x10\n\x08rti_name\x18\x01 \x01(\t\x12 \n\x04\x61\x64\x64r\x18\x02 \x01(\x0b\x32\x12.jnxBase.IpAddress\x12\x12\n\nprefix_len\x18\x03 \x01(\r\"E\n\x0c\x41\x63lAdjacency\x12#\n\x04type\x18\x01 \x01(\x0e\x32\x15.acl.AclAdjacencyType\x12\x10\n\x08\x61\x63\x65_name\x18\x02 \x01(\t\"]\n\x14\x41\x63lMatchIflNameIndex\x12\x12\n\x08ifl_name\x18\x01 \x01(\tH\x00\x12\x13\n\tifl_index\x18\x02 \x01(\rH\x00\x42\x1c\n\x1a\x41\x63lEntryMatchIflNameFormat\"X\n\x12\x41\x63lMatchFlexOffset\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"\xb5\x01\n\x15\x41\x63lMatchFlexibleRange\x12\x37\n\x0cstart_offset\x18\x01 \x01(\x0e\x32!.acl.AclEntryMatchFlexStartOffest\x12\x12\n\nbit_length\x18\x02 \x01(\r\x12\x12\n\nbit_offset\x18\x03 \x01(\r\x12\x13\n\x0b\x62yte_offset\x18\x04 \x01(\r\x12&\n\x05range\x18\x05 \x01(\x0b\x32\x17.acl.AclMatchFlexOffset\"\x7f\n\x1b\x41\x63lMatchFlexibleOffsetRange\x12\x36\n\x10\x66lex_range_match\x18\x02 \x01(\x0b\x32\x1a.acl.AclMatchFlexibleRangeH\x00\x42(\n&Oneof_AclEntryMatchFlexibleOffsetRange\"\xb1\x01\n\x14\x41\x63lMatchFlexibleMask\x12\x37\n\x0cstart_offset\x18\x01 \x01(\x0e\x32!.acl.AclEntryMatchFlexStartOffest\x12\x12\n\nbit_length\x18\x02 \x01(\r\x12\x12\n\nbit_offset\x18\x03 \x01(\r\x12\x13\n\x0b\x62yte_offset\x18\x04 \x01(\r\x12\x0c\n\x04mask\x18\x05 \x01(\r\x12\x15\n\rprefix_string\x18\x06 \x01(\t\"{\n\x1a\x41\x63lMatchFlexibleOffsetMask\x12\x34\n\x0f\x66lex_mask_match\x18\x02 \x01(\x0b\x32\x19.acl.AclMatchFlexibleMaskH\x00\x42\'\n%Oneof_AclEntryMatchFlexibleOffsetMask\"s\n\x12\x41\x63lMatchMacAddress\x12!\n\x04\x61\x64\x64r\x18\x01 \x01(\x0b\x32\x13.jnxBase.MacAddress\x12\x10\n\x08\x61\x64\x64r_len\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"W\n\x11\x41\x63lMatchEtherType\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"Y\n\x13\x41\x63lMatchLearnVlanId\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"_\n\x19\x41\x63lMatchLearnVlanPriority\x12\x0b\n\x03min\x18\x01 \x01(\r\x12\x0b\n\x03max\x18\x02 \x01(\r\x12(\n\x08match_op\x18\x03 \x01(\x0e\x32\x16.acl.AclMatchOperation\"\"\n\x10\x41\x63lActionNextHop\x12\x0e\n\x06nh_idx\x18\x01 \x01(\r\"\xf6\x06\n\x11\x41\x63lEntryMatchInet\x12/\n\x0fmatch_dst_addrs\x18\x01 \x03(\x0b\x32\x16.acl.AclMatchIpAddress\x12/\n\x0fmatch_src_addrs\x18\x02 \x03(\x0b\x32\x16.acl.AclMatchIpAddress\x12*\n\x0fmatch_dst_ports\x18\x03 \x03(\x0b\x32\x11.acl.AclMatchPort\x12*\n\x0fmatch_src_ports\x18\x04 \x03(\x0b\x32\x11.acl.AclMatchPort\x12.\n\x0fmatch_dscp_code\x18\x05 \x03(\x0b\x32\x15.acl.AclMatchDscpCode\x12.\n\x0fmatch_protocols\x18\x06 \x03(\x0b\x32\x15.acl.AclMatchProtocol\x12.\n\x0fmatch_icmp_type\x18\x07 \x03(\x0b\x32\x15.acl.AclMatchIcmpType\x12.\n\x0fmatch_icmp_code\x18\x08 \x03(\x0b\x32\x15.acl.AclMatchIcmpCode\x12*\n\rmatch_pkt_len\x18\t \x03(\x0b\x32\x13.acl.AclMatchPktLen\x12#\n\tmatch_ttl\x18\n \x03(\x0b\x32\x10.acl.AclMatchTtl\x12-\n\x0e\x66ragment_flags\x18\x0b \x01(\x0e\x32\x15.acl.AclFragmentFlags\x12\x36\n\x11match_frag_offset\x18\x0c \x03(\x0b\x32\x1b.acl.AclMatchFragmentOffset\x12,\n\tifl_names\x18\r \x03(\x0b\x32\x19.acl.AclMatchIflNameIndex\x12\x36\n\x13match_ip_precedence\x18\x0e \x03(\x0b\x32\x19.acl.AclMatchIpPrecedence\x12+\n\x0bmatch_addrs\x18\x0f \x03(\x0b\x32\x16.acl.AclMatchIpAddress\x12&\n\x0bmatch_ports\x18\x10 \x03(\x0b\x32\x11.acl.AclMatchPort\x12:\n\x10match_flex_range\x18\x11 \x01(\x0b\x32 .acl.AclMatchFlexibleOffsetRange\x12\x38\n\x0fmatch_flex_mask\x18\x12 \x01(\x0b\x32\x1f.acl.AclMatchFlexibleOffsetMask\"\x96\x02\n\x1d\x41\x63lEntryInetTerminatingAction\x12,\n\raction_accept\x18\x01 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12-\n\x0e\x61\x63tion_discard\x18\x02 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12\x38\n\raction_reject\x18\x03 \x01(\x0e\x32\x1f.acl.AclEntryActionRejectReasonH\x00\x12\x37\n\x0e\x61\x63tion_rt_inst\x18\x04 \x01(\x0b\x32\x1d.acl.AclActionRoutingInstanceH\x00\x42%\n#Oneof_AclEntryInetTerminatingAction\"\xae\x02\n AclEntryInetNonTerminatingAction\x12+\n\x0c\x61\x63tion_count\x18\x01 \x01(\x0b\x32\x15.acl.AclActionCounter\x12\'\n\naction_log\x18\x02 \x01(\x0e\x32\x13.acl.AclBooleanType\x12*\n\raction_syslog\x18\x03 \x01(\x0e\x32\x13.acl.AclBooleanType\x12-\n\x0e\x61\x63tion_policer\x18\x04 \x01(\x0b\x32\x15.acl.AclActionPolicer\x12*\n\raction_sample\x18\x05 \x01(\x0e\x32\x13.acl.AclBooleanType\x12-\n\x10\x61\x63tion_next_term\x18\x06 \x01(\x0e\x32\x13.acl.AclBooleanType\"\x85\x01\n\x12\x41\x63lEntryInetAction\x12\x39\n\nactions_nt\x18\x01 \x01(\x0b\x32%.acl.AclEntryInetNonTerminatingAction\x12\x34\n\x08\x61\x63tion_t\x18\x02 \x01(\x0b\x32\".acl.AclEntryInetTerminatingAction\"\xc1\x01\n\x0c\x41\x63lInetEntry\x12\x10\n\x08\x61\x63\x65_name\x18\x01 \x01(\t\x12&\n\x06\x61\x63\x65_op\x18\x02 \x01(\x0e\x32\x16.acl.AclEntryOperation\x12$\n\tadjacency\x18\x03 \x01(\x0b\x32\x11.acl.AclAdjacency\x12\'\n\x07matches\x18\x04 \x01(\x0b\x32\x16.acl.AclEntryMatchInet\x12(\n\x07\x61\x63tions\x18\x05 \x01(\x0b\x32\x17.acl.AclEntryInetAction\"\xef\x04\n\x0f\x41\x63lEntryMatchEs\x12\x34\n\x13match_dst_mac_addrs\x18\x01 \x03(\x0b\x32\x17.acl.AclMatchMacAddress\x12\x34\n\x13match_src_mac_addrs\x18\x02 \x03(\x0b\x32\x17.acl.AclMatchMacAddress\x12*\n\x0fmatch_dst_ports\x18\x03 \x03(\x0b\x32\x11.acl.AclMatchPort\x12*\n\x0fmatch_src_ports\x18\x04 \x03(\x0b\x32\x11.acl.AclMatchPort\x12.\n\x0fmatch_dscp_code\x18\x05 \x03(\x0b\x32\x15.acl.AclMatchDscpCode\x12.\n\x0fmatch_protocols\x18\x06 \x03(\x0b\x32\x15.acl.AclMatchProtocol\x12.\n\x0fmatch_icmp_type\x18\x07 \x03(\x0b\x32\x15.acl.AclMatchIcmpType\x12.\n\x0fmatch_icmp_code\x18\x08 \x03(\x0b\x32\x15.acl.AclMatchIcmpCode\x12,\n\tifl_names\x18\t \x03(\x0b\x32\x19.acl.AclMatchIflNameIndex\x12\x30\n\x10match_ether_type\x18\n \x03(\x0b\x32\x16.acl.AclMatchEtherType\x12\x35\n\x13match_learn_vlan_id\x18\x0b \x03(\x0b\x32\x18.acl.AclMatchLearnVlanId\x12\x41\n\x19match_learn_vlan_priority\x18\x0c \x03(\x0b\x32\x1e.acl.AclMatchLearnVlanPriority\"\xff\x01\n\x1b\x41\x63lEntryEsTerminatingAction\x12,\n\raction_accept\x18\x01 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12-\n\x0e\x61\x63tion_discard\x18\x02 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12*\n\taction_nh\x18\x03 \x01(\x0b\x32\x15.acl.AclActionNextHopH\x00\x12\x32\n\x13\x61\x63tion_send_to_host\x18\x04 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x42#\n!Oneof_AclEntryEsTerminatingAction\"\xaf\x02\n\x1e\x41\x63lEntryEsNonTerminatingAction\x12+\n\x0c\x61\x63tion_count\x18\x01 \x01(\x0b\x32\x15.acl.AclActionCounter\x12\'\n\naction_log\x18\x02 \x01(\x0e\x32\x13.acl.AclBooleanType\x12*\n\raction_syslog\x18\x03 \x01(\x0e\x32\x13.acl.AclBooleanType\x12-\n\x0e\x61\x63tion_policer\x18\x04 \x01(\x0b\x32\x15.acl.AclActionPolicer\x12-\n\x10\x61\x63tion_next_term\x18\x05 \x01(\x0e\x32\x13.acl.AclBooleanType\x12-\n\taction_lp\x18\x06 \x01(\x0b\x32\x1a.acl.AclActionLossPriority\"\x7f\n\x10\x41\x63lEntryEsAction\x12\x37\n\nactions_nt\x18\x01 \x01(\x0b\x32#.acl.AclEntryEsNonTerminatingAction\x12\x32\n\x08\x61\x63tion_t\x18\x02 \x01(\x0b\x32 .acl.AclEntryEsTerminatingAction\"\xbb\x01\n\nAclEsEntry\x12\x10\n\x08\x61\x63\x65_name\x18\x01 \x01(\t\x12&\n\x06\x61\x63\x65_op\x18\x02 \x01(\x0e\x32\x16.acl.AclEntryOperation\x12$\n\tadjacency\x18\x03 \x01(\x0b\x32\x11.acl.AclAdjacency\x12%\n\x07matches\x18\x04 \x01(\x0b\x32\x14.acl.AclEntryMatchEs\x12&\n\x07\x61\x63tions\x18\x05 \x01(\x0b\x32\x15.acl.AclEntryEsAction\"\xc1\x07\n\x12\x41\x63lEntryMatchInet6\x12/\n\x0fmatch_dst_addrs\x18\x01 \x03(\x0b\x32\x16.acl.AclMatchIpAddress\x12/\n\x0fmatch_src_addrs\x18\x02 \x03(\x0b\x32\x16.acl.AclMatchIpAddress\x12*\n\x0fmatch_dst_ports\x18\x03 \x03(\x0b\x32\x11.acl.AclMatchPort\x12*\n\x0fmatch_src_ports\x18\x04 \x03(\x0b\x32\x11.acl.AclMatchPort\x12.\n\x0fmatch_dscp_code\x18\x05 \x03(\x0b\x32\x15.acl.AclMatchDscpCode\x12\x30\n\x11payload_protocols\x18\x06 \x03(\x0b\x32\x15.acl.AclMatchProtocol\x12.\n\x0fmatch_icmp_type\x18\x07 \x03(\x0b\x32\x15.acl.AclMatchIcmpType\x12.\n\x0fmatch_icmp_code\x18\x08 \x03(\x0b\x32\x15.acl.AclMatchIcmpCode\x12*\n\rmatch_pkt_len\x18\t \x03(\x0b\x32\x13.acl.AclMatchPktLen\x12-\n\x0e\x66ragment_flags\x18\n \x01(\x0e\x32\x15.acl.AclFragmentFlags\x12,\n\tifl_names\x18\x0b \x03(\x0b\x32\x19.acl.AclMatchIflNameIndex\x12\x38\n\x15match_traffic_classes\x18\x0c \x03(\x0b\x32\x19.acl.AclMatchTrafficClass\x12+\n\x0bmatch_addrs\x18\r \x03(\x0b\x32\x16.acl.AclMatchIpAddress\x12:\n\x10match_flex_range\x18\x0e \x01(\x0b\x32 .acl.AclMatchFlexibleOffsetRange\x12\x38\n\x0fmatch_flex_mask\x18\x0f \x01(\x0b\x32\x1f.acl.AclMatchFlexibleOffsetMask\x12\x32\n\x11ipv6_next_headers\x18\x10 \x03(\x0b\x32\x17.acl.AclMatchNextHeader\x12\x36\n\x13match_loss_priority\x18\x11 \x03(\x0b\x32\x19.acl.AclMatchLossPriority\x12\x35\n\x0fmatch_fwd_class\x18\x12 \x03(\x0b\x32\x1c.acl.AclMatchForwardingClass\x12&\n\x0bmatch_ports\x18\x13 \x03(\x0b\x32\x11.acl.AclMatchPort\"\xf8\x03\n\x1e\x41\x63lEntryInet6TerminatingAction\x12,\n\raction_accept\x18\x01 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12-\n\x0e\x61\x63tion_discard\x18\x02 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12\x38\n\raction_reject\x18\x03 \x01(\x0e\x32\x1f.acl.AclEntryActionRejectReasonH\x00\x12\x37\n\x0e\x61\x63tion_rt_inst\x18\x04 \x01(\x0b\x32\x1d.acl.AclActionRoutingInstanceH\x00\x12>\n\x14\x61\x63tion_topo_redirect\x18\x05 \x01(\x0b\x32\x1e.acl.AclActionTopologyRedirectH\x00\x12;\n\x15\x61\x63tion_send_to_client\x18\x06 \x01(\x0b\x32\x1a.acl.AclActionSendToClientH\x00\x12\x32\n\x13\x61\x63tion_send_to_host\x18\x07 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12-\n\taction_nh\x18\x08 \x01(\x0b\x32\x18.acl.AclActionSetNexthopH\x00\x42&\n$Oneof_AclEntryInet6TerminatingAction\"\x90\x06\n!AclEntryInet6NonTerminatingAction\x12+\n\x0c\x61\x63tion_count\x18\x01 \x01(\x0b\x32\x15.acl.AclActionCounter\x12\'\n\naction_log\x18\x02 \x01(\x0e\x32\x13.acl.AclBooleanType\x12*\n\raction_syslog\x18\x03 \x01(\x0e\x32\x13.acl.AclBooleanType\x12-\n\x0e\x61\x63tion_policer\x18\x04 \x01(\x0b\x32\x15.acl.AclActionPolicer\x12*\n\raction_sample\x18\x05 \x01(\x0e\x32\x13.acl.AclBooleanType\x12-\n\x10\x61\x63tion_next_term\x18\x06 \x01(\x0e\x32\x13.acl.AclBooleanType\x12/\n\x12\x61\x63tion_port_mirror\x18\x07 \x01(\x0e\x32\x13.acl.AclBooleanType\x12-\n\taction_lp\x18\x08 \x01(\x0b\x32\x1a.acl.AclActionLossPriority\x12\x37\n\x10\x61\x63tion_fwd_class\x18\t \x01(\x0b\x32\x1d.acl.AclActionForwardingClass\x12=\n\x13\x61\x63tion_fwd_priority\x18\n \x01(\x0b\x32 .acl.AclActionForwardingPriority\x12\x35\n\x10\x61\x63tion_next_intf\x18\x0b \x01(\x0b\x32\x1b.acl.AclActionNextInterface\x12,\n\x0e\x61\x63tion_next_ip\x18\x0c \x01(\x0b\x32\x14.acl.AclActionNextIp\x12/\n\x0e\x61\x63tion_ip_dscp\x18\r \x01(\x0b\x32\x17.acl.AclActionSetIpDscp\x12\x35\n\x13\x61\x63tion_copy_to_host\x18\x0e \x01(\x0b\x32\x18.acl.AclActionCopyToHost\x12:\n\x13\x61\x63tion_policer_inst\x18\x0f \x01(\x0b\x32\x1d.acl.AclActionPolicerInstance\"\x88\x01\n\x13\x41\x63lEntryInet6Action\x12:\n\nactions_nt\x18\x01 \x01(\x0b\x32&.acl.AclEntryInet6NonTerminatingAction\x12\x35\n\x08\x61\x63tion_t\x18\x02 \x01(\x0b\x32#.acl.AclEntryInet6TerminatingAction\"\xca\x0b\n\x11\x41\x63lEntryMatchVpls\x12/\n\x0fmatch_dst_addrs\x18\x01 \x03(\x0b\x32\x16.acl.AclMatchIpAddress\x12/\n\x0fmatch_src_addrs\x18\x02 \x03(\x0b\x32\x16.acl.AclMatchIpAddress\x12\x32\n\x12match_dst_v6_addrs\x18\x03 \x03(\x0b\x32\x16.acl.AclMatchIpAddress\x12\x32\n\x12match_src_v6_addrs\x18\x04 \x03(\x0b\x32\x16.acl.AclMatchIpAddress\x12*\n\x0fmatch_dst_ports\x18\x05 \x03(\x0b\x32\x11.acl.AclMatchPort\x12*\n\x0fmatch_src_ports\x18\x06 \x03(\x0b\x32\x11.acl.AclMatchPort\x12.\n\x0fmatch_dscp_code\x18\x07 \x03(\x0b\x32\x15.acl.AclMatchDscpCode\x12\x31\n\x12match_ip_protocols\x18\x08 \x03(\x0b\x32\x15.acl.AclMatchProtocol\x12\x30\n\x11payload_protocols\x18\t \x03(\x0b\x32\x15.acl.AclMatchProtocol\x12.\n\x0fmatch_icmp_type\x18\n \x03(\x0b\x32\x15.acl.AclMatchIcmpType\x12.\n\x0fmatch_icmp_code\x18\x0b \x03(\x0b\x32\x15.acl.AclMatchIcmpCode\x12,\n\tifl_names\x18\x0c \x03(\x0b\x32\x19.acl.AclMatchIflNameIndex\x12\x38\n\x15match_traffic_classes\x18\r \x03(\x0b\x32\x19.acl.AclMatchTrafficClass\x12\x32\n\x11ipv6_next_headers\x18\x0e \x03(\x0b\x32\x17.acl.AclMatchNextHeader\x12+\n\x0b\x65ther_types\x18\x0f \x03(\x0b\x32\x16.acl.AclMatchEtherType\x12/\n\x0ematch_src_macs\x18\x10 \x03(\x0b\x32\x17.acl.AclMatchMacAddress\x12/\n\x0ematch_dst_macs\x18\x11 \x03(\x0b\x32\x17.acl.AclMatchMacAddress\x12\x30\n\x10vlan_ether_types\x18\x12 \x03(\x0b\x32\x16.acl.AclMatchEtherType\x12+\n\x0elearn_vlan_ids\x18\x13 \x03(\x0b\x32\x13.acl.AclMatchVlanId\x12*\n\ruser_vlan_ids\x18\x14 \x03(\x0b\x32\x13.acl.AclMatchVlanId\x12;\n\x13learn_vlan_priority\x18\x15 \x03(\x0b\x32\x1e.acl.AclMatchLearnVlanPriority\x12(\n\tstp_state\x18\x16 \x01(\x0e\x32\x15.acl.AclStpMatchFlags\x12.\n\x0emesh_group_ids\x18\x17 \x03(\x0b\x32\x16.acl.AclMatchMeshGroup\x12+\n\x0b\x63\x66m_opcodes\x18\x18 \x03(\x0b\x32\x16.acl.AclMatchCfmOpcode\x12)\n\ncfm_levels\x18\x19 \x03(\x0b\x32\x15.acl.AclMatchCfmLevel\x12\'\n\tl2_tokens\x18\x1a \x03(\x0b\x32\x14.acl.AclMatchL2Token\x12.\n\x0ematch_v6_addrs\x18\x1b \x03(\x0b\x32\x16.acl.AclMatchIpAddress\x12:\n\x10match_flex_range\x18\x1c \x01(\x0b\x32 .acl.AclMatchFlexibleOffsetRange\x12\x38\n\x0fmatch_flex_mask\x18\x1d \x01(\x0b\x32\x1f.acl.AclMatchFlexibleOffsetMask\x12*\n\rmatch_pkt_len\x18\x1e \x03(\x0b\x32\x13.acl.AclMatchPktLen\"\xc3\x02\n\x1d\x41\x63lEntryVplsTerminatingAction\x12,\n\raction_accept\x18\x01 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12-\n\x0e\x61\x63tion_discard\x18\x02 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12;\n\x15\x61\x63tion_send_to_client\x18\x03 \x01(\x0b\x32\x1a.acl.AclActionSendToClientH\x00\x12\x32\n\x13\x61\x63tion_send_to_host\x18\x04 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12-\n\taction_nh\x18\x05 \x01(\x0b\x32\x18.acl.AclActionSetNexthopH\x00\x42%\n#Oneof_AclEntryVplsTerminatingAction\"\x97\x03\n AclEntryVplsNonTerminatingAction\x12+\n\x0c\x61\x63tion_count\x18\x01 \x01(\x0b\x32\x15.acl.AclActionCounter\x12\'\n\naction_log\x18\x02 \x01(\x0e\x32\x13.acl.AclBooleanType\x12*\n\raction_syslog\x18\x03 \x01(\x0e\x32\x13.acl.AclBooleanType\x12-\n\x0e\x61\x63tion_policer\x18\x04 \x01(\x0b\x32\x15.acl.AclActionPolicer\x12*\n\raction_sample\x18\x05 \x01(\x0e\x32\x13.acl.AclBooleanType\x12-\n\x10\x61\x63tion_next_term\x18\x06 \x01(\x0e\x32\x13.acl.AclBooleanType\x12\x30\n\x13\x61\x63tion_no_mac_learn\x18\x07 \x01(\x0e\x32\x13.acl.AclBooleanType\x12\x35\n\x13\x61\x63tion_copy_to_host\x18\x08 \x01(\x0b\x32\x18.acl.AclActionCopyToHost\"\x85\x01\n\x12\x41\x63lEntryVplsAction\x12\x39\n\nactions_nt\x18\x01 \x01(\x0b\x32%.acl.AclEntryVplsNonTerminatingAction\x12\x34\n\x08\x61\x63tion_t\x18\x02 \x01(\x0b\x32\".acl.AclEntryVplsTerminatingAction\"\xc9\x03\n\x10\x41\x63lEntryMatchCcc\x12*\n\rmatch_pkt_len\x18\x01 \x03(\x0b\x32\x13.acl.AclMatchPktLen\x12,\n\tifl_names\x18\x02 \x03(\x0b\x32\x19.acl.AclMatchIflNameIndex\x12+\n\x0b\x65ther_types\x18\x03 \x03(\x0b\x32\x16.acl.AclMatchEtherType\x12/\n\x0ematch_src_macs\x18\x04 \x03(\x0b\x32\x17.acl.AclMatchMacAddress\x12/\n\x0ematch_dst_macs\x18\x05 \x03(\x0b\x32\x17.acl.AclMatchMacAddress\x12+\n\x0b\x63\x66m_opcodes\x18\x06 \x03(\x0b\x32\x16.acl.AclMatchCfmOpcode\x12)\n\ncfm_levels\x18\x07 \x03(\x0b\x32\x15.acl.AclMatchCfmLevel\x12:\n\x10match_flex_range\x18\x08 \x01(\x0b\x32 .acl.AclMatchFlexibleOffsetRange\x12\x38\n\x0fmatch_flex_mask\x18\t \x01(\x0b\x32\x1f.acl.AclMatchFlexibleOffsetMask\"\x92\x02\n\x1c\x41\x63lEntryCccTerminatingAction\x12,\n\raction_accept\x18\x01 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12-\n\x0e\x61\x63tion_discard\x18\x02 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12;\n\x15\x61\x63tion_send_to_client\x18\x03 \x01(\x0b\x32\x1a.acl.AclActionSendToClientH\x00\x12\x32\n\x13\x61\x63tion_send_to_host\x18\x04 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x42$\n\"Oneof_AclEntryCccTerminatingAction\"\xb5\x02\n\x1f\x41\x63lEntryCccNonTerminatingAction\x12+\n\x0c\x61\x63tion_count\x18\x01 \x01(\x0b\x32\x15.acl.AclActionCounter\x12\'\n\naction_log\x18\x02 \x01(\x0e\x32\x13.acl.AclBooleanType\x12*\n\raction_syslog\x18\x03 \x01(\x0e\x32\x13.acl.AclBooleanType\x12-\n\x0e\x61\x63tion_policer\x18\x04 \x01(\x0b\x32\x15.acl.AclActionPolicer\x12*\n\raction_sample\x18\x05 \x01(\x0e\x32\x13.acl.AclBooleanType\x12\x35\n\x13\x61\x63tion_copy_to_host\x18\x06 \x01(\x0b\x32\x18.acl.AclActionCopyToHost\"\x82\x01\n\x11\x41\x63lEntryCccAction\x12\x38\n\nactions_nt\x18\x01 \x01(\x0b\x32$.acl.AclEntryCccNonTerminatingAction\x12\x33\n\x08\x61\x63tion_t\x18\x02 \x01(\x0b\x32!.acl.AclEntryCccTerminatingAction\"\x99\x07\n\x19\x41\x63lEntryMatchMultiService\x12/\n\x0fmatch_dst_addrs\x18\x01 \x03(\x0b\x32\x16.acl.AclMatchIpAddress\x12/\n\x0fmatch_src_addrs\x18\x02 \x03(\x0b\x32\x16.acl.AclMatchIpAddress\x12+\n\x0bmatch_addrs\x18\x03 \x03(\x0b\x32\x16.acl.AclMatchIpAddress\x12*\n\x0fmatch_dst_ports\x18\x04 \x03(\x0b\x32\x11.acl.AclMatchPort\x12*\n\x0fmatch_src_ports\x18\x05 \x03(\x0b\x32\x11.acl.AclMatchPort\x12\x31\n\x12match_ip_protocols\x18\x06 \x03(\x0b\x32\x15.acl.AclMatchProtocol\x12\x30\n\x11payload_protocols\x18\x07 \x03(\x0b\x32\x15.acl.AclMatchProtocol\x12.\n\x0fmatch_icmp_type\x18\x08 \x03(\x0b\x32\x15.acl.AclMatchIcmpType\x12.\n\x0fmatch_icmp_code\x18\t \x03(\x0b\x32\x15.acl.AclMatchIcmpCode\x12,\n\tifl_names\x18\n \x03(\x0b\x32\x19.acl.AclMatchIflNameIndex\x12\x32\n\x11ipv6_next_headers\x18\x0b \x03(\x0b\x32\x17.acl.AclMatchNextHeader\x12+\n\x0b\x65ther_types\x18\x0c \x03(\x0b\x32\x16.acl.AclMatchEtherType\x12/\n\x0ematch_src_macs\x18\r \x03(\x0b\x32\x17.acl.AclMatchMacAddress\x12/\n\x0ematch_dst_macs\x18\x0e \x03(\x0b\x32\x17.acl.AclMatchMacAddress\x12\x30\n\x10vlan_ether_types\x18\x0f \x03(\x0b\x32\x16.acl.AclMatchEtherType\x12(\n\tstp_state\x18\x10 \x01(\x0e\x32\x15.acl.AclStpMatchFlags\x12.\n\x0emesh_group_ids\x18\x11 \x03(\x0b\x32\x16.acl.AclMatchMeshGroup\x12\'\n\tl2_tokens\x18\x12 \x03(\x0b\x32\x14.acl.AclMatchL2Token\x12*\n\rmatch_pkt_len\x18\x13 \x03(\x0b\x32\x13.acl.AclMatchPktLen\"\xa4\x02\n%AclEntryMultiServiceTerminatingAction\x12,\n\raction_accept\x18\x01 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12-\n\x0e\x61\x63tion_discard\x18\x02 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12;\n\x15\x61\x63tion_send_to_client\x18\x03 \x01(\x0b\x32\x1a.acl.AclActionSendToClientH\x00\x12\x32\n\x13\x61\x63tion_send_to_host\x18\x04 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x42-\n+Oneof_AclEntryMultiServiceTerminatingAction\"\xed\x02\n(AclEntryMultiServiceNonTerminatingAction\x12+\n\x0c\x61\x63tion_count\x18\x01 \x01(\x0b\x32\x15.acl.AclActionCounter\x12\'\n\naction_log\x18\x02 \x01(\x0e\x32\x13.acl.AclBooleanType\x12*\n\raction_syslog\x18\x03 \x01(\x0e\x32\x13.acl.AclBooleanType\x12-\n\x0e\x61\x63tion_policer\x18\x04 \x01(\x0b\x32\x15.acl.AclActionPolicer\x12*\n\raction_sample\x18\x05 \x01(\x0e\x32\x13.acl.AclBooleanType\x12-\n\x10\x61\x63tion_next_term\x18\x06 \x01(\x0e\x32\x13.acl.AclBooleanType\x12\x35\n\x13\x61\x63tion_copy_to_host\x18\x07 \x01(\x0b\x32\x18.acl.AclActionCopyToHost\"\x9d\x01\n\x1a\x41\x63lEntryMultiServiceAction\x12\x41\n\nactions_nt\x18\x01 \x01(\x0b\x32-.acl.AclEntryMultiServiceNonTerminatingAction\x12<\n\x08\x61\x63tion_t\x18\x02 \x01(\x0b\x32*.acl.AclEntryMultiServiceTerminatingAction\"\x93\x02\n\x11\x41\x63lEntryMatchMpls\x12,\n\x0cmatch_label1\x18\x01 \x03(\x0b\x32\x16.acl.AclMatchMplsLabel\x12,\n\x0cmatch_label2\x18\x02 \x03(\x0b\x32\x16.acl.AclMatchMplsLabel\x12,\n\x0cmatch_label3\x18\x03 \x03(\x0b\x32\x16.acl.AclMatchMplsLabel\x12:\n\x10match_flex_range\x18\x04 \x01(\x0b\x32 .acl.AclMatchFlexibleOffsetRange\x12\x38\n\x0fmatch_flex_mask\x18\x05 \x01(\x0b\x32\x1f.acl.AclMatchFlexibleOffsetMask\"\xa3\x01\n\x1d\x41\x63lEntryMplsTerminatingAction\x12,\n\raction_accept\x18\x01 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x12-\n\x0e\x61\x63tion_discard\x18\x02 \x01(\x0e\x32\x13.acl.AclBooleanTypeH\x00\x42%\n#Oneof_AclEntryMplsTerminatingAction\"~\n AclEntryMplsNonTerminatingAction\x12+\n\x0c\x61\x63tion_count\x18\x01 \x01(\x0b\x32\x15.acl.AclActionCounter\x12-\n\x0e\x61\x63tion_policer\x18\x02 \x01(\x0b\x32\x15.acl.AclActionPolicer\"\x85\x01\n\x12\x41\x63lEntryMplsAction\x12\x39\n\nactions_nt\x18\x01 \x01(\x0b\x32%.acl.AclEntryMplsNonTerminatingAction\x12\x34\n\x08\x61\x63tion_t\x18\x02 \x01(\x0b\x32\".acl.AclEntryMplsTerminatingAction\"\xc4\x01\n\rAclInet6Entry\x12\x10\n\x08\x61\x63\x65_name\x18\x01 \x01(\t\x12&\n\x06\x61\x63\x65_op\x18\x02 \x01(\x0e\x32\x16.acl.AclEntryOperation\x12$\n\tadjacency\x18\x03 \x01(\x0b\x32\x11.acl.AclAdjacency\x12(\n\x07matches\x18\x04 \x01(\x0b\x32\x17.acl.AclEntryMatchInet6\x12)\n\x07\x61\x63tions\x18\x05 \x01(\x0b\x32\x18.acl.AclEntryInet6Action\"\xc1\x01\n\x0c\x41\x63lVplsEntry\x12\x10\n\x08\x61\x63\x65_name\x18\x01 \x01(\t\x12&\n\x06\x61\x63\x65_op\x18\x02 \x01(\x0e\x32\x16.acl.AclEntryOperation\x12$\n\tadjacency\x18\x03 \x01(\x0b\x32\x11.acl.AclAdjacency\x12\'\n\x07matches\x18\x04 \x01(\x0b\x32\x16.acl.AclEntryMatchVpls\x12(\n\x07\x61\x63tions\x18\x05 \x01(\x0b\x32\x17.acl.AclEntryVplsAction\"\xbe\x01\n\x0b\x41\x63lCccEntry\x12\x10\n\x08\x61\x63\x65_name\x18\x01 \x01(\t\x12&\n\x06\x61\x63\x65_op\x18\x02 \x01(\x0e\x32\x16.acl.AclEntryOperation\x12$\n\tadjacency\x18\x03 \x01(\x0b\x32\x11.acl.AclAdjacency\x12&\n\x07matches\x18\x04 \x01(\x0b\x32\x15.acl.AclEntryMatchCcc\x12\'\n\x07\x61\x63tions\x18\x05 \x01(\x0b\x32\x16.acl.AclEntryCccAction\"\xd9\x01\n\x14\x41\x63lMultiServiceEntry\x12\x10\n\x08\x61\x63\x65_name\x18\x01 \x01(\t\x12&\n\x06\x61\x63\x65_op\x18\x02 \x01(\x0e\x32\x16.acl.AclEntryOperation\x12$\n\tadjacency\x18\x03 \x01(\x0b\x32\x11.acl.AclAdjacency\x12/\n\x07matches\x18\x04 \x01(\x0b\x32\x1e.acl.AclEntryMatchMultiService\x12\x30\n\x07\x61\x63tions\x18\x05 \x01(\x0b\x32\x1f.acl.AclEntryMultiServiceAction\"\xc1\x01\n\x0c\x41\x63lMplsEntry\x12\x10\n\x08\x61\x63\x65_name\x18\x01 \x01(\t\x12&\n\x06\x61\x63\x65_op\x18\x02 \x01(\x0e\x32\x16.acl.AclEntryOperation\x12$\n\tadjacency\x18\x03 \x01(\x0b\x32\x11.acl.AclAdjacency\x12\'\n\x07matches\x18\x04 \x01(\x0b\x32\x16.acl.AclEntryMatchMpls\x12(\n\x07\x61\x63tions\x18\x05 \x01(\x0b\x32\x17.acl.AclEntryMplsAction\"\xc3\x02\n\x08\x41\x63lEntry\x12\'\n\ninet_entry\x18\x01 \x01(\x0b\x32\x11.acl.AclInetEntryH\x00\x12#\n\x08\x65s_entry\x18\x02 \x01(\x0b\x32\x0f.acl.AclEsEntryH\x00\x12)\n\x0binet6_entry\x18\x03 \x01(\x0b\x32\x12.acl.AclInet6EntryH\x00\x12\'\n\nvpls_entry\x18\x04 \x01(\x0b\x32\x11.acl.AclVplsEntryH\x00\x12%\n\tccc_entry\x18\x05 \x01(\x0b\x32\x10.acl.AclCccEntryH\x00\x12\x33\n\x0emservice_entry\x18\x06 \x01(\x0b\x32\x19.acl.AclMultiServiceEntryH\x00\x12\'\n\nmpls_entry\x18\x07 \x01(\x0b\x32\x11.acl.AclMplsEntryH\x00\x42\x10\n\x0eOneOf_AclEntry\"\xbc\x01\n\nAccessList\x12\x10\n\x08\x61\x63l_name\x18\x01 \x01(\t\x12&\n\x08\x61\x63l_type\x18\x02 \x01(\x0e\x32\x14.acl.AccessListTypes\x12+\n\nacl_family\x18\x03 \x01(\x0e\x32\x17.acl.AccessListFamilies\x12&\n\x08\x61\x63l_flag\x18\x04 \x01(\x0e\x32\x14.acl.AccessListFlags\x12\x1f\n\x08\x61\x63\x65_list\x18\x05 \x03(\x0b\x32\r.acl.AclEntry\"G\n\x11\x41\x63\x63\x65ssListCounter\x12\x1c\n\x03\x61\x63l\x18\x01 \x01(\x0b\x32\x0f.acl.AccessList\x12\x14\n\x0c\x63ounter_name\x18\x02 \x01(\t\"M\n\x15\x41\x63\x63\x65ssListCounterBulk\x12\x1c\n\x03\x61\x63l\x18\x01 \x01(\x0b\x32\x0f.acl.AccessList\x12\x16\n\x0estarting_index\x18\x02 \x01(\r\"B\n\x16\x41\x63\x63\x65ssListReturnStatus\x12(\n\x06status\x18\x01 \x01(\x0e\x32\x18.acl.AccessListReturnVal\"v\n\x14\x41\x63\x63\x65ssListCounterVal\x12\x14\n\x0c\x63ounter_name\x18\x01 \x01(\t\x12(\n\x06status\x18\x02 \x01(\x0e\x32\x18.acl.AccessListReturnVal\x12\r\n\x05\x62ytes\x18\x03 \x01(\x04\x12\x0f\n\x07packets\x18\x04 \x01(\x04\"5\n\x0e\x41\x63lBindObjVlan\x12\x11\n\tvlan_name\x18\x01 \x01(\t\x12\x10\n\x08rtb_name\x18\x02 \x01(\t\";\n\x16\x41\x63lBindObjBridgeDomain\x12\x0f\n\x07\x62\x64_name\x18\x01 \x01(\t\x12\x10\n\x08rtb_name\x18\x02 \x01(\t\"\xa3\x01\n\x16\x41\x63\x63\x65ssListBindObjPoint\x12\x0e\n\x04intf\x18\x01 \x01(\tH\x00\x12\x13\n\tfwd_table\x18\x02 \x01(\tH\x00\x12#\n\x04vlan\x18\x03 \x01(\x0b\x32\x13.acl.AclBindObjVlanH\x00\x12)\n\x02\x62\x64\x18\x04 \x01(\x0b\x32\x1b.acl.AclBindObjBridgeDomainH\x00\x42\x14\n\x12OneOf_AclBindPoint\"\xee\x01\n\x11\x41\x63\x63\x65ssListObjBind\x12\x1c\n\x03\x61\x63l\x18\x01 \x01(\x0b\x32\x0f.acl.AccessList\x12,\n\x08obj_type\x18\x02 \x01(\x0e\x32\x1a.acl.AccessListBindObjType\x12\x30\n\x0b\x62ind_object\x18\x03 \x01(\x0b\x32\x1b.acl.AccessListBindObjPoint\x12-\n\x0e\x62ind_direction\x18\x04 \x01(\x0e\x32\x15.acl.AclBindDirection\x12,\n\x0b\x62ind_family\x18\x05 \x01(\x0e\x32\x17.acl.AccessListFamilies*-\n\x0e\x41\x63lBooleanType\x12\r\n\tACL_FALSE\x10\x00\x12\x0c\n\x08\x41\x43L_TRUE\x10\x01*a\n\x11\x41\x63lMatchOperation\x12\x18\n\x14\x41\x43L_MATCH_OP_INVALID\x10\x00\x12\x16\n\x12\x41\x43L_MATCH_OP_EQUAL\x10\x01\x12\x1a\n\x16\x41\x43L_MATCH_OP_NOT_EQUAL\x10\x02*\xb1\x01\n\x0e\x41\x63lPolicerType\x12\x17\n\x13\x41\x43L_POLICER_INVALID\x10\x00\x12\x19\n\x15\x41\x43L_TWO_COLOR_POLICER\x10\x01\x12\'\n#ACL_SINGLE_RATE_THREE_COLOR_POLICER\x10\x02\x12$\n ACL_TWO_RATE_THREE_COLOR_POLICER\x10\x03\x12\x1c\n\x18\x41\x43L_HIERARCHICAL_POLICER\x10\x04*y\n\x0f\x41\x63lPolicerFlags\x12\x1c\n\x18\x41\x43L_POLICER_FLAG_INVALID\x10\x00\x12\"\n\x1e\x41\x43L_POLICER_FLAG_TERM_SPECIFIC\x10\x01\x12$\n ACL_POLICER_FLAG_FILTER_SPECIFIC\x10\x02*\x99\x01\n\x0e\x41\x63lPolicerRate\x12\x1c\n\x18\x41\x43L_POLICER_RATE_INVALID\x10\x00\x12\x18\n\x14\x41\x43L_POLICER_RATE_BPS\x10\x01\x12\x19\n\x15\x41\x43L_POLICER_RATE_KBPS\x10\x02\x12\x19\n\x15\x41\x43L_POLICER_RATE_MBPS\x10\x03\x12\x19\n\x15\x41\x43L_POLICER_RATE_GBPS\x10\x04*\xc0\x01\n\x13\x41\x63lPolicerBurstSize\x12\"\n\x1e\x41\x43L_POLICER_BURST_SIZE_INVALID\x10\x00\x12\x1f\n\x1b\x41\x43L_POLICER_BURST_SIZE_BYTE\x10\x01\x12 \n\x1c\x41\x43L_POLICER_BURST_SIZE_KBYTE\x10\x02\x12 \n\x1c\x41\x43L_POLICER_BURST_SIZE_MBYTE\x10\x03\x12 \n\x1c\x41\x43L_POLICER_BURST_SIZE_GBYTE\x10\x04*n\n\x10\x41\x63lColorModeType\x12\x1a\n\x16\x41\x43L_COLOR_MODE_INVALID\x10\x00\x12\x1e\n\x1a\x41\x43L_COLOR_MODE_COLOR_BLIND\x10\x01\x12\x1e\n\x1a\x41\x43L_COLOR_MODE_COLOR_AWARE\x10\x02*\xac\x01\n\x0f\x41\x63lLossPriority\x12\x1d\n\x19\x41\x43L_LOSS_PRIORITY_INVALID\x10\x00\x12\x1a\n\x16\x41\x43L_LOSS_PRIORITY_HIGH\x10\x01\x12!\n\x1d\x41\x43L_LOSS_PRIORITY_MEDIUM_HIGH\x10\x02\x12 \n\x1c\x41\x43L_LOSS_PRIORITY_MEDIUM_LOW\x10\x03\x12\x19\n\x15\x41\x43L_LOSS_PRIORITY_LOW\x10\x04*\xcc\x01\n\x12\x41\x63lForwardingClass\x12 \n\x1c\x41\x43L_FORWARDING_CLASS_INVALID\x10\x00\x12 \n\x1c\x41\x43L_FORWARDING_CLASS_ASSURED\x10\x01\x12$\n ACL_FORWARDING_CLASS_BEST_EFFORT\x10\x02\x12\"\n\x1e\x41\x43L_FORWARDING_CLASS_EXPEDITED\x10\x03\x12(\n$ACL_FORWARDING_CLASS_NETWORK_CONTROL\x10\x04*v\n\x10\x41\x63lStpMatchFlags\x12\x1e\n\x1a\x41\x43L_MATCH_STP_FLAG_INVALID\x10\x00\x12\x1f\n\x1b\x41\x43L_MATCH_STP_FLAG_BLOCKING\x10\x01\x12!\n\x1d\x41\x43L_MATCH_STP_FLAG_FORWARDING\x10\x02*\xd6\x05\n\x1a\x41\x63lEntryActionRejectReason\x12\x31\n-ACL_ACTION_REJECT_ADMINISTRATIVELY_PROHIBITED\x10\x00\x12\"\n\x1e\x41\x43L_ACTION_REJECT_BAD_HOST_TOS\x10\x01\x12%\n!ACL_ACTION_REJECT_BAD_NETWORK_TOS\x10\x02\x12*\n&ACL_ACTION_REJECT_FRAGMENTATION_NEEDED\x10\x03\x12%\n!ACL_ACTION_REJECT_HOST_PROHIBITED\x10\x04\x12\"\n\x1e\x41\x43L_ACTION_REJECT_HOST_UNKNOWN\x10\x05\x12&\n\"ACL_ACTION_REJECT_HOST_UNREACHABLE\x10\x06\x12(\n$ACL_ACTION_REJECT_NETWORK_PROHIBITED\x10\x07\x12%\n!ACL_ACTION_REJECT_NETWORK_UNKNOWN\x10\x08\x12)\n%ACL_ACTION_REJECT_NETWORK_UNREACHABLE\x10\t\x12&\n\"ACL_ACTION_REJECT_PORT_UNREACHABLE\x10\n\x12\'\n#ACL_ACTION_REJECT_PRECEDENCE_CUTOFF\x10\x0b\x12*\n&ACL_ACTION_REJECT_PRECEDENCE_VIOLATION\x10\x0c\x12*\n&ACL_ACTION_REJECT_PROTOCOL_UNREACHABLE\x10\r\x12*\n&ACL_ACTION_REJECT_SOURCE_HOST_ISOLATED\x10\x0e\x12)\n%ACL_ACTION_REJECT_SOURCE_ROUTE_FAILED\x10\x0f\x12\x1f\n\x1b\x41\x43L_ACTION_REJECT_TCP_RESET\x10\x10*\x84\x01\n\x10\x41\x63lFragmentFlags\x12\x15\n\x11\x41\x43L_FRAGMENT_NONE\x10\x00\x12\x15\n\x11\x41\x43L_DONT_FRAGMENT\x10\x01\x12\x13\n\x0f\x41\x43L_IS_FRAGMENT\x10\x02\x12\x16\n\x12\x41\x43L_FIRST_FRAGMENT\x10\x03\x12\x15\n\x11\x41\x43L_LAST_FRAGMENT\x10\x04*\xf6\x01\n\nPrecedence\x12\x18\n\x14\x41\x43L_PRECENCE_ROUTINE\x10\x00\x12\x19\n\x15\x41\x43L_PRECENCE_PRIORITY\x10\x01\x12\x1a\n\x16\x41\x43L_PRECENCE_IMMEDIATE\x10\x02\x12\x16\n\x12\x41\x43L_PRECENCE_FLASH\x10\x03\x12\x1f\n\x1b\x41\x43L_PRECENCE_FLASH_OVERRIDE\x10\x04\x12\x1d\n\x19\x41\x43L_PRECENCE_CRITICAL_ECP\x10\x05\x12!\n\x1d\x41\x43L_PRECENCE_INTERNET_CONTROL\x10\x06\x12\x1c\n\x18\x41\x43L_PRECENCE_NET_CONTROL\x10\x07*\x92\x01\n\x11\x41\x63lEntryOperation\x12\x1f\n\x1b\x41\x43L_ENTRY_OPERATION_INVALID\x10\x00\x12\x1b\n\x17\x41\x43L_ENTRY_OPERATION_ADD\x10\x01\x12\x1e\n\x1a\x41\x43L_ENTRY_OPERATION_DELETE\x10\x02\x12\x1f\n\x1b\x41\x43L_ENTRY_OPERATION_REPLACE\x10\x03*]\n\x10\x41\x63lAdjacencyType\x12\x16\n\x12\x41\x43L_ADJACENCY_NONE\x10\x00\x12\x17\n\x13\x41\x43L_ADJACENCY_AFTER\x10\x01\x12\x18\n\x14\x41\x43L_ADJACENCY_BEFORE\x10\x02*\xb1\x01\n\x1c\x41\x63lEntryMatchFlexStartOffest\x12!\n\x1d\x41\x43L_FLEX_MATCH_OFFSET_INVALID\x10\x00\x12%\n!ACL_FLEX_MATCH_OFFSET_LAYER_THREE\x10\x01\x12$\n ACL_FLEX_MATCH_OFFSET_LAYER_FOUR\x10\x02\x12!\n\x1d\x41\x43L_FLEX_MATCH_OFFSET_PAYLOAD\x10\x03*=\n\x0f\x41\x63\x63\x65ssListTypes\x12\x14\n\x10\x41\x43L_TYPE_INVALID\x10\x00\x12\x14\n\x10\x41\x43L_TYPE_CLASSIC\x10\x01*\xc5\x01\n\x12\x41\x63\x63\x65ssListFamilies\x12\x16\n\x12\x41\x43L_FAMILY_INVALID\x10\x00\x12\x13\n\x0f\x41\x43L_FAMILY_INET\x10\x01\x12\x14\n\x10\x41\x43L_FAMILY_INET6\x10\x02\x12\x11\n\rACL_FAMILY_ES\x10\x03\x12\x13\n\x0f\x41\x43L_FAMILY_VPLS\x10\x04\x12\x1b\n\x17\x41\x43L_FAMILY_MULTISERVICE\x10\x05\x12\x12\n\x0e\x41\x43L_FAMILY_CCC\x10\x06\x12\x13\n\x0f\x41\x43L_FAMILY_MPLS\x10\x07*%\n\x0f\x41\x63\x63\x65ssListFlags\x12\x12\n\x0e\x41\x43L_FLAGS_NONE\x10\x00*o\n\x10\x41\x63lBindDirection\x12\x1e\n\x1a\x41\x43L_BIND_DIRECTION_INVALID\x10\x00\x12\x1c\n\x18\x41\x43L_BIND_DIRECTION_INPUT\x10\x01\x12\x1d\n\x19\x41\x43L_BIND_DIRECTION_OUTPUT\x10\x02*\xd8\x01\n\x13\x41\x63\x63\x65ssListReturnVal\x12\x12\n\x0e\x41\x43L_STATUS_EOK\x10\x00\x12\x1b\n\x17\x41\x43L_STATUS_NULL_MESSAGE\x10\x01\x12\x1f\n\x1b\x41\x43L_STATUS_EINVALID_MESSAGE\x10\x02\x12\x18\n\x14\x41\x43L_STATUS_EINTERNAL\x10\x03\x12\x1e\n\x1a\x41\x43L_STATUS_EUNSUPPORTED_OP\x10\x04\x12\x1a\n\x16\x41\x43L_STATUS_NO_RESOURCE\x10\x05\x12\x19\n\x15\x41\x43L_STATUS_BS_TIMEOUT\x10\x06*\xb6\x01\n\x15\x41\x63\x63\x65ssListBindObjType\x12\x1d\n\x19\x41\x43L_BIND_OBJ_TYPE_INVALID\x10\x00\x12\x1f\n\x1b\x41\x43L_BIND_OBJ_TYPE_INTERFACE\x10\x01\x12\x1f\n\x1b\x41\x43L_BIND_OBJ_TYPE_FWD_TABLE\x10\x02\x12\x1a\n\x16\x41\x43L_BIND_OBJ_TYPE_VLAN\x10\x03\x12 \n\x1c\x41\x43L_BIND_OBJ_TYPE_BRG_DOMAIN\x10\x04\x32\xa3\t\n\nAclService\x12?\n\rAccessListAdd\x12\x0f.acl.AccessList\x1a\x1b.acl.AccessListReturnStatus\"\x00\x12\x42\n\x10\x41\x63\x63\x65ssListDelete\x12\x0f.acl.AccessList\x1a\x1b.acl.AccessListReturnStatus\"\x00\x12\x42\n\x10\x41\x63\x63\x65ssListChange\x12\x0f.acl.AccessList\x1a\x1b.acl.AccessListReturnStatus\"\x00\x12J\n\x11\x41\x63\x63\x65ssListBindAdd\x12\x16.acl.AccessListObjBind\x1a\x1b.acl.AccessListReturnStatus\"\x00\x12M\n\x14\x41\x63\x63\x65ssListBindDelete\x12\x16.acl.AccessListObjBind\x1a\x1b.acl.AccessListReturnStatus\"\x00\x12M\n\x14\x41\x63\x63\x65ssListPolicerAdd\x12\x16.acl.AccessListPolicer\x1a\x1b.acl.AccessListReturnStatus\"\x00\x12Q\n\x18\x41\x63\x63\x65ssListPolicerReplace\x12\x16.acl.AccessListPolicer\x1a\x1b.acl.AccessListReturnStatus\"\x00\x12P\n\x17\x41\x63\x63\x65ssListPolicerDelete\x12\x16.acl.AccessListPolicer\x1a\x1b.acl.AccessListReturnStatus\"\x00\x12K\n\x15\x41\x63\x63\x65ssListPileupStart\x12\x13.acl.AccessListVoid\x1a\x1b.acl.AccessListReturnStatus\"\x00\x12I\n\x13\x41\x63\x63\x65ssListPileupEnd\x12\x13.acl.AccessListVoid\x1a\x1b.acl.AccessListReturnStatus\"\x00\x12K\n\x14\x41\x63\x63\x65ssListCounterGet\x12\x16.acl.AccessListCounter\x1a\x19.acl.AccessListCounterVal\"\x00\x12R\n\x1b\x41\x63\x63\x65ssListPolicerCounterGet\x12\x16.acl.AccessListCounter\x1a\x19.acl.AccessListCounterVal\"\x00\x12O\n\x16\x41\x63\x63\x65ssListCounterClear\x12\x16.acl.AccessListCounter\x1a\x1b.acl.AccessListReturnStatus\"\x00\x12U\n\x18\x41\x63\x63\x65ssListCounterBulkGet\x12\x1a.acl.AccessListCounterBulk\x1a\x19.acl.AccessListCounterVal\"\x00\x30\x01\x12\\\n\x1f\x41\x63\x63\x65ssListPolicerCounterBulkGet\x12\x1a.acl.AccessListCounterBulk\x1a\x19.acl.AccessListCounterVal\"\x00\x30\x01\x62\x06proto3')
  ,
  dependencies=[jnx__addr__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_ACLBOOLEANTYPE = _descriptor.EnumDescriptor(
  name='AclBooleanType',
  full_name='acl.AclBooleanType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_FALSE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_TRUE', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=20153,
  serialized_end=20198,
)
_sym_db.RegisterEnumDescriptor(_ACLBOOLEANTYPE)

AclBooleanType = enum_type_wrapper.EnumTypeWrapper(_ACLBOOLEANTYPE)
_ACLMATCHOPERATION = _descriptor.EnumDescriptor(
  name='AclMatchOperation',
  full_name='acl.AclMatchOperation',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_MATCH_OP_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_MATCH_OP_EQUAL', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_MATCH_OP_NOT_EQUAL', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=20200,
  serialized_end=20297,
)
_sym_db.RegisterEnumDescriptor(_ACLMATCHOPERATION)

AclMatchOperation = enum_type_wrapper.EnumTypeWrapper(_ACLMATCHOPERATION)
_ACLPOLICERTYPE = _descriptor.EnumDescriptor(
  name='AclPolicerType',
  full_name='acl.AclPolicerType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_POLICER_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_TWO_COLOR_POLICER', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_SINGLE_RATE_THREE_COLOR_POLICER', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_TWO_RATE_THREE_COLOR_POLICER', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_HIERARCHICAL_POLICER', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=20300,
  serialized_end=20477,
)
_sym_db.RegisterEnumDescriptor(_ACLPOLICERTYPE)

AclPolicerType = enum_type_wrapper.EnumTypeWrapper(_ACLPOLICERTYPE)
_ACLPOLICERFLAGS = _descriptor.EnumDescriptor(
  name='AclPolicerFlags',
  full_name='acl.AclPolicerFlags',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_POLICER_FLAG_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_POLICER_FLAG_TERM_SPECIFIC', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_POLICER_FLAG_FILTER_SPECIFIC', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=20479,
  serialized_end=20600,
)
_sym_db.RegisterEnumDescriptor(_ACLPOLICERFLAGS)

AclPolicerFlags = enum_type_wrapper.EnumTypeWrapper(_ACLPOLICERFLAGS)
_ACLPOLICERRATE = _descriptor.EnumDescriptor(
  name='AclPolicerRate',
  full_name='acl.AclPolicerRate',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_POLICER_RATE_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_POLICER_RATE_BPS', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_POLICER_RATE_KBPS', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_POLICER_RATE_MBPS', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_POLICER_RATE_GBPS', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=20603,
  serialized_end=20756,
)
_sym_db.RegisterEnumDescriptor(_ACLPOLICERRATE)

AclPolicerRate = enum_type_wrapper.EnumTypeWrapper(_ACLPOLICERRATE)
_ACLPOLICERBURSTSIZE = _descriptor.EnumDescriptor(
  name='AclPolicerBurstSize',
  full_name='acl.AclPolicerBurstSize',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_POLICER_BURST_SIZE_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_POLICER_BURST_SIZE_BYTE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_POLICER_BURST_SIZE_KBYTE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_POLICER_BURST_SIZE_MBYTE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_POLICER_BURST_SIZE_GBYTE', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=20759,
  serialized_end=20951,
)
_sym_db.RegisterEnumDescriptor(_ACLPOLICERBURSTSIZE)

AclPolicerBurstSize = enum_type_wrapper.EnumTypeWrapper(_ACLPOLICERBURSTSIZE)
_ACLCOLORMODETYPE = _descriptor.EnumDescriptor(
  name='AclColorModeType',
  full_name='acl.AclColorModeType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_COLOR_MODE_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_COLOR_MODE_COLOR_BLIND', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_COLOR_MODE_COLOR_AWARE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=20953,
  serialized_end=21063,
)
_sym_db.RegisterEnumDescriptor(_ACLCOLORMODETYPE)

AclColorModeType = enum_type_wrapper.EnumTypeWrapper(_ACLCOLORMODETYPE)
_ACLLOSSPRIORITY = _descriptor.EnumDescriptor(
  name='AclLossPriority',
  full_name='acl.AclLossPriority',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_LOSS_PRIORITY_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_LOSS_PRIORITY_HIGH', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_LOSS_PRIORITY_MEDIUM_HIGH', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_LOSS_PRIORITY_MEDIUM_LOW', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_LOSS_PRIORITY_LOW', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=21066,
  serialized_end=21238,
)
_sym_db.RegisterEnumDescriptor(_ACLLOSSPRIORITY)

AclLossPriority = enum_type_wrapper.EnumTypeWrapper(_ACLLOSSPRIORITY)
_ACLFORWARDINGCLASS = _descriptor.EnumDescriptor(
  name='AclForwardingClass',
  full_name='acl.AclForwardingClass',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_FORWARDING_CLASS_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FORWARDING_CLASS_ASSURED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FORWARDING_CLASS_BEST_EFFORT', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FORWARDING_CLASS_EXPEDITED', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FORWARDING_CLASS_NETWORK_CONTROL', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=21241,
  serialized_end=21445,
)
_sym_db.RegisterEnumDescriptor(_ACLFORWARDINGCLASS)

AclForwardingClass = enum_type_wrapper.EnumTypeWrapper(_ACLFORWARDINGCLASS)
_ACLSTPMATCHFLAGS = _descriptor.EnumDescriptor(
  name='AclStpMatchFlags',
  full_name='acl.AclStpMatchFlags',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_MATCH_STP_FLAG_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_MATCH_STP_FLAG_BLOCKING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_MATCH_STP_FLAG_FORWARDING', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=21447,
  serialized_end=21565,
)
_sym_db.RegisterEnumDescriptor(_ACLSTPMATCHFLAGS)

AclStpMatchFlags = enum_type_wrapper.EnumTypeWrapper(_ACLSTPMATCHFLAGS)
_ACLENTRYACTIONREJECTREASON = _descriptor.EnumDescriptor(
  name='AclEntryActionRejectReason',
  full_name='acl.AclEntryActionRejectReason',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_ADMINISTRATIVELY_PROHIBITED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_BAD_HOST_TOS', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_BAD_NETWORK_TOS', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_FRAGMENTATION_NEEDED', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_HOST_PROHIBITED', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_HOST_UNKNOWN', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_HOST_UNREACHABLE', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_NETWORK_PROHIBITED', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_NETWORK_UNKNOWN', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_NETWORK_UNREACHABLE', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_PORT_UNREACHABLE', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_PRECEDENCE_CUTOFF', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_PRECEDENCE_VIOLATION', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_PROTOCOL_UNREACHABLE', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_SOURCE_HOST_ISOLATED', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_SOURCE_ROUTE_FAILED', index=15, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ACTION_REJECT_TCP_RESET', index=16, number=16,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=21568,
  serialized_end=22294,
)
_sym_db.RegisterEnumDescriptor(_ACLENTRYACTIONREJECTREASON)

AclEntryActionRejectReason = enum_type_wrapper.EnumTypeWrapper(_ACLENTRYACTIONREJECTREASON)
_ACLFRAGMENTFLAGS = _descriptor.EnumDescriptor(
  name='AclFragmentFlags',
  full_name='acl.AclFragmentFlags',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_FRAGMENT_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_DONT_FRAGMENT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_IS_FRAGMENT', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FIRST_FRAGMENT', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_LAST_FRAGMENT', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=22297,
  serialized_end=22429,
)
_sym_db.RegisterEnumDescriptor(_ACLFRAGMENTFLAGS)

AclFragmentFlags = enum_type_wrapper.EnumTypeWrapper(_ACLFRAGMENTFLAGS)
_PRECEDENCE = _descriptor.EnumDescriptor(
  name='Precedence',
  full_name='acl.Precedence',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_PRECENCE_ROUTINE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_PRECENCE_PRIORITY', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_PRECENCE_IMMEDIATE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_PRECENCE_FLASH', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_PRECENCE_FLASH_OVERRIDE', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_PRECENCE_CRITICAL_ECP', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_PRECENCE_INTERNET_CONTROL', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_PRECENCE_NET_CONTROL', index=7, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=22432,
  serialized_end=22678,
)
_sym_db.RegisterEnumDescriptor(_PRECEDENCE)

Precedence = enum_type_wrapper.EnumTypeWrapper(_PRECEDENCE)
_ACLENTRYOPERATION = _descriptor.EnumDescriptor(
  name='AclEntryOperation',
  full_name='acl.AclEntryOperation',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_ENTRY_OPERATION_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ENTRY_OPERATION_ADD', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ENTRY_OPERATION_DELETE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ENTRY_OPERATION_REPLACE', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=22681,
  serialized_end=22827,
)
_sym_db.RegisterEnumDescriptor(_ACLENTRYOPERATION)

AclEntryOperation = enum_type_wrapper.EnumTypeWrapper(_ACLENTRYOPERATION)
_ACLADJACENCYTYPE = _descriptor.EnumDescriptor(
  name='AclAdjacencyType',
  full_name='acl.AclAdjacencyType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_ADJACENCY_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ADJACENCY_AFTER', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_ADJACENCY_BEFORE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=22829,
  serialized_end=22922,
)
_sym_db.RegisterEnumDescriptor(_ACLADJACENCYTYPE)

AclAdjacencyType = enum_type_wrapper.EnumTypeWrapper(_ACLADJACENCYTYPE)
_ACLENTRYMATCHFLEXSTARTOFFEST = _descriptor.EnumDescriptor(
  name='AclEntryMatchFlexStartOffest',
  full_name='acl.AclEntryMatchFlexStartOffest',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_FLEX_MATCH_OFFSET_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FLEX_MATCH_OFFSET_LAYER_THREE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FLEX_MATCH_OFFSET_LAYER_FOUR', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FLEX_MATCH_OFFSET_PAYLOAD', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=22925,
  serialized_end=23102,
)
_sym_db.RegisterEnumDescriptor(_ACLENTRYMATCHFLEXSTARTOFFEST)

AclEntryMatchFlexStartOffest = enum_type_wrapper.EnumTypeWrapper(_ACLENTRYMATCHFLEXSTARTOFFEST)
_ACCESSLISTTYPES = _descriptor.EnumDescriptor(
  name='AccessListTypes',
  full_name='acl.AccessListTypes',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_TYPE_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_TYPE_CLASSIC', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=23104,
  serialized_end=23165,
)
_sym_db.RegisterEnumDescriptor(_ACCESSLISTTYPES)

AccessListTypes = enum_type_wrapper.EnumTypeWrapper(_ACCESSLISTTYPES)
_ACCESSLISTFAMILIES = _descriptor.EnumDescriptor(
  name='AccessListFamilies',
  full_name='acl.AccessListFamilies',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_FAMILY_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FAMILY_INET', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FAMILY_INET6', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FAMILY_ES', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FAMILY_VPLS', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FAMILY_MULTISERVICE', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FAMILY_CCC', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_FAMILY_MPLS', index=7, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=23168,
  serialized_end=23365,
)
_sym_db.RegisterEnumDescriptor(_ACCESSLISTFAMILIES)

AccessListFamilies = enum_type_wrapper.EnumTypeWrapper(_ACCESSLISTFAMILIES)
_ACCESSLISTFLAGS = _descriptor.EnumDescriptor(
  name='AccessListFlags',
  full_name='acl.AccessListFlags',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_FLAGS_NONE', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=23367,
  serialized_end=23404,
)
_sym_db.RegisterEnumDescriptor(_ACCESSLISTFLAGS)

AccessListFlags = enum_type_wrapper.EnumTypeWrapper(_ACCESSLISTFLAGS)
_ACLBINDDIRECTION = _descriptor.EnumDescriptor(
  name='AclBindDirection',
  full_name='acl.AclBindDirection',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_BIND_DIRECTION_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_BIND_DIRECTION_INPUT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_BIND_DIRECTION_OUTPUT', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=23406,
  serialized_end=23517,
)
_sym_db.RegisterEnumDescriptor(_ACLBINDDIRECTION)

AclBindDirection = enum_type_wrapper.EnumTypeWrapper(_ACLBINDDIRECTION)
_ACCESSLISTRETURNVAL = _descriptor.EnumDescriptor(
  name='AccessListReturnVal',
  full_name='acl.AccessListReturnVal',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_STATUS_EOK', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_STATUS_NULL_MESSAGE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_STATUS_EINVALID_MESSAGE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_STATUS_EINTERNAL', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_STATUS_EUNSUPPORTED_OP', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_STATUS_NO_RESOURCE', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_STATUS_BS_TIMEOUT', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=23520,
  serialized_end=23736,
)
_sym_db.RegisterEnumDescriptor(_ACCESSLISTRETURNVAL)

AccessListReturnVal = enum_type_wrapper.EnumTypeWrapper(_ACCESSLISTRETURNVAL)
_ACCESSLISTBINDOBJTYPE = _descriptor.EnumDescriptor(
  name='AccessListBindObjType',
  full_name='acl.AccessListBindObjType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACL_BIND_OBJ_TYPE_INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_BIND_OBJ_TYPE_INTERFACE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_BIND_OBJ_TYPE_FWD_TABLE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_BIND_OBJ_TYPE_VLAN', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACL_BIND_OBJ_TYPE_BRG_DOMAIN', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=23739,
  serialized_end=23921,
)
_sym_db.RegisterEnumDescriptor(_ACCESSLISTBINDOBJTYPE)

AccessListBindObjType = enum_type_wrapper.EnumTypeWrapper(_ACCESSLISTBINDOBJTYPE)
ACL_FALSE = 0
ACL_TRUE = 1
ACL_MATCH_OP_INVALID = 0
ACL_MATCH_OP_EQUAL = 1
ACL_MATCH_OP_NOT_EQUAL = 2
ACL_POLICER_INVALID = 0
ACL_TWO_COLOR_POLICER = 1
ACL_SINGLE_RATE_THREE_COLOR_POLICER = 2
ACL_TWO_RATE_THREE_COLOR_POLICER = 3
ACL_HIERARCHICAL_POLICER = 4
ACL_POLICER_FLAG_INVALID = 0
ACL_POLICER_FLAG_TERM_SPECIFIC = 1
ACL_POLICER_FLAG_FILTER_SPECIFIC = 2
ACL_POLICER_RATE_INVALID = 0
ACL_POLICER_RATE_BPS = 1
ACL_POLICER_RATE_KBPS = 2
ACL_POLICER_RATE_MBPS = 3
ACL_POLICER_RATE_GBPS = 4
ACL_POLICER_BURST_SIZE_INVALID = 0
ACL_POLICER_BURST_SIZE_BYTE = 1
ACL_POLICER_BURST_SIZE_KBYTE = 2
ACL_POLICER_BURST_SIZE_MBYTE = 3
ACL_POLICER_BURST_SIZE_GBYTE = 4
ACL_COLOR_MODE_INVALID = 0
ACL_COLOR_MODE_COLOR_BLIND = 1
ACL_COLOR_MODE_COLOR_AWARE = 2
ACL_LOSS_PRIORITY_INVALID = 0
ACL_LOSS_PRIORITY_HIGH = 1
ACL_LOSS_PRIORITY_MEDIUM_HIGH = 2
ACL_LOSS_PRIORITY_MEDIUM_LOW = 3
ACL_LOSS_PRIORITY_LOW = 4
ACL_FORWARDING_CLASS_INVALID = 0
ACL_FORWARDING_CLASS_ASSURED = 1
ACL_FORWARDING_CLASS_BEST_EFFORT = 2
ACL_FORWARDING_CLASS_EXPEDITED = 3
ACL_FORWARDING_CLASS_NETWORK_CONTROL = 4
ACL_MATCH_STP_FLAG_INVALID = 0
ACL_MATCH_STP_FLAG_BLOCKING = 1
ACL_MATCH_STP_FLAG_FORWARDING = 2
ACL_ACTION_REJECT_ADMINISTRATIVELY_PROHIBITED = 0
ACL_ACTION_REJECT_BAD_HOST_TOS = 1
ACL_ACTION_REJECT_BAD_NETWORK_TOS = 2
ACL_ACTION_REJECT_FRAGMENTATION_NEEDED = 3
ACL_ACTION_REJECT_HOST_PROHIBITED = 4
ACL_ACTION_REJECT_HOST_UNKNOWN = 5
ACL_ACTION_REJECT_HOST_UNREACHABLE = 6
ACL_ACTION_REJECT_NETWORK_PROHIBITED = 7
ACL_ACTION_REJECT_NETWORK_UNKNOWN = 8
ACL_ACTION_REJECT_NETWORK_UNREACHABLE = 9
ACL_ACTION_REJECT_PORT_UNREACHABLE = 10
ACL_ACTION_REJECT_PRECEDENCE_CUTOFF = 11
ACL_ACTION_REJECT_PRECEDENCE_VIOLATION = 12
ACL_ACTION_REJECT_PROTOCOL_UNREACHABLE = 13
ACL_ACTION_REJECT_SOURCE_HOST_ISOLATED = 14
ACL_ACTION_REJECT_SOURCE_ROUTE_FAILED = 15
ACL_ACTION_REJECT_TCP_RESET = 16
ACL_FRAGMENT_NONE = 0
ACL_DONT_FRAGMENT = 1
ACL_IS_FRAGMENT = 2
ACL_FIRST_FRAGMENT = 3
ACL_LAST_FRAGMENT = 4
ACL_PRECENCE_ROUTINE = 0
ACL_PRECENCE_PRIORITY = 1
ACL_PRECENCE_IMMEDIATE = 2
ACL_PRECENCE_FLASH = 3
ACL_PRECENCE_FLASH_OVERRIDE = 4
ACL_PRECENCE_CRITICAL_ECP = 5
ACL_PRECENCE_INTERNET_CONTROL = 6
ACL_PRECENCE_NET_CONTROL = 7
ACL_ENTRY_OPERATION_INVALID = 0
ACL_ENTRY_OPERATION_ADD = 1
ACL_ENTRY_OPERATION_DELETE = 2
ACL_ENTRY_OPERATION_REPLACE = 3
ACL_ADJACENCY_NONE = 0
ACL_ADJACENCY_AFTER = 1
ACL_ADJACENCY_BEFORE = 2
ACL_FLEX_MATCH_OFFSET_INVALID = 0
ACL_FLEX_MATCH_OFFSET_LAYER_THREE = 1
ACL_FLEX_MATCH_OFFSET_LAYER_FOUR = 2
ACL_FLEX_MATCH_OFFSET_PAYLOAD = 3
ACL_TYPE_INVALID = 0
ACL_TYPE_CLASSIC = 1
ACL_FAMILY_INVALID = 0
ACL_FAMILY_INET = 1
ACL_FAMILY_INET6 = 2
ACL_FAMILY_ES = 3
ACL_FAMILY_VPLS = 4
ACL_FAMILY_MULTISERVICE = 5
ACL_FAMILY_CCC = 6
ACL_FAMILY_MPLS = 7
ACL_FLAGS_NONE = 0
ACL_BIND_DIRECTION_INVALID = 0
ACL_BIND_DIRECTION_INPUT = 1
ACL_BIND_DIRECTION_OUTPUT = 2
ACL_STATUS_EOK = 0
ACL_STATUS_NULL_MESSAGE = 1
ACL_STATUS_EINVALID_MESSAGE = 2
ACL_STATUS_EINTERNAL = 3
ACL_STATUS_EUNSUPPORTED_OP = 4
ACL_STATUS_NO_RESOURCE = 5
ACL_STATUS_BS_TIMEOUT = 6
ACL_BIND_OBJ_TYPE_INVALID = 0
ACL_BIND_OBJ_TYPE_INTERFACE = 1
ACL_BIND_OBJ_TYPE_FWD_TABLE = 2
ACL_BIND_OBJ_TYPE_VLAN = 3
ACL_BIND_OBJ_TYPE_BRG_DOMAIN = 4



_ACCESSLISTVOID = _descriptor.Descriptor(
  name='AccessListVoid',
  full_name='acl.AccessListVoid',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='void', full_name='acl.AccessListVoid.void', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=47,
  serialized_end=77,
)


_ACLPOLICERTWOCOLOR = _descriptor.Descriptor(
  name='AclPolicerTwoColor',
  full_name='acl.AclPolicerTwoColor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bw_unit', full_name='acl.AclPolicerTwoColor.bw_unit', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bandwidth', full_name='acl.AclPolicerTwoColor.bandwidth', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='burst_unit', full_name='acl.AclPolicerTwoColor.burst_unit', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='burst_size', full_name='acl.AclPolicerTwoColor.burst_size', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lp', full_name='acl.AclPolicerTwoColor.lp', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fc_string', full_name='acl.AclPolicerTwoColor.fc_string', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='discard', full_name='acl.AclPolicerTwoColor.discard', index=6,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=80,
  serialized_end=314,
)


_ACLPOLICERSINGLERATETHREECOLOR = _descriptor.Descriptor(
  name='AclPolicerSingleRateThreeColor',
  full_name='acl.AclPolicerSingleRateThreeColor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='committed_rate_unit', full_name='acl.AclPolicerSingleRateThreeColor.committed_rate_unit', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='committed_rate', full_name='acl.AclPolicerSingleRateThreeColor.committed_rate', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='committed_burst_unit', full_name='acl.AclPolicerSingleRateThreeColor.committed_burst_unit', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='committed_burst_size', full_name='acl.AclPolicerSingleRateThreeColor.committed_burst_size', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='excess_burst_size', full_name='acl.AclPolicerSingleRateThreeColor.excess_burst_size', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='excess_burst_unit', full_name='acl.AclPolicerSingleRateThreeColor.excess_burst_unit', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='discard', full_name='acl.AclPolicerSingleRateThreeColor.discard', index=6,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='color_mode', full_name='acl.AclPolicerSingleRateThreeColor.color_mode', index=7,
      number=8, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=317,
  serialized_end=670,
)


_ACLPOLICERTWORATETHREECOLOR = _descriptor.Descriptor(
  name='AclPolicerTwoRateThreeColor',
  full_name='acl.AclPolicerTwoRateThreeColor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='committed_rate_unit', full_name='acl.AclPolicerTwoRateThreeColor.committed_rate_unit', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='committed_rate', full_name='acl.AclPolicerTwoRateThreeColor.committed_rate', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='committed_burst_unit', full_name='acl.AclPolicerTwoRateThreeColor.committed_burst_unit', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='committed_burst_size', full_name='acl.AclPolicerTwoRateThreeColor.committed_burst_size', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='excess_rate_unit', full_name='acl.AclPolicerTwoRateThreeColor.excess_rate_unit', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='excess_rate', full_name='acl.AclPolicerTwoRateThreeColor.excess_rate', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='excess_burst_unit', full_name='acl.AclPolicerTwoRateThreeColor.excess_burst_unit', index=6,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='excess_burst_size', full_name='acl.AclPolicerTwoRateThreeColor.excess_burst_size', index=7,
      number=8, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='discard', full_name='acl.AclPolicerTwoRateThreeColor.discard', index=8,
      number=9, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='color_mode', full_name='acl.AclPolicerTwoRateThreeColor.color_mode', index=9,
      number=10, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=673,
  serialized_end=1091,
)


_ACLPOLICERHIERARCHICAL = _descriptor.Descriptor(
  name='AclPolicerHierarchical',
  full_name='acl.AclPolicerHierarchical',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='aggregate_rate_unit', full_name='acl.AclPolicerHierarchical.aggregate_rate_unit', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='aggregate_rate', full_name='acl.AclPolicerHierarchical.aggregate_rate', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='aggregate_burst_size_unit', full_name='acl.AclPolicerHierarchical.aggregate_burst_size_unit', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='aggregate_burst_size', full_name='acl.AclPolicerHierarchical.aggregate_burst_size', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='premium_rate_unit', full_name='acl.AclPolicerHierarchical.premium_rate_unit', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='premium_rate', full_name='acl.AclPolicerHierarchical.premium_rate', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='premium_burst_size_unit', full_name='acl.AclPolicerHierarchical.premium_burst_size_unit', index=6,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='premium_burst_size', full_name='acl.AclPolicerHierarchical.premium_burst_size', index=7,
      number=8, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='discard', full_name='acl.AclPolicerHierarchical.discard', index=8,
      number=9, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1094,
  serialized_end=1478,
)


_ACLPOLICERPARAMETER = _descriptor.Descriptor(
  name='AclPolicerParameter',
  full_name='acl.AclPolicerParameter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='two_color_parameter', full_name='acl.AclPolicerParameter.two_color_parameter', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sr_three_color_parameter', full_name='acl.AclPolicerParameter.sr_three_color_parameter', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tr_three_color_parameter', full_name='acl.AclPolicerParameter.tr_three_color_parameter', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hierarchical_parameter', full_name='acl.AclPolicerParameter.hierarchical_parameter', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='OneOf_PolicerParameter', full_name='acl.AclPolicerParameter.OneOf_PolicerParameter',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1481,
  serialized_end=1790,
)


_ACCESSLISTPOLICER = _descriptor.Descriptor(
  name='AccessListPolicer',
  full_name='acl.AccessListPolicer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='policer_name', full_name='acl.AccessListPolicer.policer_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='policer_type', full_name='acl.AccessListPolicer.policer_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='policer_flag', full_name='acl.AccessListPolicer.policer_flag', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='policer_params', full_name='acl.AccessListPolicer.policer_params', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1793,
  serialized_end=1971,
)


_ACLMATCHIPADDRESS = _descriptor.Descriptor(
  name='AclMatchIpAddress',
  full_name='acl.AclMatchIpAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='addr', full_name='acl.AclMatchIpAddress.addr', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='prefix_len', full_name='acl.AclMatchIpAddress.prefix_len', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchIpAddress.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1973,
  serialized_end=2088,
)


_ACLMATCHPORT = _descriptor.Descriptor(
  name='AclMatchPort',
  full_name='acl.AclMatchPort',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchPort.min', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchPort.max', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchPort.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2090,
  serialized_end=2172,
)


_ACLMATCHIPPRECEDENCE = _descriptor.Descriptor(
  name='AclMatchIpPrecedence',
  full_name='acl.AclMatchIpPrecedence',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchIpPrecedence.min', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchIpPrecedence.max', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchIpPrecedence.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2174,
  serialized_end=2298,
)


_ACLMATCHTRAFFICCLASS = _descriptor.Descriptor(
  name='AclMatchTrafficClass',
  full_name='acl.AclMatchTrafficClass',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchTrafficClass.min', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchTrafficClass.max', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchTrafficClass.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2300,
  serialized_end=2390,
)


_ACLMATCHDSCPCODE = _descriptor.Descriptor(
  name='AclMatchDscpCode',
  full_name='acl.AclMatchDscpCode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchDscpCode.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchDscpCode.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchDscpCode.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2392,
  serialized_end=2478,
)


_ACLMATCHPROTOCOL = _descriptor.Descriptor(
  name='AclMatchProtocol',
  full_name='acl.AclMatchProtocol',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchProtocol.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchProtocol.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchProtocol.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2480,
  serialized_end=2566,
)


_ACLMATCHICMPTYPE = _descriptor.Descriptor(
  name='AclMatchIcmpType',
  full_name='acl.AclMatchIcmpType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchIcmpType.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchIcmpType.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchIcmpType.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2568,
  serialized_end=2654,
)


_ACLMATCHICMPCODE = _descriptor.Descriptor(
  name='AclMatchIcmpCode',
  full_name='acl.AclMatchIcmpCode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchIcmpCode.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchIcmpCode.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchIcmpCode.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2656,
  serialized_end=2742,
)


_ACLMATCHPKTLEN = _descriptor.Descriptor(
  name='AclMatchPktLen',
  full_name='acl.AclMatchPktLen',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchPktLen.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchPktLen.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchPktLen.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2744,
  serialized_end=2828,
)


_ACLMATCHLOSSPRIORITY = _descriptor.Descriptor(
  name='AclMatchLossPriority',
  full_name='acl.AclMatchLossPriority',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='lp', full_name='acl.AclMatchLossPriority.lp', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchLossPriority.match_op', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2830,
  serialized_end=2928,
)


_ACLMATCHFORWARDINGCLASS = _descriptor.Descriptor(
  name='AclMatchForwardingClass',
  full_name='acl.AclMatchForwardingClass',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fwd_class', full_name='acl.AclMatchForwardingClass.fwd_class', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchForwardingClass.match_op', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2930,
  serialized_end=3041,
)


_ACLMATCHNEXTHEADER = _descriptor.Descriptor(
  name='AclMatchNextHeader',
  full_name='acl.AclMatchNextHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchNextHeader.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchNextHeader.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchNextHeader.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3043,
  serialized_end=3131,
)


_ACLMATCHMPLSLABEL = _descriptor.Descriptor(
  name='AclMatchMplsLabel',
  full_name='acl.AclMatchMplsLabel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchMplsLabel.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchMplsLabel.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchMplsLabel.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3133,
  serialized_end=3220,
)


_ACLMATCHVLANID = _descriptor.Descriptor(
  name='AclMatchVlanId',
  full_name='acl.AclMatchVlanId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchVlanId.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchVlanId.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchVlanId.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3222,
  serialized_end=3306,
)


_ACLMATCHMESHGROUP = _descriptor.Descriptor(
  name='AclMatchMeshGroup',
  full_name='acl.AclMatchMeshGroup',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mesh_group_id', full_name='acl.AclMatchMeshGroup.mesh_group_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchMeshGroup.match_op', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3308,
  serialized_end=3392,
)


_ACLMATCHL2TOKEN = _descriptor.Descriptor(
  name='AclMatchL2Token',
  full_name='acl.AclMatchL2Token',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='token', full_name='acl.AclMatchL2Token.token', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchL2Token.match_op', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3394,
  serialized_end=3468,
)


_ACLMATCHCFMLEVEL = _descriptor.Descriptor(
  name='AclMatchCfmLevel',
  full_name='acl.AclMatchCfmLevel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cfm_level', full_name='acl.AclMatchCfmLevel.cfm_level', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchCfmLevel.match_op', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3470,
  serialized_end=3549,
)


_ACLMATCHCFMOPCODE = _descriptor.Descriptor(
  name='AclMatchCfmOpcode',
  full_name='acl.AclMatchCfmOpcode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchCfmOpcode.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchCfmOpcode.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchCfmOpcode.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3551,
  serialized_end=3638,
)


_ACLMATCHTTL = _descriptor.Descriptor(
  name='AclMatchTtl',
  full_name='acl.AclMatchTtl',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchTtl.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchTtl.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchTtl.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3640,
  serialized_end=3721,
)


_ACLMATCHFRAGMENTOFFSET = _descriptor.Descriptor(
  name='AclMatchFragmentOffset',
  full_name='acl.AclMatchFragmentOffset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchFragmentOffset.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchFragmentOffset.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchFragmentOffset.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3723,
  serialized_end=3815,
)


_ACLACTIONPOLICER = _descriptor.Descriptor(
  name='AclActionPolicer',
  full_name='acl.AclActionPolicer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='policer', full_name='acl.AclActionPolicer.policer', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3817,
  serialized_end=3876,
)


_ACLACTIONCOUNTER = _descriptor.Descriptor(
  name='AclActionCounter',
  full_name='acl.AclActionCounter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='counter_name', full_name='acl.AclActionCounter.counter_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3878,
  serialized_end=3918,
)


_ACLACTIONSENDTOCLIENT = _descriptor.Descriptor(
  name='AclActionSendToClient',
  full_name='acl.AclActionSendToClient',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='client_name', full_name='acl.AclActionSendToClient.client_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3920,
  serialized_end=3964,
)


_ACLACTIONCOPYTOHOST = _descriptor.Descriptor(
  name='AclActionCopyToHost',
  full_name='acl.AclActionCopyToHost',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='client_name', full_name='acl.AclActionCopyToHost.client_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3966,
  serialized_end=4008,
)


_ACLACTIONROUTINGINSTANCE = _descriptor.Descriptor(
  name='AclActionRoutingInstance',
  full_name='acl.AclActionRoutingInstance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rt_instance_name', full_name='acl.AclActionRoutingInstance.rt_instance_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4010,
  serialized_end=4062,
)


_ACLACTIONPOLICERINSTANCE = _descriptor.Descriptor(
  name='AclActionPolicerInstance',
  full_name='acl.AclActionPolicerInstance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='policer', full_name='acl.AclActionPolicerInstance.policer', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='policer_instance', full_name='acl.AclActionPolicerInstance.policer_instance', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4064,
  serialized_end=4157,
)


_ACLACTIONTOPOLOGYREDIRECT = _descriptor.Descriptor(
  name='AclActionTopologyRedirect',
  full_name='acl.AclActionTopologyRedirect',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rt_instance_name', full_name='acl.AclActionTopologyRedirect.rt_instance_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='topology_name', full_name='acl.AclActionTopologyRedirect.topology_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4159,
  serialized_end=4235,
)


_ACLACTIONSETNEXTHOP = _descriptor.Descriptor(
  name='AclActionSetNexthop',
  full_name='acl.AclActionSetNexthop',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nh_idx', full_name='acl.AclActionSetNexthop.nh_idx', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4237,
  serialized_end=4274,
)


_ACLACTIONLOSSPRIORITY = _descriptor.Descriptor(
  name='AclActionLossPriority',
  full_name='acl.AclActionLossPriority',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='lp', full_name='acl.AclActionLossPriority.lp', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4276,
  serialized_end=4333,
)


_ACLACTIONFORWARDINGPRIORITY = _descriptor.Descriptor(
  name='AclActionForwardingPriority',
  full_name='acl.AclActionForwardingPriority',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='priority', full_name='acl.AclActionForwardingPriority.priority', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4335,
  serialized_end=4382,
)


_ACLACTIONFORWARDINGCLASS = _descriptor.Descriptor(
  name='AclActionForwardingClass',
  full_name='acl.AclActionForwardingClass',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fc', full_name='acl.AclActionForwardingClass.fc', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4384,
  serialized_end=4447,
)


_ACLACTIONSETIPDSCP = _descriptor.Descriptor(
  name='AclActionSetIpDscp',
  full_name='acl.AclActionSetIpDscp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dscp', full_name='acl.AclActionSetIpDscp.dscp', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4449,
  serialized_end=4483,
)


_ACLACTIONIFLNAMEINDEX = _descriptor.Descriptor(
  name='AclActionIflNameIndex',
  full_name='acl.AclActionIflNameIndex',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ifl_name', full_name='acl.AclActionIflNameIndex.ifl_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ifl_index', full_name='acl.AclActionIflNameIndex.ifl_index', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='AclEntryActionIflNameFormat', full_name='acl.AclActionIflNameIndex.AclEntryActionIflNameFormat',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4485,
  serialized_end=4580,
)


_ACLACTIONNEXTINTERFACE = _descriptor.Descriptor(
  name='AclActionNextInterface',
  full_name='acl.AclActionNextInterface',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rti_name', full_name='acl.AclActionNextInterface.rti_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ifl', full_name='acl.AclActionNextInterface.ifl', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4582,
  serialized_end=4665,
)


_ACLACTIONNEXTIP = _descriptor.Descriptor(
  name='AclActionNextIp',
  full_name='acl.AclActionNextIp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rti_name', full_name='acl.AclActionNextIp.rti_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='addr', full_name='acl.AclActionNextIp.addr', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='prefix_len', full_name='acl.AclActionNextIp.prefix_len', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4667,
  serialized_end=4756,
)


_ACLADJACENCY = _descriptor.Descriptor(
  name='AclAdjacency',
  full_name='acl.AclAdjacency',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='acl.AclAdjacency.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ace_name', full_name='acl.AclAdjacency.ace_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4758,
  serialized_end=4827,
)


_ACLMATCHIFLNAMEINDEX = _descriptor.Descriptor(
  name='AclMatchIflNameIndex',
  full_name='acl.AclMatchIflNameIndex',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ifl_name', full_name='acl.AclMatchIflNameIndex.ifl_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ifl_index', full_name='acl.AclMatchIflNameIndex.ifl_index', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='AclEntryMatchIflNameFormat', full_name='acl.AclMatchIflNameIndex.AclEntryMatchIflNameFormat',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4829,
  serialized_end=4922,
)


_ACLMATCHFLEXOFFSET = _descriptor.Descriptor(
  name='AclMatchFlexOffset',
  full_name='acl.AclMatchFlexOffset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchFlexOffset.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchFlexOffset.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchFlexOffset.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4924,
  serialized_end=5012,
)


_ACLMATCHFLEXIBLERANGE = _descriptor.Descriptor(
  name='AclMatchFlexibleRange',
  full_name='acl.AclMatchFlexibleRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_offset', full_name='acl.AclMatchFlexibleRange.start_offset', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bit_length', full_name='acl.AclMatchFlexibleRange.bit_length', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bit_offset', full_name='acl.AclMatchFlexibleRange.bit_offset', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='byte_offset', full_name='acl.AclMatchFlexibleRange.byte_offset', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='range', full_name='acl.AclMatchFlexibleRange.range', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5015,
  serialized_end=5196,
)


_ACLMATCHFLEXIBLEOFFSETRANGE = _descriptor.Descriptor(
  name='AclMatchFlexibleOffsetRange',
  full_name='acl.AclMatchFlexibleOffsetRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='flex_range_match', full_name='acl.AclMatchFlexibleOffsetRange.flex_range_match', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Oneof_AclEntryMatchFlexibleOffsetRange', full_name='acl.AclMatchFlexibleOffsetRange.Oneof_AclEntryMatchFlexibleOffsetRange',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=5198,
  serialized_end=5325,
)


_ACLMATCHFLEXIBLEMASK = _descriptor.Descriptor(
  name='AclMatchFlexibleMask',
  full_name='acl.AclMatchFlexibleMask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_offset', full_name='acl.AclMatchFlexibleMask.start_offset', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bit_length', full_name='acl.AclMatchFlexibleMask.bit_length', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bit_offset', full_name='acl.AclMatchFlexibleMask.bit_offset', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='byte_offset', full_name='acl.AclMatchFlexibleMask.byte_offset', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mask', full_name='acl.AclMatchFlexibleMask.mask', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='prefix_string', full_name='acl.AclMatchFlexibleMask.prefix_string', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5328,
  serialized_end=5505,
)


_ACLMATCHFLEXIBLEOFFSETMASK = _descriptor.Descriptor(
  name='AclMatchFlexibleOffsetMask',
  full_name='acl.AclMatchFlexibleOffsetMask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='flex_mask_match', full_name='acl.AclMatchFlexibleOffsetMask.flex_mask_match', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Oneof_AclEntryMatchFlexibleOffsetMask', full_name='acl.AclMatchFlexibleOffsetMask.Oneof_AclEntryMatchFlexibleOffsetMask',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=5507,
  serialized_end=5630,
)


_ACLMATCHMACADDRESS = _descriptor.Descriptor(
  name='AclMatchMacAddress',
  full_name='acl.AclMatchMacAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='addr', full_name='acl.AclMatchMacAddress.addr', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='addr_len', full_name='acl.AclMatchMacAddress.addr_len', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchMacAddress.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5632,
  serialized_end=5747,
)


_ACLMATCHETHERTYPE = _descriptor.Descriptor(
  name='AclMatchEtherType',
  full_name='acl.AclMatchEtherType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchEtherType.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchEtherType.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchEtherType.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5749,
  serialized_end=5836,
)


_ACLMATCHLEARNVLANID = _descriptor.Descriptor(
  name='AclMatchLearnVlanId',
  full_name='acl.AclMatchLearnVlanId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchLearnVlanId.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchLearnVlanId.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchLearnVlanId.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5838,
  serialized_end=5927,
)


_ACLMATCHLEARNVLANPRIORITY = _descriptor.Descriptor(
  name='AclMatchLearnVlanPriority',
  full_name='acl.AclMatchLearnVlanPriority',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='acl.AclMatchLearnVlanPriority.min', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='acl.AclMatchLearnVlanPriority.max', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_op', full_name='acl.AclMatchLearnVlanPriority.match_op', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5929,
  serialized_end=6024,
)


_ACLACTIONNEXTHOP = _descriptor.Descriptor(
  name='AclActionNextHop',
  full_name='acl.AclActionNextHop',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nh_idx', full_name='acl.AclActionNextHop.nh_idx', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6026,
  serialized_end=6060,
)


_ACLENTRYMATCHINET = _descriptor.Descriptor(
  name='AclEntryMatchInet',
  full_name='acl.AclEntryMatchInet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='match_dst_addrs', full_name='acl.AclEntryMatchInet.match_dst_addrs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_src_addrs', full_name='acl.AclEntryMatchInet.match_src_addrs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_dst_ports', full_name='acl.AclEntryMatchInet.match_dst_ports', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_src_ports', full_name='acl.AclEntryMatchInet.match_src_ports', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_dscp_code', full_name='acl.AclEntryMatchInet.match_dscp_code', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_protocols', full_name='acl.AclEntryMatchInet.match_protocols', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_icmp_type', full_name='acl.AclEntryMatchInet.match_icmp_type', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_icmp_code', full_name='acl.AclEntryMatchInet.match_icmp_code', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_pkt_len', full_name='acl.AclEntryMatchInet.match_pkt_len', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_ttl', full_name='acl.AclEntryMatchInet.match_ttl', index=9,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fragment_flags', full_name='acl.AclEntryMatchInet.fragment_flags', index=10,
      number=11, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_frag_offset', full_name='acl.AclEntryMatchInet.match_frag_offset', index=11,
      number=12, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ifl_names', full_name='acl.AclEntryMatchInet.ifl_names', index=12,
      number=13, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_ip_precedence', full_name='acl.AclEntryMatchInet.match_ip_precedence', index=13,
      number=14, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_addrs', full_name='acl.AclEntryMatchInet.match_addrs', index=14,
      number=15, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_ports', full_name='acl.AclEntryMatchInet.match_ports', index=15,
      number=16, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_flex_range', full_name='acl.AclEntryMatchInet.match_flex_range', index=16,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_flex_mask', full_name='acl.AclEntryMatchInet.match_flex_mask', index=17,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6063,
  serialized_end=6949,
)


_ACLENTRYINETTERMINATINGACTION = _descriptor.Descriptor(
  name='AclEntryInetTerminatingAction',
  full_name='acl.AclEntryInetTerminatingAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action_accept', full_name='acl.AclEntryInetTerminatingAction.action_accept', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_discard', full_name='acl.AclEntryInetTerminatingAction.action_discard', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_reject', full_name='acl.AclEntryInetTerminatingAction.action_reject', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_rt_inst', full_name='acl.AclEntryInetTerminatingAction.action_rt_inst', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Oneof_AclEntryInetTerminatingAction', full_name='acl.AclEntryInetTerminatingAction.Oneof_AclEntryInetTerminatingAction',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=6952,
  serialized_end=7230,
)


_ACLENTRYINETNONTERMINATINGACTION = _descriptor.Descriptor(
  name='AclEntryInetNonTerminatingAction',
  full_name='acl.AclEntryInetNonTerminatingAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action_count', full_name='acl.AclEntryInetNonTerminatingAction.action_count', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_log', full_name='acl.AclEntryInetNonTerminatingAction.action_log', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_syslog', full_name='acl.AclEntryInetNonTerminatingAction.action_syslog', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_policer', full_name='acl.AclEntryInetNonTerminatingAction.action_policer', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_sample', full_name='acl.AclEntryInetNonTerminatingAction.action_sample', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_next_term', full_name='acl.AclEntryInetNonTerminatingAction.action_next_term', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7233,
  serialized_end=7535,
)


_ACLENTRYINETACTION = _descriptor.Descriptor(
  name='AclEntryInetAction',
  full_name='acl.AclEntryInetAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='actions_nt', full_name='acl.AclEntryInetAction.actions_nt', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_t', full_name='acl.AclEntryInetAction.action_t', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7538,
  serialized_end=7671,
)


_ACLINETENTRY = _descriptor.Descriptor(
  name='AclInetEntry',
  full_name='acl.AclInetEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ace_name', full_name='acl.AclInetEntry.ace_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ace_op', full_name='acl.AclInetEntry.ace_op', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adjacency', full_name='acl.AclInetEntry.adjacency', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='matches', full_name='acl.AclInetEntry.matches', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='actions', full_name='acl.AclInetEntry.actions', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7674,
  serialized_end=7867,
)


_ACLENTRYMATCHES = _descriptor.Descriptor(
  name='AclEntryMatchEs',
  full_name='acl.AclEntryMatchEs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='match_dst_mac_addrs', full_name='acl.AclEntryMatchEs.match_dst_mac_addrs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_src_mac_addrs', full_name='acl.AclEntryMatchEs.match_src_mac_addrs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_dst_ports', full_name='acl.AclEntryMatchEs.match_dst_ports', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_src_ports', full_name='acl.AclEntryMatchEs.match_src_ports', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_dscp_code', full_name='acl.AclEntryMatchEs.match_dscp_code', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_protocols', full_name='acl.AclEntryMatchEs.match_protocols', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_icmp_type', full_name='acl.AclEntryMatchEs.match_icmp_type', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_icmp_code', full_name='acl.AclEntryMatchEs.match_icmp_code', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ifl_names', full_name='acl.AclEntryMatchEs.ifl_names', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_ether_type', full_name='acl.AclEntryMatchEs.match_ether_type', index=9,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_learn_vlan_id', full_name='acl.AclEntryMatchEs.match_learn_vlan_id', index=10,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_learn_vlan_priority', full_name='acl.AclEntryMatchEs.match_learn_vlan_priority', index=11,
      number=12, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7870,
  serialized_end=8493,
)


_ACLENTRYESTERMINATINGACTION = _descriptor.Descriptor(
  name='AclEntryEsTerminatingAction',
  full_name='acl.AclEntryEsTerminatingAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action_accept', full_name='acl.AclEntryEsTerminatingAction.action_accept', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_discard', full_name='acl.AclEntryEsTerminatingAction.action_discard', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_nh', full_name='acl.AclEntryEsTerminatingAction.action_nh', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_send_to_host', full_name='acl.AclEntryEsTerminatingAction.action_send_to_host', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Oneof_AclEntryEsTerminatingAction', full_name='acl.AclEntryEsTerminatingAction.Oneof_AclEntryEsTerminatingAction',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=8496,
  serialized_end=8751,
)


_ACLENTRYESNONTERMINATINGACTION = _descriptor.Descriptor(
  name='AclEntryEsNonTerminatingAction',
  full_name='acl.AclEntryEsNonTerminatingAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action_count', full_name='acl.AclEntryEsNonTerminatingAction.action_count', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_log', full_name='acl.AclEntryEsNonTerminatingAction.action_log', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_syslog', full_name='acl.AclEntryEsNonTerminatingAction.action_syslog', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_policer', full_name='acl.AclEntryEsNonTerminatingAction.action_policer', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_next_term', full_name='acl.AclEntryEsNonTerminatingAction.action_next_term', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_lp', full_name='acl.AclEntryEsNonTerminatingAction.action_lp', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8754,
  serialized_end=9057,
)


_ACLENTRYESACTION = _descriptor.Descriptor(
  name='AclEntryEsAction',
  full_name='acl.AclEntryEsAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='actions_nt', full_name='acl.AclEntryEsAction.actions_nt', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_t', full_name='acl.AclEntryEsAction.action_t', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9059,
  serialized_end=9186,
)


_ACLESENTRY = _descriptor.Descriptor(
  name='AclEsEntry',
  full_name='acl.AclEsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ace_name', full_name='acl.AclEsEntry.ace_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ace_op', full_name='acl.AclEsEntry.ace_op', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adjacency', full_name='acl.AclEsEntry.adjacency', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='matches', full_name='acl.AclEsEntry.matches', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='actions', full_name='acl.AclEsEntry.actions', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9189,
  serialized_end=9376,
)


_ACLENTRYMATCHINET6 = _descriptor.Descriptor(
  name='AclEntryMatchInet6',
  full_name='acl.AclEntryMatchInet6',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='match_dst_addrs', full_name='acl.AclEntryMatchInet6.match_dst_addrs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_src_addrs', full_name='acl.AclEntryMatchInet6.match_src_addrs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_dst_ports', full_name='acl.AclEntryMatchInet6.match_dst_ports', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_src_ports', full_name='acl.AclEntryMatchInet6.match_src_ports', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_dscp_code', full_name='acl.AclEntryMatchInet6.match_dscp_code', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='payload_protocols', full_name='acl.AclEntryMatchInet6.payload_protocols', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_icmp_type', full_name='acl.AclEntryMatchInet6.match_icmp_type', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_icmp_code', full_name='acl.AclEntryMatchInet6.match_icmp_code', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_pkt_len', full_name='acl.AclEntryMatchInet6.match_pkt_len', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fragment_flags', full_name='acl.AclEntryMatchInet6.fragment_flags', index=9,
      number=10, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ifl_names', full_name='acl.AclEntryMatchInet6.ifl_names', index=10,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_traffic_classes', full_name='acl.AclEntryMatchInet6.match_traffic_classes', index=11,
      number=12, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_addrs', full_name='acl.AclEntryMatchInet6.match_addrs', index=12,
      number=13, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_flex_range', full_name='acl.AclEntryMatchInet6.match_flex_range', index=13,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_flex_mask', full_name='acl.AclEntryMatchInet6.match_flex_mask', index=14,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ipv6_next_headers', full_name='acl.AclEntryMatchInet6.ipv6_next_headers', index=15,
      number=16, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_loss_priority', full_name='acl.AclEntryMatchInet6.match_loss_priority', index=16,
      number=17, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_fwd_class', full_name='acl.AclEntryMatchInet6.match_fwd_class', index=17,
      number=18, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_ports', full_name='acl.AclEntryMatchInet6.match_ports', index=18,
      number=19, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9379,
  serialized_end=10340,
)


_ACLENTRYINET6TERMINATINGACTION = _descriptor.Descriptor(
  name='AclEntryInet6TerminatingAction',
  full_name='acl.AclEntryInet6TerminatingAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action_accept', full_name='acl.AclEntryInet6TerminatingAction.action_accept', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_discard', full_name='acl.AclEntryInet6TerminatingAction.action_discard', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_reject', full_name='acl.AclEntryInet6TerminatingAction.action_reject', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_rt_inst', full_name='acl.AclEntryInet6TerminatingAction.action_rt_inst', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_topo_redirect', full_name='acl.AclEntryInet6TerminatingAction.action_topo_redirect', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_send_to_client', full_name='acl.AclEntryInet6TerminatingAction.action_send_to_client', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_send_to_host', full_name='acl.AclEntryInet6TerminatingAction.action_send_to_host', index=6,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_nh', full_name='acl.AclEntryInet6TerminatingAction.action_nh', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Oneof_AclEntryInet6TerminatingAction', full_name='acl.AclEntryInet6TerminatingAction.Oneof_AclEntryInet6TerminatingAction',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=10343,
  serialized_end=10847,
)


_ACLENTRYINET6NONTERMINATINGACTION = _descriptor.Descriptor(
  name='AclEntryInet6NonTerminatingAction',
  full_name='acl.AclEntryInet6NonTerminatingAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action_count', full_name='acl.AclEntryInet6NonTerminatingAction.action_count', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_log', full_name='acl.AclEntryInet6NonTerminatingAction.action_log', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_syslog', full_name='acl.AclEntryInet6NonTerminatingAction.action_syslog', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_policer', full_name='acl.AclEntryInet6NonTerminatingAction.action_policer', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_sample', full_name='acl.AclEntryInet6NonTerminatingAction.action_sample', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_next_term', full_name='acl.AclEntryInet6NonTerminatingAction.action_next_term', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_port_mirror', full_name='acl.AclEntryInet6NonTerminatingAction.action_port_mirror', index=6,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_lp', full_name='acl.AclEntryInet6NonTerminatingAction.action_lp', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_fwd_class', full_name='acl.AclEntryInet6NonTerminatingAction.action_fwd_class', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_fwd_priority', full_name='acl.AclEntryInet6NonTerminatingAction.action_fwd_priority', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_next_intf', full_name='acl.AclEntryInet6NonTerminatingAction.action_next_intf', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_next_ip', full_name='acl.AclEntryInet6NonTerminatingAction.action_next_ip', index=11,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_ip_dscp', full_name='acl.AclEntryInet6NonTerminatingAction.action_ip_dscp', index=12,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_copy_to_host', full_name='acl.AclEntryInet6NonTerminatingAction.action_copy_to_host', index=13,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_policer_inst', full_name='acl.AclEntryInet6NonTerminatingAction.action_policer_inst', index=14,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10850,
  serialized_end=11634,
)


_ACLENTRYINET6ACTION = _descriptor.Descriptor(
  name='AclEntryInet6Action',
  full_name='acl.AclEntryInet6Action',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='actions_nt', full_name='acl.AclEntryInet6Action.actions_nt', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_t', full_name='acl.AclEntryInet6Action.action_t', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11637,
  serialized_end=11773,
)


_ACLENTRYMATCHVPLS = _descriptor.Descriptor(
  name='AclEntryMatchVpls',
  full_name='acl.AclEntryMatchVpls',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='match_dst_addrs', full_name='acl.AclEntryMatchVpls.match_dst_addrs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_src_addrs', full_name='acl.AclEntryMatchVpls.match_src_addrs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_dst_v6_addrs', full_name='acl.AclEntryMatchVpls.match_dst_v6_addrs', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_src_v6_addrs', full_name='acl.AclEntryMatchVpls.match_src_v6_addrs', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_dst_ports', full_name='acl.AclEntryMatchVpls.match_dst_ports', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_src_ports', full_name='acl.AclEntryMatchVpls.match_src_ports', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_dscp_code', full_name='acl.AclEntryMatchVpls.match_dscp_code', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_ip_protocols', full_name='acl.AclEntryMatchVpls.match_ip_protocols', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='payload_protocols', full_name='acl.AclEntryMatchVpls.payload_protocols', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_icmp_type', full_name='acl.AclEntryMatchVpls.match_icmp_type', index=9,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_icmp_code', full_name='acl.AclEntryMatchVpls.match_icmp_code', index=10,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ifl_names', full_name='acl.AclEntryMatchVpls.ifl_names', index=11,
      number=12, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_traffic_classes', full_name='acl.AclEntryMatchVpls.match_traffic_classes', index=12,
      number=13, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ipv6_next_headers', full_name='acl.AclEntryMatchVpls.ipv6_next_headers', index=13,
      number=14, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ether_types', full_name='acl.AclEntryMatchVpls.ether_types', index=14,
      number=15, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_src_macs', full_name='acl.AclEntryMatchVpls.match_src_macs', index=15,
      number=16, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_dst_macs', full_name='acl.AclEntryMatchVpls.match_dst_macs', index=16,
      number=17, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vlan_ether_types', full_name='acl.AclEntryMatchVpls.vlan_ether_types', index=17,
      number=18, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='learn_vlan_ids', full_name='acl.AclEntryMatchVpls.learn_vlan_ids', index=18,
      number=19, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user_vlan_ids', full_name='acl.AclEntryMatchVpls.user_vlan_ids', index=19,
      number=20, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='learn_vlan_priority', full_name='acl.AclEntryMatchVpls.learn_vlan_priority', index=20,
      number=21, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stp_state', full_name='acl.AclEntryMatchVpls.stp_state', index=21,
      number=22, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mesh_group_ids', full_name='acl.AclEntryMatchVpls.mesh_group_ids', index=22,
      number=23, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cfm_opcodes', full_name='acl.AclEntryMatchVpls.cfm_opcodes', index=23,
      number=24, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cfm_levels', full_name='acl.AclEntryMatchVpls.cfm_levels', index=24,
      number=25, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='l2_tokens', full_name='acl.AclEntryMatchVpls.l2_tokens', index=25,
      number=26, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_v6_addrs', full_name='acl.AclEntryMatchVpls.match_v6_addrs', index=26,
      number=27, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_flex_range', full_name='acl.AclEntryMatchVpls.match_flex_range', index=27,
      number=28, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_flex_mask', full_name='acl.AclEntryMatchVpls.match_flex_mask', index=28,
      number=29, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_pkt_len', full_name='acl.AclEntryMatchVpls.match_pkt_len', index=29,
      number=30, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11776,
  serialized_end=13258,
)


_ACLENTRYVPLSTERMINATINGACTION = _descriptor.Descriptor(
  name='AclEntryVplsTerminatingAction',
  full_name='acl.AclEntryVplsTerminatingAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action_accept', full_name='acl.AclEntryVplsTerminatingAction.action_accept', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_discard', full_name='acl.AclEntryVplsTerminatingAction.action_discard', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_send_to_client', full_name='acl.AclEntryVplsTerminatingAction.action_send_to_client', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_send_to_host', full_name='acl.AclEntryVplsTerminatingAction.action_send_to_host', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_nh', full_name='acl.AclEntryVplsTerminatingAction.action_nh', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Oneof_AclEntryVplsTerminatingAction', full_name='acl.AclEntryVplsTerminatingAction.Oneof_AclEntryVplsTerminatingAction',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=13261,
  serialized_end=13584,
)


_ACLENTRYVPLSNONTERMINATINGACTION = _descriptor.Descriptor(
  name='AclEntryVplsNonTerminatingAction',
  full_name='acl.AclEntryVplsNonTerminatingAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action_count', full_name='acl.AclEntryVplsNonTerminatingAction.action_count', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_log', full_name='acl.AclEntryVplsNonTerminatingAction.action_log', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_syslog', full_name='acl.AclEntryVplsNonTerminatingAction.action_syslog', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_policer', full_name='acl.AclEntryVplsNonTerminatingAction.action_policer', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_sample', full_name='acl.AclEntryVplsNonTerminatingAction.action_sample', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_next_term', full_name='acl.AclEntryVplsNonTerminatingAction.action_next_term', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_no_mac_learn', full_name='acl.AclEntryVplsNonTerminatingAction.action_no_mac_learn', index=6,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_copy_to_host', full_name='acl.AclEntryVplsNonTerminatingAction.action_copy_to_host', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13587,
  serialized_end=13994,
)


_ACLENTRYVPLSACTION = _descriptor.Descriptor(
  name='AclEntryVplsAction',
  full_name='acl.AclEntryVplsAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='actions_nt', full_name='acl.AclEntryVplsAction.actions_nt', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_t', full_name='acl.AclEntryVplsAction.action_t', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13997,
  serialized_end=14130,
)


_ACLENTRYMATCHCCC = _descriptor.Descriptor(
  name='AclEntryMatchCcc',
  full_name='acl.AclEntryMatchCcc',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='match_pkt_len', full_name='acl.AclEntryMatchCcc.match_pkt_len', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ifl_names', full_name='acl.AclEntryMatchCcc.ifl_names', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ether_types', full_name='acl.AclEntryMatchCcc.ether_types', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_src_macs', full_name='acl.AclEntryMatchCcc.match_src_macs', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_dst_macs', full_name='acl.AclEntryMatchCcc.match_dst_macs', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cfm_opcodes', full_name='acl.AclEntryMatchCcc.cfm_opcodes', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cfm_levels', full_name='acl.AclEntryMatchCcc.cfm_levels', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_flex_range', full_name='acl.AclEntryMatchCcc.match_flex_range', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_flex_mask', full_name='acl.AclEntryMatchCcc.match_flex_mask', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14133,
  serialized_end=14590,
)


_ACLENTRYCCCTERMINATINGACTION = _descriptor.Descriptor(
  name='AclEntryCccTerminatingAction',
  full_name='acl.AclEntryCccTerminatingAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action_accept', full_name='acl.AclEntryCccTerminatingAction.action_accept', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_discard', full_name='acl.AclEntryCccTerminatingAction.action_discard', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_send_to_client', full_name='acl.AclEntryCccTerminatingAction.action_send_to_client', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_send_to_host', full_name='acl.AclEntryCccTerminatingAction.action_send_to_host', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Oneof_AclEntryCccTerminatingAction', full_name='acl.AclEntryCccTerminatingAction.Oneof_AclEntryCccTerminatingAction',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=14593,
  serialized_end=14867,
)


_ACLENTRYCCCNONTERMINATINGACTION = _descriptor.Descriptor(
  name='AclEntryCccNonTerminatingAction',
  full_name='acl.AclEntryCccNonTerminatingAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action_count', full_name='acl.AclEntryCccNonTerminatingAction.action_count', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_log', full_name='acl.AclEntryCccNonTerminatingAction.action_log', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_syslog', full_name='acl.AclEntryCccNonTerminatingAction.action_syslog', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_policer', full_name='acl.AclEntryCccNonTerminatingAction.action_policer', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_sample', full_name='acl.AclEntryCccNonTerminatingAction.action_sample', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_copy_to_host', full_name='acl.AclEntryCccNonTerminatingAction.action_copy_to_host', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14870,
  serialized_end=15179,
)


_ACLENTRYCCCACTION = _descriptor.Descriptor(
  name='AclEntryCccAction',
  full_name='acl.AclEntryCccAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='actions_nt', full_name='acl.AclEntryCccAction.actions_nt', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_t', full_name='acl.AclEntryCccAction.action_t', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15182,
  serialized_end=15312,
)


_ACLENTRYMATCHMULTISERVICE = _descriptor.Descriptor(
  name='AclEntryMatchMultiService',
  full_name='acl.AclEntryMatchMultiService',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='match_dst_addrs', full_name='acl.AclEntryMatchMultiService.match_dst_addrs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_src_addrs', full_name='acl.AclEntryMatchMultiService.match_src_addrs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_addrs', full_name='acl.AclEntryMatchMultiService.match_addrs', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_dst_ports', full_name='acl.AclEntryMatchMultiService.match_dst_ports', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_src_ports', full_name='acl.AclEntryMatchMultiService.match_src_ports', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_ip_protocols', full_name='acl.AclEntryMatchMultiService.match_ip_protocols', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='payload_protocols', full_name='acl.AclEntryMatchMultiService.payload_protocols', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_icmp_type', full_name='acl.AclEntryMatchMultiService.match_icmp_type', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_icmp_code', full_name='acl.AclEntryMatchMultiService.match_icmp_code', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ifl_names', full_name='acl.AclEntryMatchMultiService.ifl_names', index=9,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ipv6_next_headers', full_name='acl.AclEntryMatchMultiService.ipv6_next_headers', index=10,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ether_types', full_name='acl.AclEntryMatchMultiService.ether_types', index=11,
      number=12, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_src_macs', full_name='acl.AclEntryMatchMultiService.match_src_macs', index=12,
      number=13, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_dst_macs', full_name='acl.AclEntryMatchMultiService.match_dst_macs', index=13,
      number=14, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vlan_ether_types', full_name='acl.AclEntryMatchMultiService.vlan_ether_types', index=14,
      number=15, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stp_state', full_name='acl.AclEntryMatchMultiService.stp_state', index=15,
      number=16, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mesh_group_ids', full_name='acl.AclEntryMatchMultiService.mesh_group_ids', index=16,
      number=17, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='l2_tokens', full_name='acl.AclEntryMatchMultiService.l2_tokens', index=17,
      number=18, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_pkt_len', full_name='acl.AclEntryMatchMultiService.match_pkt_len', index=18,
      number=19, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15315,
  serialized_end=16236,
)


_ACLENTRYMULTISERVICETERMINATINGACTION = _descriptor.Descriptor(
  name='AclEntryMultiServiceTerminatingAction',
  full_name='acl.AclEntryMultiServiceTerminatingAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action_accept', full_name='acl.AclEntryMultiServiceTerminatingAction.action_accept', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_discard', full_name='acl.AclEntryMultiServiceTerminatingAction.action_discard', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_send_to_client', full_name='acl.AclEntryMultiServiceTerminatingAction.action_send_to_client', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_send_to_host', full_name='acl.AclEntryMultiServiceTerminatingAction.action_send_to_host', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Oneof_AclEntryMultiServiceTerminatingAction', full_name='acl.AclEntryMultiServiceTerminatingAction.Oneof_AclEntryMultiServiceTerminatingAction',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=16239,
  serialized_end=16531,
)


_ACLENTRYMULTISERVICENONTERMINATINGACTION = _descriptor.Descriptor(
  name='AclEntryMultiServiceNonTerminatingAction',
  full_name='acl.AclEntryMultiServiceNonTerminatingAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action_count', full_name='acl.AclEntryMultiServiceNonTerminatingAction.action_count', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_log', full_name='acl.AclEntryMultiServiceNonTerminatingAction.action_log', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_syslog', full_name='acl.AclEntryMultiServiceNonTerminatingAction.action_syslog', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_policer', full_name='acl.AclEntryMultiServiceNonTerminatingAction.action_policer', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_sample', full_name='acl.AclEntryMultiServiceNonTerminatingAction.action_sample', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_next_term', full_name='acl.AclEntryMultiServiceNonTerminatingAction.action_next_term', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_copy_to_host', full_name='acl.AclEntryMultiServiceNonTerminatingAction.action_copy_to_host', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16534,
  serialized_end=16899,
)


_ACLENTRYMULTISERVICEACTION = _descriptor.Descriptor(
  name='AclEntryMultiServiceAction',
  full_name='acl.AclEntryMultiServiceAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='actions_nt', full_name='acl.AclEntryMultiServiceAction.actions_nt', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_t', full_name='acl.AclEntryMultiServiceAction.action_t', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16902,
  serialized_end=17059,
)


_ACLENTRYMATCHMPLS = _descriptor.Descriptor(
  name='AclEntryMatchMpls',
  full_name='acl.AclEntryMatchMpls',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='match_label1', full_name='acl.AclEntryMatchMpls.match_label1', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_label2', full_name='acl.AclEntryMatchMpls.match_label2', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_label3', full_name='acl.AclEntryMatchMpls.match_label3', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_flex_range', full_name='acl.AclEntryMatchMpls.match_flex_range', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='match_flex_mask', full_name='acl.AclEntryMatchMpls.match_flex_mask', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17062,
  serialized_end=17337,
)


_ACLENTRYMPLSTERMINATINGACTION = _descriptor.Descriptor(
  name='AclEntryMplsTerminatingAction',
  full_name='acl.AclEntryMplsTerminatingAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action_accept', full_name='acl.AclEntryMplsTerminatingAction.action_accept', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_discard', full_name='acl.AclEntryMplsTerminatingAction.action_discard', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Oneof_AclEntryMplsTerminatingAction', full_name='acl.AclEntryMplsTerminatingAction.Oneof_AclEntryMplsTerminatingAction',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=17340,
  serialized_end=17503,
)


_ACLENTRYMPLSNONTERMINATINGACTION = _descriptor.Descriptor(
  name='AclEntryMplsNonTerminatingAction',
  full_name='acl.AclEntryMplsNonTerminatingAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action_count', full_name='acl.AclEntryMplsNonTerminatingAction.action_count', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_policer', full_name='acl.AclEntryMplsNonTerminatingAction.action_policer', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17505,
  serialized_end=17631,
)


_ACLENTRYMPLSACTION = _descriptor.Descriptor(
  name='AclEntryMplsAction',
  full_name='acl.AclEntryMplsAction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='actions_nt', full_name='acl.AclEntryMplsAction.actions_nt', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action_t', full_name='acl.AclEntryMplsAction.action_t', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17634,
  serialized_end=17767,
)


_ACLINET6ENTRY = _descriptor.Descriptor(
  name='AclInet6Entry',
  full_name='acl.AclInet6Entry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ace_name', full_name='acl.AclInet6Entry.ace_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ace_op', full_name='acl.AclInet6Entry.ace_op', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adjacency', full_name='acl.AclInet6Entry.adjacency', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='matches', full_name='acl.AclInet6Entry.matches', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='actions', full_name='acl.AclInet6Entry.actions', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17770,
  serialized_end=17966,
)


_ACLVPLSENTRY = _descriptor.Descriptor(
  name='AclVplsEntry',
  full_name='acl.AclVplsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ace_name', full_name='acl.AclVplsEntry.ace_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ace_op', full_name='acl.AclVplsEntry.ace_op', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adjacency', full_name='acl.AclVplsEntry.adjacency', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='matches', full_name='acl.AclVplsEntry.matches', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='actions', full_name='acl.AclVplsEntry.actions', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17969,
  serialized_end=18162,
)


_ACLCCCENTRY = _descriptor.Descriptor(
  name='AclCccEntry',
  full_name='acl.AclCccEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ace_name', full_name='acl.AclCccEntry.ace_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ace_op', full_name='acl.AclCccEntry.ace_op', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adjacency', full_name='acl.AclCccEntry.adjacency', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='matches', full_name='acl.AclCccEntry.matches', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='actions', full_name='acl.AclCccEntry.actions', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18165,
  serialized_end=18355,
)


_ACLMULTISERVICEENTRY = _descriptor.Descriptor(
  name='AclMultiServiceEntry',
  full_name='acl.AclMultiServiceEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ace_name', full_name='acl.AclMultiServiceEntry.ace_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ace_op', full_name='acl.AclMultiServiceEntry.ace_op', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adjacency', full_name='acl.AclMultiServiceEntry.adjacency', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='matches', full_name='acl.AclMultiServiceEntry.matches', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='actions', full_name='acl.AclMultiServiceEntry.actions', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18358,
  serialized_end=18575,
)


_ACLMPLSENTRY = _descriptor.Descriptor(
  name='AclMplsEntry',
  full_name='acl.AclMplsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ace_name', full_name='acl.AclMplsEntry.ace_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ace_op', full_name='acl.AclMplsEntry.ace_op', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adjacency', full_name='acl.AclMplsEntry.adjacency', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='matches', full_name='acl.AclMplsEntry.matches', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='actions', full_name='acl.AclMplsEntry.actions', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18578,
  serialized_end=18771,
)


_ACLENTRY = _descriptor.Descriptor(
  name='AclEntry',
  full_name='acl.AclEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='inet_entry', full_name='acl.AclEntry.inet_entry', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='es_entry', full_name='acl.AclEntry.es_entry', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='inet6_entry', full_name='acl.AclEntry.inet6_entry', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vpls_entry', full_name='acl.AclEntry.vpls_entry', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ccc_entry', full_name='acl.AclEntry.ccc_entry', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mservice_entry', full_name='acl.AclEntry.mservice_entry', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mpls_entry', full_name='acl.AclEntry.mpls_entry', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='OneOf_AclEntry', full_name='acl.AclEntry.OneOf_AclEntry',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=18774,
  serialized_end=19097,
)


_ACCESSLIST = _descriptor.Descriptor(
  name='AccessList',
  full_name='acl.AccessList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='acl_name', full_name='acl.AccessList.acl_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='acl_type', full_name='acl.AccessList.acl_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='acl_family', full_name='acl.AccessList.acl_family', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='acl_flag', full_name='acl.AccessList.acl_flag', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ace_list', full_name='acl.AccessList.ace_list', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19100,
  serialized_end=19288,
)


_ACCESSLISTCOUNTER = _descriptor.Descriptor(
  name='AccessListCounter',
  full_name='acl.AccessListCounter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='acl', full_name='acl.AccessListCounter.acl', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='counter_name', full_name='acl.AccessListCounter.counter_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19290,
  serialized_end=19361,
)


_ACCESSLISTCOUNTERBULK = _descriptor.Descriptor(
  name='AccessListCounterBulk',
  full_name='acl.AccessListCounterBulk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='acl', full_name='acl.AccessListCounterBulk.acl', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='starting_index', full_name='acl.AccessListCounterBulk.starting_index', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19363,
  serialized_end=19440,
)


_ACCESSLISTRETURNSTATUS = _descriptor.Descriptor(
  name='AccessListReturnStatus',
  full_name='acl.AccessListReturnStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='acl.AccessListReturnStatus.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19442,
  serialized_end=19508,
)


_ACCESSLISTCOUNTERVAL = _descriptor.Descriptor(
  name='AccessListCounterVal',
  full_name='acl.AccessListCounterVal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='counter_name', full_name='acl.AccessListCounterVal.counter_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='acl.AccessListCounterVal.status', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bytes', full_name='acl.AccessListCounterVal.bytes', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='packets', full_name='acl.AccessListCounterVal.packets', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19510,
  serialized_end=19628,
)


_ACLBINDOBJVLAN = _descriptor.Descriptor(
  name='AclBindObjVlan',
  full_name='acl.AclBindObjVlan',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='vlan_name', full_name='acl.AclBindObjVlan.vlan_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rtb_name', full_name='acl.AclBindObjVlan.rtb_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19630,
  serialized_end=19683,
)


_ACLBINDOBJBRIDGEDOMAIN = _descriptor.Descriptor(
  name='AclBindObjBridgeDomain',
  full_name='acl.AclBindObjBridgeDomain',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bd_name', full_name='acl.AclBindObjBridgeDomain.bd_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rtb_name', full_name='acl.AclBindObjBridgeDomain.rtb_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19685,
  serialized_end=19744,
)


_ACCESSLISTBINDOBJPOINT = _descriptor.Descriptor(
  name='AccessListBindObjPoint',
  full_name='acl.AccessListBindObjPoint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='intf', full_name='acl.AccessListBindObjPoint.intf', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fwd_table', full_name='acl.AccessListBindObjPoint.fwd_table', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vlan', full_name='acl.AccessListBindObjPoint.vlan', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bd', full_name='acl.AccessListBindObjPoint.bd', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='OneOf_AclBindPoint', full_name='acl.AccessListBindObjPoint.OneOf_AclBindPoint',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=19747,
  serialized_end=19910,
)


_ACCESSLISTOBJBIND = _descriptor.Descriptor(
  name='AccessListObjBind',
  full_name='acl.AccessListObjBind',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='acl', full_name='acl.AccessListObjBind.acl', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='obj_type', full_name='acl.AccessListObjBind.obj_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bind_object', full_name='acl.AccessListObjBind.bind_object', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bind_direction', full_name='acl.AccessListObjBind.bind_direction', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bind_family', full_name='acl.AccessListObjBind.bind_family', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19913,
  serialized_end=20151,
)

_ACLPOLICERTWOCOLOR.fields_by_name['bw_unit'].enum_type = _ACLPOLICERRATE
_ACLPOLICERTWOCOLOR.fields_by_name['burst_unit'].enum_type = _ACLPOLICERBURSTSIZE
_ACLPOLICERTWOCOLOR.fields_by_name['lp'].enum_type = _ACLLOSSPRIORITY
_ACLPOLICERTWOCOLOR.fields_by_name['discard'].enum_type = _ACLBOOLEANTYPE
_ACLPOLICERSINGLERATETHREECOLOR.fields_by_name['committed_rate_unit'].enum_type = _ACLPOLICERRATE
_ACLPOLICERSINGLERATETHREECOLOR.fields_by_name['committed_burst_unit'].enum_type = _ACLPOLICERBURSTSIZE
_ACLPOLICERSINGLERATETHREECOLOR.fields_by_name['excess_burst_unit'].enum_type = _ACLPOLICERBURSTSIZE
_ACLPOLICERSINGLERATETHREECOLOR.fields_by_name['discard'].enum_type = _ACLBOOLEANTYPE
_ACLPOLICERSINGLERATETHREECOLOR.fields_by_name['color_mode'].enum_type = _ACLCOLORMODETYPE
_ACLPOLICERTWORATETHREECOLOR.fields_by_name['committed_rate_unit'].enum_type = _ACLPOLICERRATE
_ACLPOLICERTWORATETHREECOLOR.fields_by_name['committed_burst_unit'].enum_type = _ACLPOLICERBURSTSIZE
_ACLPOLICERTWORATETHREECOLOR.fields_by_name['excess_rate_unit'].enum_type = _ACLPOLICERRATE
_ACLPOLICERTWORATETHREECOLOR.fields_by_name['excess_burst_unit'].enum_type = _ACLPOLICERBURSTSIZE
_ACLPOLICERTWORATETHREECOLOR.fields_by_name['discard'].enum_type = _ACLBOOLEANTYPE
_ACLPOLICERTWORATETHREECOLOR.fields_by_name['color_mode'].enum_type = _ACLCOLORMODETYPE
_ACLPOLICERHIERARCHICAL.fields_by_name['aggregate_rate_unit'].enum_type = _ACLPOLICERRATE
_ACLPOLICERHIERARCHICAL.fields_by_name['aggregate_burst_size_unit'].enum_type = _ACLPOLICERBURSTSIZE
_ACLPOLICERHIERARCHICAL.fields_by_name['premium_rate_unit'].enum_type = _ACLPOLICERRATE
_ACLPOLICERHIERARCHICAL.fields_by_name['premium_burst_size_unit'].enum_type = _ACLPOLICERBURSTSIZE
_ACLPOLICERHIERARCHICAL.fields_by_name['discard'].enum_type = _ACLBOOLEANTYPE
_ACLPOLICERPARAMETER.fields_by_name['two_color_parameter'].message_type = _ACLPOLICERTWOCOLOR
_ACLPOLICERPARAMETER.fields_by_name['sr_three_color_parameter'].message_type = _ACLPOLICERSINGLERATETHREECOLOR
_ACLPOLICERPARAMETER.fields_by_name['tr_three_color_parameter'].message_type = _ACLPOLICERTWORATETHREECOLOR
_ACLPOLICERPARAMETER.fields_by_name['hierarchical_parameter'].message_type = _ACLPOLICERHIERARCHICAL
_ACLPOLICERPARAMETER.oneofs_by_name['OneOf_PolicerParameter'].fields.append(
  _ACLPOLICERPARAMETER.fields_by_name['two_color_parameter'])
_ACLPOLICERPARAMETER.fields_by_name['two_color_parameter'].containing_oneof = _ACLPOLICERPARAMETER.oneofs_by_name['OneOf_PolicerParameter']
_ACLPOLICERPARAMETER.oneofs_by_name['OneOf_PolicerParameter'].fields.append(
  _ACLPOLICERPARAMETER.fields_by_name['sr_three_color_parameter'])
_ACLPOLICERPARAMETER.fields_by_name['sr_three_color_parameter'].containing_oneof = _ACLPOLICERPARAMETER.oneofs_by_name['OneOf_PolicerParameter']
_ACLPOLICERPARAMETER.oneofs_by_name['OneOf_PolicerParameter'].fields.append(
  _ACLPOLICERPARAMETER.fields_by_name['tr_three_color_parameter'])
_ACLPOLICERPARAMETER.fields_by_name['tr_three_color_parameter'].containing_oneof = _ACLPOLICERPARAMETER.oneofs_by_name['OneOf_PolicerParameter']
_ACLPOLICERPARAMETER.oneofs_by_name['OneOf_PolicerParameter'].fields.append(
  _ACLPOLICERPARAMETER.fields_by_name['hierarchical_parameter'])
_ACLPOLICERPARAMETER.fields_by_name['hierarchical_parameter'].containing_oneof = _ACLPOLICERPARAMETER.oneofs_by_name['OneOf_PolicerParameter']
_ACCESSLISTPOLICER.fields_by_name['policer_type'].enum_type = _ACLPOLICERTYPE
_ACCESSLISTPOLICER.fields_by_name['policer_flag'].enum_type = _ACLPOLICERFLAGS
_ACCESSLISTPOLICER.fields_by_name['policer_params'].message_type = _ACLPOLICERPARAMETER
_ACLMATCHIPADDRESS.fields_by_name['addr'].message_type = jnx__addr__pb2._IPADDRESS
_ACLMATCHIPADDRESS.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHPORT.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHIPPRECEDENCE.fields_by_name['min'].enum_type = _PRECEDENCE
_ACLMATCHIPPRECEDENCE.fields_by_name['max'].enum_type = _PRECEDENCE
_ACLMATCHIPPRECEDENCE.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHTRAFFICCLASS.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHDSCPCODE.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHPROTOCOL.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHICMPTYPE.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHICMPCODE.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHPKTLEN.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHLOSSPRIORITY.fields_by_name['lp'].enum_type = _ACLLOSSPRIORITY
_ACLMATCHLOSSPRIORITY.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHFORWARDINGCLASS.fields_by_name['fwd_class'].enum_type = _ACLFORWARDINGCLASS
_ACLMATCHFORWARDINGCLASS.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHNEXTHEADER.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHMPLSLABEL.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHVLANID.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHMESHGROUP.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHL2TOKEN.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHCFMLEVEL.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHCFMOPCODE.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHTTL.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHFRAGMENTOFFSET.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLACTIONPOLICER.fields_by_name['policer'].message_type = _ACCESSLISTPOLICER
_ACLACTIONPOLICERINSTANCE.fields_by_name['policer'].message_type = _ACCESSLISTPOLICER
_ACLACTIONLOSSPRIORITY.fields_by_name['lp'].enum_type = _ACLLOSSPRIORITY
_ACLACTIONFORWARDINGCLASS.fields_by_name['fc'].enum_type = _ACLFORWARDINGCLASS
_ACLACTIONIFLNAMEINDEX.oneofs_by_name['AclEntryActionIflNameFormat'].fields.append(
  _ACLACTIONIFLNAMEINDEX.fields_by_name['ifl_name'])
_ACLACTIONIFLNAMEINDEX.fields_by_name['ifl_name'].containing_oneof = _ACLACTIONIFLNAMEINDEX.oneofs_by_name['AclEntryActionIflNameFormat']
_ACLACTIONIFLNAMEINDEX.oneofs_by_name['AclEntryActionIflNameFormat'].fields.append(
  _ACLACTIONIFLNAMEINDEX.fields_by_name['ifl_index'])
_ACLACTIONIFLNAMEINDEX.fields_by_name['ifl_index'].containing_oneof = _ACLACTIONIFLNAMEINDEX.oneofs_by_name['AclEntryActionIflNameFormat']
_ACLACTIONNEXTINTERFACE.fields_by_name['ifl'].message_type = _ACLACTIONIFLNAMEINDEX
_ACLACTIONNEXTIP.fields_by_name['addr'].message_type = jnx__addr__pb2._IPADDRESS
_ACLADJACENCY.fields_by_name['type'].enum_type = _ACLADJACENCYTYPE
_ACLMATCHIFLNAMEINDEX.oneofs_by_name['AclEntryMatchIflNameFormat'].fields.append(
  _ACLMATCHIFLNAMEINDEX.fields_by_name['ifl_name'])
_ACLMATCHIFLNAMEINDEX.fields_by_name['ifl_name'].containing_oneof = _ACLMATCHIFLNAMEINDEX.oneofs_by_name['AclEntryMatchIflNameFormat']
_ACLMATCHIFLNAMEINDEX.oneofs_by_name['AclEntryMatchIflNameFormat'].fields.append(
  _ACLMATCHIFLNAMEINDEX.fields_by_name['ifl_index'])
_ACLMATCHIFLNAMEINDEX.fields_by_name['ifl_index'].containing_oneof = _ACLMATCHIFLNAMEINDEX.oneofs_by_name['AclEntryMatchIflNameFormat']
_ACLMATCHFLEXOFFSET.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHFLEXIBLERANGE.fields_by_name['start_offset'].enum_type = _ACLENTRYMATCHFLEXSTARTOFFEST
_ACLMATCHFLEXIBLERANGE.fields_by_name['range'].message_type = _ACLMATCHFLEXOFFSET
_ACLMATCHFLEXIBLEOFFSETRANGE.fields_by_name['flex_range_match'].message_type = _ACLMATCHFLEXIBLERANGE
_ACLMATCHFLEXIBLEOFFSETRANGE.oneofs_by_name['Oneof_AclEntryMatchFlexibleOffsetRange'].fields.append(
  _ACLMATCHFLEXIBLEOFFSETRANGE.fields_by_name['flex_range_match'])
_ACLMATCHFLEXIBLEOFFSETRANGE.fields_by_name['flex_range_match'].containing_oneof = _ACLMATCHFLEXIBLEOFFSETRANGE.oneofs_by_name['Oneof_AclEntryMatchFlexibleOffsetRange']
_ACLMATCHFLEXIBLEMASK.fields_by_name['start_offset'].enum_type = _ACLENTRYMATCHFLEXSTARTOFFEST
_ACLMATCHFLEXIBLEOFFSETMASK.fields_by_name['flex_mask_match'].message_type = _ACLMATCHFLEXIBLEMASK
_ACLMATCHFLEXIBLEOFFSETMASK.oneofs_by_name['Oneof_AclEntryMatchFlexibleOffsetMask'].fields.append(
  _ACLMATCHFLEXIBLEOFFSETMASK.fields_by_name['flex_mask_match'])
_ACLMATCHFLEXIBLEOFFSETMASK.fields_by_name['flex_mask_match'].containing_oneof = _ACLMATCHFLEXIBLEOFFSETMASK.oneofs_by_name['Oneof_AclEntryMatchFlexibleOffsetMask']
_ACLMATCHMACADDRESS.fields_by_name['addr'].message_type = jnx__addr__pb2._MACADDRESS
_ACLMATCHMACADDRESS.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHETHERTYPE.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHLEARNVLANID.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLMATCHLEARNVLANPRIORITY.fields_by_name['match_op'].enum_type = _ACLMATCHOPERATION
_ACLENTRYMATCHINET.fields_by_name['match_dst_addrs'].message_type = _ACLMATCHIPADDRESS
_ACLENTRYMATCHINET.fields_by_name['match_src_addrs'].message_type = _ACLMATCHIPADDRESS
_ACLENTRYMATCHINET.fields_by_name['match_dst_ports'].message_type = _ACLMATCHPORT
_ACLENTRYMATCHINET.fields_by_name['match_src_ports'].message_type = _ACLMATCHPORT
_ACLENTRYMATCHINET.fields_by_name['match_dscp_code'].message_type = _ACLMATCHDSCPCODE
_ACLENTRYMATCHINET.fields_by_name['match_protocols'].message_type = _ACLMATCHPROTOCOL
_ACLENTRYMATCHINET.fields_by_name['match_icmp_type'].message_type = _ACLMATCHICMPTYPE
_ACLENTRYMATCHINET.fields_by_name['match_icmp_code'].message_type = _ACLMATCHICMPCODE
_ACLENTRYMATCHINET.fields_by_name['match_pkt_len'].message_type = _ACLMATCHPKTLEN
_ACLENTRYMATCHINET.fields_by_name['match_ttl'].message_type = _ACLMATCHTTL
_ACLENTRYMATCHINET.fields_by_name['fragment_flags'].enum_type = _ACLFRAGMENTFLAGS
_ACLENTRYMATCHINET.fields_by_name['match_frag_offset'].message_type = _ACLMATCHFRAGMENTOFFSET
_ACLENTRYMATCHINET.fields_by_name['ifl_names'].message_type = _ACLMATCHIFLNAMEINDEX
_ACLENTRYMATCHINET.fields_by_name['match_ip_precedence'].message_type = _ACLMATCHIPPRECEDENCE
_ACLENTRYMATCHINET.fields_by_name['match_addrs'].message_type = _ACLMATCHIPADDRESS
_ACLENTRYMATCHINET.fields_by_name['match_ports'].message_type = _ACLMATCHPORT
_ACLENTRYMATCHINET.fields_by_name['match_flex_range'].message_type = _ACLMATCHFLEXIBLEOFFSETRANGE
_ACLENTRYMATCHINET.fields_by_name['match_flex_mask'].message_type = _ACLMATCHFLEXIBLEOFFSETMASK
_ACLENTRYINETTERMINATINGACTION.fields_by_name['action_accept'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYINETTERMINATINGACTION.fields_by_name['action_discard'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYINETTERMINATINGACTION.fields_by_name['action_reject'].enum_type = _ACLENTRYACTIONREJECTREASON
_ACLENTRYINETTERMINATINGACTION.fields_by_name['action_rt_inst'].message_type = _ACLACTIONROUTINGINSTANCE
_ACLENTRYINETTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInetTerminatingAction'].fields.append(
  _ACLENTRYINETTERMINATINGACTION.fields_by_name['action_accept'])
_ACLENTRYINETTERMINATINGACTION.fields_by_name['action_accept'].containing_oneof = _ACLENTRYINETTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInetTerminatingAction']
_ACLENTRYINETTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInetTerminatingAction'].fields.append(
  _ACLENTRYINETTERMINATINGACTION.fields_by_name['action_discard'])
_ACLENTRYINETTERMINATINGACTION.fields_by_name['action_discard'].containing_oneof = _ACLENTRYINETTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInetTerminatingAction']
_ACLENTRYINETTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInetTerminatingAction'].fields.append(
  _ACLENTRYINETTERMINATINGACTION.fields_by_name['action_reject'])
_ACLENTRYINETTERMINATINGACTION.fields_by_name['action_reject'].containing_oneof = _ACLENTRYINETTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInetTerminatingAction']
_ACLENTRYINETTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInetTerminatingAction'].fields.append(
  _ACLENTRYINETTERMINATINGACTION.fields_by_name['action_rt_inst'])
_ACLENTRYINETTERMINATINGACTION.fields_by_name['action_rt_inst'].containing_oneof = _ACLENTRYINETTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInetTerminatingAction']
_ACLENTRYINETNONTERMINATINGACTION.fields_by_name['action_count'].message_type = _ACLACTIONCOUNTER
_ACLENTRYINETNONTERMINATINGACTION.fields_by_name['action_log'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYINETNONTERMINATINGACTION.fields_by_name['action_syslog'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYINETNONTERMINATINGACTION.fields_by_name['action_policer'].message_type = _ACLACTIONPOLICER
_ACLENTRYINETNONTERMINATINGACTION.fields_by_name['action_sample'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYINETNONTERMINATINGACTION.fields_by_name['action_next_term'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYINETACTION.fields_by_name['actions_nt'].message_type = _ACLENTRYINETNONTERMINATINGACTION
_ACLENTRYINETACTION.fields_by_name['action_t'].message_type = _ACLENTRYINETTERMINATINGACTION
_ACLINETENTRY.fields_by_name['ace_op'].enum_type = _ACLENTRYOPERATION
_ACLINETENTRY.fields_by_name['adjacency'].message_type = _ACLADJACENCY
_ACLINETENTRY.fields_by_name['matches'].message_type = _ACLENTRYMATCHINET
_ACLINETENTRY.fields_by_name['actions'].message_type = _ACLENTRYINETACTION
_ACLENTRYMATCHES.fields_by_name['match_dst_mac_addrs'].message_type = _ACLMATCHMACADDRESS
_ACLENTRYMATCHES.fields_by_name['match_src_mac_addrs'].message_type = _ACLMATCHMACADDRESS
_ACLENTRYMATCHES.fields_by_name['match_dst_ports'].message_type = _ACLMATCHPORT
_ACLENTRYMATCHES.fields_by_name['match_src_ports'].message_type = _ACLMATCHPORT
_ACLENTRYMATCHES.fields_by_name['match_dscp_code'].message_type = _ACLMATCHDSCPCODE
_ACLENTRYMATCHES.fields_by_name['match_protocols'].message_type = _ACLMATCHPROTOCOL
_ACLENTRYMATCHES.fields_by_name['match_icmp_type'].message_type = _ACLMATCHICMPTYPE
_ACLENTRYMATCHES.fields_by_name['match_icmp_code'].message_type = _ACLMATCHICMPCODE
_ACLENTRYMATCHES.fields_by_name['ifl_names'].message_type = _ACLMATCHIFLNAMEINDEX
_ACLENTRYMATCHES.fields_by_name['match_ether_type'].message_type = _ACLMATCHETHERTYPE
_ACLENTRYMATCHES.fields_by_name['match_learn_vlan_id'].message_type = _ACLMATCHLEARNVLANID
_ACLENTRYMATCHES.fields_by_name['match_learn_vlan_priority'].message_type = _ACLMATCHLEARNVLANPRIORITY
_ACLENTRYESTERMINATINGACTION.fields_by_name['action_accept'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYESTERMINATINGACTION.fields_by_name['action_discard'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYESTERMINATINGACTION.fields_by_name['action_nh'].message_type = _ACLACTIONNEXTHOP
_ACLENTRYESTERMINATINGACTION.fields_by_name['action_send_to_host'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYESTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryEsTerminatingAction'].fields.append(
  _ACLENTRYESTERMINATINGACTION.fields_by_name['action_accept'])
_ACLENTRYESTERMINATINGACTION.fields_by_name['action_accept'].containing_oneof = _ACLENTRYESTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryEsTerminatingAction']
_ACLENTRYESTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryEsTerminatingAction'].fields.append(
  _ACLENTRYESTERMINATINGACTION.fields_by_name['action_discard'])
_ACLENTRYESTERMINATINGACTION.fields_by_name['action_discard'].containing_oneof = _ACLENTRYESTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryEsTerminatingAction']
_ACLENTRYESTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryEsTerminatingAction'].fields.append(
  _ACLENTRYESTERMINATINGACTION.fields_by_name['action_nh'])
_ACLENTRYESTERMINATINGACTION.fields_by_name['action_nh'].containing_oneof = _ACLENTRYESTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryEsTerminatingAction']
_ACLENTRYESTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryEsTerminatingAction'].fields.append(
  _ACLENTRYESTERMINATINGACTION.fields_by_name['action_send_to_host'])
_ACLENTRYESTERMINATINGACTION.fields_by_name['action_send_to_host'].containing_oneof = _ACLENTRYESTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryEsTerminatingAction']
_ACLENTRYESNONTERMINATINGACTION.fields_by_name['action_count'].message_type = _ACLACTIONCOUNTER
_ACLENTRYESNONTERMINATINGACTION.fields_by_name['action_log'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYESNONTERMINATINGACTION.fields_by_name['action_syslog'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYESNONTERMINATINGACTION.fields_by_name['action_policer'].message_type = _ACLACTIONPOLICER
_ACLENTRYESNONTERMINATINGACTION.fields_by_name['action_next_term'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYESNONTERMINATINGACTION.fields_by_name['action_lp'].message_type = _ACLACTIONLOSSPRIORITY
_ACLENTRYESACTION.fields_by_name['actions_nt'].message_type = _ACLENTRYESNONTERMINATINGACTION
_ACLENTRYESACTION.fields_by_name['action_t'].message_type = _ACLENTRYESTERMINATINGACTION
_ACLESENTRY.fields_by_name['ace_op'].enum_type = _ACLENTRYOPERATION
_ACLESENTRY.fields_by_name['adjacency'].message_type = _ACLADJACENCY
_ACLESENTRY.fields_by_name['matches'].message_type = _ACLENTRYMATCHES
_ACLESENTRY.fields_by_name['actions'].message_type = _ACLENTRYESACTION
_ACLENTRYMATCHINET6.fields_by_name['match_dst_addrs'].message_type = _ACLMATCHIPADDRESS
_ACLENTRYMATCHINET6.fields_by_name['match_src_addrs'].message_type = _ACLMATCHIPADDRESS
_ACLENTRYMATCHINET6.fields_by_name['match_dst_ports'].message_type = _ACLMATCHPORT
_ACLENTRYMATCHINET6.fields_by_name['match_src_ports'].message_type = _ACLMATCHPORT
_ACLENTRYMATCHINET6.fields_by_name['match_dscp_code'].message_type = _ACLMATCHDSCPCODE
_ACLENTRYMATCHINET6.fields_by_name['payload_protocols'].message_type = _ACLMATCHPROTOCOL
_ACLENTRYMATCHINET6.fields_by_name['match_icmp_type'].message_type = _ACLMATCHICMPTYPE
_ACLENTRYMATCHINET6.fields_by_name['match_icmp_code'].message_type = _ACLMATCHICMPCODE
_ACLENTRYMATCHINET6.fields_by_name['match_pkt_len'].message_type = _ACLMATCHPKTLEN
_ACLENTRYMATCHINET6.fields_by_name['fragment_flags'].enum_type = _ACLFRAGMENTFLAGS
_ACLENTRYMATCHINET6.fields_by_name['ifl_names'].message_type = _ACLMATCHIFLNAMEINDEX
_ACLENTRYMATCHINET6.fields_by_name['match_traffic_classes'].message_type = _ACLMATCHTRAFFICCLASS
_ACLENTRYMATCHINET6.fields_by_name['match_addrs'].message_type = _ACLMATCHIPADDRESS
_ACLENTRYMATCHINET6.fields_by_name['match_flex_range'].message_type = _ACLMATCHFLEXIBLEOFFSETRANGE
_ACLENTRYMATCHINET6.fields_by_name['match_flex_mask'].message_type = _ACLMATCHFLEXIBLEOFFSETMASK
_ACLENTRYMATCHINET6.fields_by_name['ipv6_next_headers'].message_type = _ACLMATCHNEXTHEADER
_ACLENTRYMATCHINET6.fields_by_name['match_loss_priority'].message_type = _ACLMATCHLOSSPRIORITY
_ACLENTRYMATCHINET6.fields_by_name['match_fwd_class'].message_type = _ACLMATCHFORWARDINGCLASS
_ACLENTRYMATCHINET6.fields_by_name['match_ports'].message_type = _ACLMATCHPORT
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_accept'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_discard'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_reject'].enum_type = _ACLENTRYACTIONREJECTREASON
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_rt_inst'].message_type = _ACLACTIONROUTINGINSTANCE
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_topo_redirect'].message_type = _ACLACTIONTOPOLOGYREDIRECT
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_send_to_client'].message_type = _ACLACTIONSENDTOCLIENT
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_send_to_host'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_nh'].message_type = _ACLACTIONSETNEXTHOP
_ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction'].fields.append(
  _ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_accept'])
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_accept'].containing_oneof = _ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction']
_ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction'].fields.append(
  _ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_discard'])
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_discard'].containing_oneof = _ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction']
_ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction'].fields.append(
  _ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_reject'])
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_reject'].containing_oneof = _ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction']
_ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction'].fields.append(
  _ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_rt_inst'])
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_rt_inst'].containing_oneof = _ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction']
_ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction'].fields.append(
  _ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_topo_redirect'])
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_topo_redirect'].containing_oneof = _ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction']
_ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction'].fields.append(
  _ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_send_to_client'])
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_send_to_client'].containing_oneof = _ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction']
_ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction'].fields.append(
  _ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_send_to_host'])
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_send_to_host'].containing_oneof = _ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction']
_ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction'].fields.append(
  _ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_nh'])
_ACLENTRYINET6TERMINATINGACTION.fields_by_name['action_nh'].containing_oneof = _ACLENTRYINET6TERMINATINGACTION.oneofs_by_name['Oneof_AclEntryInet6TerminatingAction']
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_count'].message_type = _ACLACTIONCOUNTER
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_log'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_syslog'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_policer'].message_type = _ACLACTIONPOLICER
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_sample'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_next_term'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_port_mirror'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_lp'].message_type = _ACLACTIONLOSSPRIORITY
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_fwd_class'].message_type = _ACLACTIONFORWARDINGCLASS
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_fwd_priority'].message_type = _ACLACTIONFORWARDINGPRIORITY
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_next_intf'].message_type = _ACLACTIONNEXTINTERFACE
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_next_ip'].message_type = _ACLACTIONNEXTIP
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_ip_dscp'].message_type = _ACLACTIONSETIPDSCP
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_copy_to_host'].message_type = _ACLACTIONCOPYTOHOST
_ACLENTRYINET6NONTERMINATINGACTION.fields_by_name['action_policer_inst'].message_type = _ACLACTIONPOLICERINSTANCE
_ACLENTRYINET6ACTION.fields_by_name['actions_nt'].message_type = _ACLENTRYINET6NONTERMINATINGACTION
_ACLENTRYINET6ACTION.fields_by_name['action_t'].message_type = _ACLENTRYINET6TERMINATINGACTION
_ACLENTRYMATCHVPLS.fields_by_name['match_dst_addrs'].message_type = _ACLMATCHIPADDRESS
_ACLENTRYMATCHVPLS.fields_by_name['match_src_addrs'].message_type = _ACLMATCHIPADDRESS
_ACLENTRYMATCHVPLS.fields_by_name['match_dst_v6_addrs'].message_type = _ACLMATCHIPADDRESS
_ACLENTRYMATCHVPLS.fields_by_name['match_src_v6_addrs'].message_type = _ACLMATCHIPADDRESS
_ACLENTRYMATCHVPLS.fields_by_name['match_dst_ports'].message_type = _ACLMATCHPORT
_ACLENTRYMATCHVPLS.fields_by_name['match_src_ports'].message_type = _ACLMATCHPORT
_ACLENTRYMATCHVPLS.fields_by_name['match_dscp_code'].message_type = _ACLMATCHDSCPCODE
_ACLENTRYMATCHVPLS.fields_by_name['match_ip_protocols'].message_type = _ACLMATCHPROTOCOL
_ACLENTRYMATCHVPLS.fields_by_name['payload_protocols'].message_type = _ACLMATCHPROTOCOL
_ACLENTRYMATCHVPLS.fields_by_name['match_icmp_type'].message_type = _ACLMATCHICMPTYPE
_ACLENTRYMATCHVPLS.fields_by_name['match_icmp_code'].message_type = _ACLMATCHICMPCODE
_ACLENTRYMATCHVPLS.fields_by_name['ifl_names'].message_type = _ACLMATCHIFLNAMEINDEX
_ACLENTRYMATCHVPLS.fields_by_name['match_traffic_classes'].message_type = _ACLMATCHTRAFFICCLASS
_ACLENTRYMATCHVPLS.fields_by_name['ipv6_next_headers'].message_type = _ACLMATCHNEXTHEADER
_ACLENTRYMATCHVPLS.fields_by_name['ether_types'].message_type = _ACLMATCHETHERTYPE
_ACLENTRYMATCHVPLS.fields_by_name['match_src_macs'].message_type = _ACLMATCHMACADDRESS
_ACLENTRYMATCHVPLS.fields_by_name['match_dst_macs'].message_type = _ACLMATCHMACADDRESS
_ACLENTRYMATCHVPLS.fields_by_name['vlan_ether_types'].message_type = _ACLMATCHETHERTYPE
_ACLENTRYMATCHVPLS.fields_by_name['learn_vlan_ids'].message_type = _ACLMATCHVLANID
_ACLENTRYMATCHVPLS.fields_by_name['user_vlan_ids'].message_type = _ACLMATCHVLANID
_ACLENTRYMATCHVPLS.fields_by_name['learn_vlan_priority'].message_type = _ACLMATCHLEARNVLANPRIORITY
_ACLENTRYMATCHVPLS.fields_by_name['stp_state'].enum_type = _ACLSTPMATCHFLAGS
_ACLENTRYMATCHVPLS.fields_by_name['mesh_group_ids'].message_type = _ACLMATCHMESHGROUP
_ACLENTRYMATCHVPLS.fields_by_name['cfm_opcodes'].message_type = _ACLMATCHCFMOPCODE
_ACLENTRYMATCHVPLS.fields_by_name['cfm_levels'].message_type = _ACLMATCHCFMLEVEL
_ACLENTRYMATCHVPLS.fields_by_name['l2_tokens'].message_type = _ACLMATCHL2TOKEN
_ACLENTRYMATCHVPLS.fields_by_name['match_v6_addrs'].message_type = _ACLMATCHIPADDRESS
_ACLENTRYMATCHVPLS.fields_by_name['match_flex_range'].message_type = _ACLMATCHFLEXIBLEOFFSETRANGE
_ACLENTRYMATCHVPLS.fields_by_name['match_flex_mask'].message_type = _ACLMATCHFLEXIBLEOFFSETMASK
_ACLENTRYMATCHVPLS.fields_by_name['match_pkt_len'].message_type = _ACLMATCHPKTLEN
_ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_accept'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_discard'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_send_to_client'].message_type = _ACLACTIONSENDTOCLIENT
_ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_send_to_host'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_nh'].message_type = _ACLACTIONSETNEXTHOP
_ACLENTRYVPLSTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryVplsTerminatingAction'].fields.append(
  _ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_accept'])
_ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_accept'].containing_oneof = _ACLENTRYVPLSTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryVplsTerminatingAction']
_ACLENTRYVPLSTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryVplsTerminatingAction'].fields.append(
  _ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_discard'])
_ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_discard'].containing_oneof = _ACLENTRYVPLSTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryVplsTerminatingAction']
_ACLENTRYVPLSTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryVplsTerminatingAction'].fields.append(
  _ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_send_to_client'])
_ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_send_to_client'].containing_oneof = _ACLENTRYVPLSTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryVplsTerminatingAction']
_ACLENTRYVPLSTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryVplsTerminatingAction'].fields.append(
  _ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_send_to_host'])
_ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_send_to_host'].containing_oneof = _ACLENTRYVPLSTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryVplsTerminatingAction']
_ACLENTRYVPLSTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryVplsTerminatingAction'].fields.append(
  _ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_nh'])
_ACLENTRYVPLSTERMINATINGACTION.fields_by_name['action_nh'].containing_oneof = _ACLENTRYVPLSTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryVplsTerminatingAction']
_ACLENTRYVPLSNONTERMINATINGACTION.fields_by_name['action_count'].message_type = _ACLACTIONCOUNTER
_ACLENTRYVPLSNONTERMINATINGACTION.fields_by_name['action_log'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYVPLSNONTERMINATINGACTION.fields_by_name['action_syslog'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYVPLSNONTERMINATINGACTION.fields_by_name['action_policer'].message_type = _ACLACTIONPOLICER
_ACLENTRYVPLSNONTERMINATINGACTION.fields_by_name['action_sample'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYVPLSNONTERMINATINGACTION.fields_by_name['action_next_term'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYVPLSNONTERMINATINGACTION.fields_by_name['action_no_mac_learn'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYVPLSNONTERMINATINGACTION.fields_by_name['action_copy_to_host'].message_type = _ACLACTIONCOPYTOHOST
_ACLENTRYVPLSACTION.fields_by_name['actions_nt'].message_type = _ACLENTRYVPLSNONTERMINATINGACTION
_ACLENTRYVPLSACTION.fields_by_name['action_t'].message_type = _ACLENTRYVPLSTERMINATINGACTION
_ACLENTRYMATCHCCC.fields_by_name['match_pkt_len'].message_type = _ACLMATCHPKTLEN
_ACLENTRYMATCHCCC.fields_by_name['ifl_names'].message_type = _ACLMATCHIFLNAMEINDEX
_ACLENTRYMATCHCCC.fields_by_name['ether_types'].message_type = _ACLMATCHETHERTYPE
_ACLENTRYMATCHCCC.fields_by_name['match_src_macs'].message_type = _ACLMATCHMACADDRESS
_ACLENTRYMATCHCCC.fields_by_name['match_dst_macs'].message_type = _ACLMATCHMACADDRESS
_ACLENTRYMATCHCCC.fields_by_name['cfm_opcodes'].message_type = _ACLMATCHCFMOPCODE
_ACLENTRYMATCHCCC.fields_by_name['cfm_levels'].message_type = _ACLMATCHCFMLEVEL
_ACLENTRYMATCHCCC.fields_by_name['match_flex_range'].message_type = _ACLMATCHFLEXIBLEOFFSETRANGE
_ACLENTRYMATCHCCC.fields_by_name['match_flex_mask'].message_type = _ACLMATCHFLEXIBLEOFFSETMASK
_ACLENTRYCCCTERMINATINGACTION.fields_by_name['action_accept'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYCCCTERMINATINGACTION.fields_by_name['action_discard'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYCCCTERMINATINGACTION.fields_by_name['action_send_to_client'].message_type = _ACLACTIONSENDTOCLIENT
_ACLENTRYCCCTERMINATINGACTION.fields_by_name['action_send_to_host'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYCCCTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryCccTerminatingAction'].fields.append(
  _ACLENTRYCCCTERMINATINGACTION.fields_by_name['action_accept'])
_ACLENTRYCCCTERMINATINGACTION.fields_by_name['action_accept'].containing_oneof = _ACLENTRYCCCTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryCccTerminatingAction']
_ACLENTRYCCCTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryCccTerminatingAction'].fields.append(
  _ACLENTRYCCCTERMINATINGACTION.fields_by_name['action_discard'])
_ACLENTRYCCCTERMINATINGACTION.fields_by_name['action_discard'].containing_oneof = _ACLENTRYCCCTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryCccTerminatingAction']
_ACLENTRYCCCTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryCccTerminatingAction'].fields.append(
  _ACLENTRYCCCTERMINATINGACTION.fields_by_name['action_send_to_client'])
_ACLENTRYCCCTERMINATINGACTION.fields_by_name['action_send_to_client'].containing_oneof = _ACLENTRYCCCTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryCccTerminatingAction']
_ACLENTRYCCCTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryCccTerminatingAction'].fields.append(
  _ACLENTRYCCCTERMINATINGACTION.fields_by_name['action_send_to_host'])
_ACLENTRYCCCTERMINATINGACTION.fields_by_name['action_send_to_host'].containing_oneof = _ACLENTRYCCCTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryCccTerminatingAction']
_ACLENTRYCCCNONTERMINATINGACTION.fields_by_name['action_count'].message_type = _ACLACTIONCOUNTER
_ACLENTRYCCCNONTERMINATINGACTION.fields_by_name['action_log'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYCCCNONTERMINATINGACTION.fields_by_name['action_syslog'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYCCCNONTERMINATINGACTION.fields_by_name['action_policer'].message_type = _ACLACTIONPOLICER
_ACLENTRYCCCNONTERMINATINGACTION.fields_by_name['action_sample'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYCCCNONTERMINATINGACTION.fields_by_name['action_copy_to_host'].message_type = _ACLACTIONCOPYTOHOST
_ACLENTRYCCCACTION.fields_by_name['actions_nt'].message_type = _ACLENTRYCCCNONTERMINATINGACTION
_ACLENTRYCCCACTION.fields_by_name['action_t'].message_type = _ACLENTRYCCCTERMINATINGACTION
_ACLENTRYMATCHMULTISERVICE.fields_by_name['match_dst_addrs'].message_type = _ACLMATCHIPADDRESS
_ACLENTRYMATCHMULTISERVICE.fields_by_name['match_src_addrs'].message_type = _ACLMATCHIPADDRESS
_ACLENTRYMATCHMULTISERVICE.fields_by_name['match_addrs'].message_type = _ACLMATCHIPADDRESS
_ACLENTRYMATCHMULTISERVICE.fields_by_name['match_dst_ports'].message_type = _ACLMATCHPORT
_ACLENTRYMATCHMULTISERVICE.fields_by_name['match_src_ports'].message_type = _ACLMATCHPORT
_ACLENTRYMATCHMULTISERVICE.fields_by_name['match_ip_protocols'].message_type = _ACLMATCHPROTOCOL
_ACLENTRYMATCHMULTISERVICE.fields_by_name['payload_protocols'].message_type = _ACLMATCHPROTOCOL
_ACLENTRYMATCHMULTISERVICE.fields_by_name['match_icmp_type'].message_type = _ACLMATCHICMPTYPE
_ACLENTRYMATCHMULTISERVICE.fields_by_name['match_icmp_code'].message_type = _ACLMATCHICMPCODE
_ACLENTRYMATCHMULTISERVICE.fields_by_name['ifl_names'].message_type = _ACLMATCHIFLNAMEINDEX
_ACLENTRYMATCHMULTISERVICE.fields_by_name['ipv6_next_headers'].message_type = _ACLMATCHNEXTHEADER
_ACLENTRYMATCHMULTISERVICE.fields_by_name['ether_types'].message_type = _ACLMATCHETHERTYPE
_ACLENTRYMATCHMULTISERVICE.fields_by_name['match_src_macs'].message_type = _ACLMATCHMACADDRESS
_ACLENTRYMATCHMULTISERVICE.fields_by_name['match_dst_macs'].message_type = _ACLMATCHMACADDRESS
_ACLENTRYMATCHMULTISERVICE.fields_by_name['vlan_ether_types'].message_type = _ACLMATCHETHERTYPE
_ACLENTRYMATCHMULTISERVICE.fields_by_name['stp_state'].enum_type = _ACLSTPMATCHFLAGS
_ACLENTRYMATCHMULTISERVICE.fields_by_name['mesh_group_ids'].message_type = _ACLMATCHMESHGROUP
_ACLENTRYMATCHMULTISERVICE.fields_by_name['l2_tokens'].message_type = _ACLMATCHL2TOKEN
_ACLENTRYMATCHMULTISERVICE.fields_by_name['match_pkt_len'].message_type = _ACLMATCHPKTLEN
_ACLENTRYMULTISERVICETERMINATINGACTION.fields_by_name['action_accept'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYMULTISERVICETERMINATINGACTION.fields_by_name['action_discard'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYMULTISERVICETERMINATINGACTION.fields_by_name['action_send_to_client'].message_type = _ACLACTIONSENDTOCLIENT
_ACLENTRYMULTISERVICETERMINATINGACTION.fields_by_name['action_send_to_host'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYMULTISERVICETERMINATINGACTION.oneofs_by_name['Oneof_AclEntryMultiServiceTerminatingAction'].fields.append(
  _ACLENTRYMULTISERVICETERMINATINGACTION.fields_by_name['action_accept'])
_ACLENTRYMULTISERVICETERMINATINGACTION.fields_by_name['action_accept'].containing_oneof = _ACLENTRYMULTISERVICETERMINATINGACTION.oneofs_by_name['Oneof_AclEntryMultiServiceTerminatingAction']
_ACLENTRYMULTISERVICETERMINATINGACTION.oneofs_by_name['Oneof_AclEntryMultiServiceTerminatingAction'].fields.append(
  _ACLENTRYMULTISERVICETERMINATINGACTION.fields_by_name['action_discard'])
_ACLENTRYMULTISERVICETERMINATINGACTION.fields_by_name['action_discard'].containing_oneof = _ACLENTRYMULTISERVICETERMINATINGACTION.oneofs_by_name['Oneof_AclEntryMultiServiceTerminatingAction']
_ACLENTRYMULTISERVICETERMINATINGACTION.oneofs_by_name['Oneof_AclEntryMultiServiceTerminatingAction'].fields.append(
  _ACLENTRYMULTISERVICETERMINATINGACTION.fields_by_name['action_send_to_client'])
_ACLENTRYMULTISERVICETERMINATINGACTION.fields_by_name['action_send_to_client'].containing_oneof = _ACLENTRYMULTISERVICETERMINATINGACTION.oneofs_by_name['Oneof_AclEntryMultiServiceTerminatingAction']
_ACLENTRYMULTISERVICETERMINATINGACTION.oneofs_by_name['Oneof_AclEntryMultiServiceTerminatingAction'].fields.append(
  _ACLENTRYMULTISERVICETERMINATINGACTION.fields_by_name['action_send_to_host'])
_ACLENTRYMULTISERVICETERMINATINGACTION.fields_by_name['action_send_to_host'].containing_oneof = _ACLENTRYMULTISERVICETERMINATINGACTION.oneofs_by_name['Oneof_AclEntryMultiServiceTerminatingAction']
_ACLENTRYMULTISERVICENONTERMINATINGACTION.fields_by_name['action_count'].message_type = _ACLACTIONCOUNTER
_ACLENTRYMULTISERVICENONTERMINATINGACTION.fields_by_name['action_log'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYMULTISERVICENONTERMINATINGACTION.fields_by_name['action_syslog'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYMULTISERVICENONTERMINATINGACTION.fields_by_name['action_policer'].message_type = _ACLACTIONPOLICER
_ACLENTRYMULTISERVICENONTERMINATINGACTION.fields_by_name['action_sample'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYMULTISERVICENONTERMINATINGACTION.fields_by_name['action_next_term'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYMULTISERVICENONTERMINATINGACTION.fields_by_name['action_copy_to_host'].message_type = _ACLACTIONCOPYTOHOST
_ACLENTRYMULTISERVICEACTION.fields_by_name['actions_nt'].message_type = _ACLENTRYMULTISERVICENONTERMINATINGACTION
_ACLENTRYMULTISERVICEACTION.fields_by_name['action_t'].message_type = _ACLENTRYMULTISERVICETERMINATINGACTION
_ACLENTRYMATCHMPLS.fields_by_name['match_label1'].message_type = _ACLMATCHMPLSLABEL
_ACLENTRYMATCHMPLS.fields_by_name['match_label2'].message_type = _ACLMATCHMPLSLABEL
_ACLENTRYMATCHMPLS.fields_by_name['match_label3'].message_type = _ACLMATCHMPLSLABEL
_ACLENTRYMATCHMPLS.fields_by_name['match_flex_range'].message_type = _ACLMATCHFLEXIBLEOFFSETRANGE
_ACLENTRYMATCHMPLS.fields_by_name['match_flex_mask'].message_type = _ACLMATCHFLEXIBLEOFFSETMASK
_ACLENTRYMPLSTERMINATINGACTION.fields_by_name['action_accept'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYMPLSTERMINATINGACTION.fields_by_name['action_discard'].enum_type = _ACLBOOLEANTYPE
_ACLENTRYMPLSTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryMplsTerminatingAction'].fields.append(
  _ACLENTRYMPLSTERMINATINGACTION.fields_by_name['action_accept'])
_ACLENTRYMPLSTERMINATINGACTION.fields_by_name['action_accept'].containing_oneof = _ACLENTRYMPLSTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryMplsTerminatingAction']
_ACLENTRYMPLSTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryMplsTerminatingAction'].fields.append(
  _ACLENTRYMPLSTERMINATINGACTION.fields_by_name['action_discard'])
_ACLENTRYMPLSTERMINATINGACTION.fields_by_name['action_discard'].containing_oneof = _ACLENTRYMPLSTERMINATINGACTION.oneofs_by_name['Oneof_AclEntryMplsTerminatingAction']
_ACLENTRYMPLSNONTERMINATINGACTION.fields_by_name['action_count'].message_type = _ACLACTIONCOUNTER
_ACLENTRYMPLSNONTERMINATINGACTION.fields_by_name['action_policer'].message_type = _ACLACTIONPOLICER
_ACLENTRYMPLSACTION.fields_by_name['actions_nt'].message_type = _ACLENTRYMPLSNONTERMINATINGACTION
_ACLENTRYMPLSACTION.fields_by_name['action_t'].message_type = _ACLENTRYMPLSTERMINATINGACTION
_ACLINET6ENTRY.fields_by_name['ace_op'].enum_type = _ACLENTRYOPERATION
_ACLINET6ENTRY.fields_by_name['adjacency'].message_type = _ACLADJACENCY
_ACLINET6ENTRY.fields_by_name['matches'].message_type = _ACLENTRYMATCHINET6
_ACLINET6ENTRY.fields_by_name['actions'].message_type = _ACLENTRYINET6ACTION
_ACLVPLSENTRY.fields_by_name['ace_op'].enum_type = _ACLENTRYOPERATION
_ACLVPLSENTRY.fields_by_name['adjacency'].message_type = _ACLADJACENCY
_ACLVPLSENTRY.fields_by_name['matches'].message_type = _ACLENTRYMATCHVPLS
_ACLVPLSENTRY.fields_by_name['actions'].message_type = _ACLENTRYVPLSACTION
_ACLCCCENTRY.fields_by_name['ace_op'].enum_type = _ACLENTRYOPERATION
_ACLCCCENTRY.fields_by_name['adjacency'].message_type = _ACLADJACENCY
_ACLCCCENTRY.fields_by_name['matches'].message_type = _ACLENTRYMATCHCCC
_ACLCCCENTRY.fields_by_name['actions'].message_type = _ACLENTRYCCCACTION
_ACLMULTISERVICEENTRY.fields_by_name['ace_op'].enum_type = _ACLENTRYOPERATION
_ACLMULTISERVICEENTRY.fields_by_name['adjacency'].message_type = _ACLADJACENCY
_ACLMULTISERVICEENTRY.fields_by_name['matches'].message_type = _ACLENTRYMATCHMULTISERVICE
_ACLMULTISERVICEENTRY.fields_by_name['actions'].message_type = _ACLENTRYMULTISERVICEACTION
_ACLMPLSENTRY.fields_by_name['ace_op'].enum_type = _ACLENTRYOPERATION
_ACLMPLSENTRY.fields_by_name['adjacency'].message_type = _ACLADJACENCY
_ACLMPLSENTRY.fields_by_name['matches'].message_type = _ACLENTRYMATCHMPLS
_ACLMPLSENTRY.fields_by_name['actions'].message_type = _ACLENTRYMPLSACTION
_ACLENTRY.fields_by_name['inet_entry'].message_type = _ACLINETENTRY
_ACLENTRY.fields_by_name['es_entry'].message_type = _ACLESENTRY
_ACLENTRY.fields_by_name['inet6_entry'].message_type = _ACLINET6ENTRY
_ACLENTRY.fields_by_name['vpls_entry'].message_type = _ACLVPLSENTRY
_ACLENTRY.fields_by_name['ccc_entry'].message_type = _ACLCCCENTRY
_ACLENTRY.fields_by_name['mservice_entry'].message_type = _ACLMULTISERVICEENTRY
_ACLENTRY.fields_by_name['mpls_entry'].message_type = _ACLMPLSENTRY
_ACLENTRY.oneofs_by_name['OneOf_AclEntry'].fields.append(
  _ACLENTRY.fields_by_name['inet_entry'])
_ACLENTRY.fields_by_name['inet_entry'].containing_oneof = _ACLENTRY.oneofs_by_name['OneOf_AclEntry']
_ACLENTRY.oneofs_by_name['OneOf_AclEntry'].fields.append(
  _ACLENTRY.fields_by_name['es_entry'])
_ACLENTRY.fields_by_name['es_entry'].containing_oneof = _ACLENTRY.oneofs_by_name['OneOf_AclEntry']
_ACLENTRY.oneofs_by_name['OneOf_AclEntry'].fields.append(
  _ACLENTRY.fields_by_name['inet6_entry'])
_ACLENTRY.fields_by_name['inet6_entry'].containing_oneof = _ACLENTRY.oneofs_by_name['OneOf_AclEntry']
_ACLENTRY.oneofs_by_name['OneOf_AclEntry'].fields.append(
  _ACLENTRY.fields_by_name['vpls_entry'])
_ACLENTRY.fields_by_name['vpls_entry'].containing_oneof = _ACLENTRY.oneofs_by_name['OneOf_AclEntry']
_ACLENTRY.oneofs_by_name['OneOf_AclEntry'].fields.append(
  _ACLENTRY.fields_by_name['ccc_entry'])
_ACLENTRY.fields_by_name['ccc_entry'].containing_oneof = _ACLENTRY.oneofs_by_name['OneOf_AclEntry']
_ACLENTRY.oneofs_by_name['OneOf_AclEntry'].fields.append(
  _ACLENTRY.fields_by_name['mservice_entry'])
_ACLENTRY.fields_by_name['mservice_entry'].containing_oneof = _ACLENTRY.oneofs_by_name['OneOf_AclEntry']
_ACLENTRY.oneofs_by_name['OneOf_AclEntry'].fields.append(
  _ACLENTRY.fields_by_name['mpls_entry'])
_ACLENTRY.fields_by_name['mpls_entry'].containing_oneof = _ACLENTRY.oneofs_by_name['OneOf_AclEntry']
_ACCESSLIST.fields_by_name['acl_type'].enum_type = _ACCESSLISTTYPES
_ACCESSLIST.fields_by_name['acl_family'].enum_type = _ACCESSLISTFAMILIES
_ACCESSLIST.fields_by_name['acl_flag'].enum_type = _ACCESSLISTFLAGS
_ACCESSLIST.fields_by_name['ace_list'].message_type = _ACLENTRY
_ACCESSLISTCOUNTER.fields_by_name['acl'].message_type = _ACCESSLIST
_ACCESSLISTCOUNTERBULK.fields_by_name['acl'].message_type = _ACCESSLIST
_ACCESSLISTRETURNSTATUS.fields_by_name['status'].enum_type = _ACCESSLISTRETURNVAL
_ACCESSLISTCOUNTERVAL.fields_by_name['status'].enum_type = _ACCESSLISTRETURNVAL
_ACCESSLISTBINDOBJPOINT.fields_by_name['vlan'].message_type = _ACLBINDOBJVLAN
_ACCESSLISTBINDOBJPOINT.fields_by_name['bd'].message_type = _ACLBINDOBJBRIDGEDOMAIN
_ACCESSLISTBINDOBJPOINT.oneofs_by_name['OneOf_AclBindPoint'].fields.append(
  _ACCESSLISTBINDOBJPOINT.fields_by_name['intf'])
_ACCESSLISTBINDOBJPOINT.fields_by_name['intf'].containing_oneof = _ACCESSLISTBINDOBJPOINT.oneofs_by_name['OneOf_AclBindPoint']
_ACCESSLISTBINDOBJPOINT.oneofs_by_name['OneOf_AclBindPoint'].fields.append(
  _ACCESSLISTBINDOBJPOINT.fields_by_name['fwd_table'])
_ACCESSLISTBINDOBJPOINT.fields_by_name['fwd_table'].containing_oneof = _ACCESSLISTBINDOBJPOINT.oneofs_by_name['OneOf_AclBindPoint']
_ACCESSLISTBINDOBJPOINT.oneofs_by_name['OneOf_AclBindPoint'].fields.append(
  _ACCESSLISTBINDOBJPOINT.fields_by_name['vlan'])
_ACCESSLISTBINDOBJPOINT.fields_by_name['vlan'].containing_oneof = _ACCESSLISTBINDOBJPOINT.oneofs_by_name['OneOf_AclBindPoint']
_ACCESSLISTBINDOBJPOINT.oneofs_by_name['OneOf_AclBindPoint'].fields.append(
  _ACCESSLISTBINDOBJPOINT.fields_by_name['bd'])
_ACCESSLISTBINDOBJPOINT.fields_by_name['bd'].containing_oneof = _ACCESSLISTBINDOBJPOINT.oneofs_by_name['OneOf_AclBindPoint']
_ACCESSLISTOBJBIND.fields_by_name['acl'].message_type = _ACCESSLIST
_ACCESSLISTOBJBIND.fields_by_name['obj_type'].enum_type = _ACCESSLISTBINDOBJTYPE
_ACCESSLISTOBJBIND.fields_by_name['bind_object'].message_type = _ACCESSLISTBINDOBJPOINT
_ACCESSLISTOBJBIND.fields_by_name['bind_direction'].enum_type = _ACLBINDDIRECTION
_ACCESSLISTOBJBIND.fields_by_name['bind_family'].enum_type = _ACCESSLISTFAMILIES
DESCRIPTOR.message_types_by_name['AccessListVoid'] = _ACCESSLISTVOID
DESCRIPTOR.message_types_by_name['AclPolicerTwoColor'] = _ACLPOLICERTWOCOLOR
DESCRIPTOR.message_types_by_name['AclPolicerSingleRateThreeColor'] = _ACLPOLICERSINGLERATETHREECOLOR
DESCRIPTOR.message_types_by_name['AclPolicerTwoRateThreeColor'] = _ACLPOLICERTWORATETHREECOLOR
DESCRIPTOR.message_types_by_name['AclPolicerHierarchical'] = _ACLPOLICERHIERARCHICAL
DESCRIPTOR.message_types_by_name['AclPolicerParameter'] = _ACLPOLICERPARAMETER
DESCRIPTOR.message_types_by_name['AccessListPolicer'] = _ACCESSLISTPOLICER
DESCRIPTOR.message_types_by_name['AclMatchIpAddress'] = _ACLMATCHIPADDRESS
DESCRIPTOR.message_types_by_name['AclMatchPort'] = _ACLMATCHPORT
DESCRIPTOR.message_types_by_name['AclMatchIpPrecedence'] = _ACLMATCHIPPRECEDENCE
DESCRIPTOR.message_types_by_name['AclMatchTrafficClass'] = _ACLMATCHTRAFFICCLASS
DESCRIPTOR.message_types_by_name['AclMatchDscpCode'] = _ACLMATCHDSCPCODE
DESCRIPTOR.message_types_by_name['AclMatchProtocol'] = _ACLMATCHPROTOCOL
DESCRIPTOR.message_types_by_name['AclMatchIcmpType'] = _ACLMATCHICMPTYPE
DESCRIPTOR.message_types_by_name['AclMatchIcmpCode'] = _ACLMATCHICMPCODE
DESCRIPTOR.message_types_by_name['AclMatchPktLen'] = _ACLMATCHPKTLEN
DESCRIPTOR.message_types_by_name['AclMatchLossPriority'] = _ACLMATCHLOSSPRIORITY
DESCRIPTOR.message_types_by_name['AclMatchForwardingClass'] = _ACLMATCHFORWARDINGCLASS
DESCRIPTOR.message_types_by_name['AclMatchNextHeader'] = _ACLMATCHNEXTHEADER
DESCRIPTOR.message_types_by_name['AclMatchMplsLabel'] = _ACLMATCHMPLSLABEL
DESCRIPTOR.message_types_by_name['AclMatchVlanId'] = _ACLMATCHVLANID
DESCRIPTOR.message_types_by_name['AclMatchMeshGroup'] = _ACLMATCHMESHGROUP
DESCRIPTOR.message_types_by_name['AclMatchL2Token'] = _ACLMATCHL2TOKEN
DESCRIPTOR.message_types_by_name['AclMatchCfmLevel'] = _ACLMATCHCFMLEVEL
DESCRIPTOR.message_types_by_name['AclMatchCfmOpcode'] = _ACLMATCHCFMOPCODE
DESCRIPTOR.message_types_by_name['AclMatchTtl'] = _ACLMATCHTTL
DESCRIPTOR.message_types_by_name['AclMatchFragmentOffset'] = _ACLMATCHFRAGMENTOFFSET
DESCRIPTOR.message_types_by_name['AclActionPolicer'] = _ACLACTIONPOLICER
DESCRIPTOR.message_types_by_name['AclActionCounter'] = _ACLACTIONCOUNTER
DESCRIPTOR.message_types_by_name['AclActionSendToClient'] = _ACLACTIONSENDTOCLIENT
DESCRIPTOR.message_types_by_name['AclActionCopyToHost'] = _ACLACTIONCOPYTOHOST
DESCRIPTOR.message_types_by_name['AclActionRoutingInstance'] = _ACLACTIONROUTINGINSTANCE
DESCRIPTOR.message_types_by_name['AclActionPolicerInstance'] = _ACLACTIONPOLICERINSTANCE
DESCRIPTOR.message_types_by_name['AclActionTopologyRedirect'] = _ACLACTIONTOPOLOGYREDIRECT
DESCRIPTOR.message_types_by_name['AclActionSetNexthop'] = _ACLACTIONSETNEXTHOP
DESCRIPTOR.message_types_by_name['AclActionLossPriority'] = _ACLACTIONLOSSPRIORITY
DESCRIPTOR.message_types_by_name['AclActionForwardingPriority'] = _ACLACTIONFORWARDINGPRIORITY
DESCRIPTOR.message_types_by_name['AclActionForwardingClass'] = _ACLACTIONFORWARDINGCLASS
DESCRIPTOR.message_types_by_name['AclActionSetIpDscp'] = _ACLACTIONSETIPDSCP
DESCRIPTOR.message_types_by_name['AclActionIflNameIndex'] = _ACLACTIONIFLNAMEINDEX
DESCRIPTOR.message_types_by_name['AclActionNextInterface'] = _ACLACTIONNEXTINTERFACE
DESCRIPTOR.message_types_by_name['AclActionNextIp'] = _ACLACTIONNEXTIP
DESCRIPTOR.message_types_by_name['AclAdjacency'] = _ACLADJACENCY
DESCRIPTOR.message_types_by_name['AclMatchIflNameIndex'] = _ACLMATCHIFLNAMEINDEX
DESCRIPTOR.message_types_by_name['AclMatchFlexOffset'] = _ACLMATCHFLEXOFFSET
DESCRIPTOR.message_types_by_name['AclMatchFlexibleRange'] = _ACLMATCHFLEXIBLERANGE
DESCRIPTOR.message_types_by_name['AclMatchFlexibleOffsetRange'] = _ACLMATCHFLEXIBLEOFFSETRANGE
DESCRIPTOR.message_types_by_name['AclMatchFlexibleMask'] = _ACLMATCHFLEXIBLEMASK
DESCRIPTOR.message_types_by_name['AclMatchFlexibleOffsetMask'] = _ACLMATCHFLEXIBLEOFFSETMASK
DESCRIPTOR.message_types_by_name['AclMatchMacAddress'] = _ACLMATCHMACADDRESS
DESCRIPTOR.message_types_by_name['AclMatchEtherType'] = _ACLMATCHETHERTYPE
DESCRIPTOR.message_types_by_name['AclMatchLearnVlanId'] = _ACLMATCHLEARNVLANID
DESCRIPTOR.message_types_by_name['AclMatchLearnVlanPriority'] = _ACLMATCHLEARNVLANPRIORITY
DESCRIPTOR.message_types_by_name['AclActionNextHop'] = _ACLACTIONNEXTHOP
DESCRIPTOR.message_types_by_name['AclEntryMatchInet'] = _ACLENTRYMATCHINET
DESCRIPTOR.message_types_by_name['AclEntryInetTerminatingAction'] = _ACLENTRYINETTERMINATINGACTION
DESCRIPTOR.message_types_by_name['AclEntryInetNonTerminatingAction'] = _ACLENTRYINETNONTERMINATINGACTION
DESCRIPTOR.message_types_by_name['AclEntryInetAction'] = _ACLENTRYINETACTION
DESCRIPTOR.message_types_by_name['AclInetEntry'] = _ACLINETENTRY
DESCRIPTOR.message_types_by_name['AclEntryMatchEs'] = _ACLENTRYMATCHES
DESCRIPTOR.message_types_by_name['AclEntryEsTerminatingAction'] = _ACLENTRYESTERMINATINGACTION
DESCRIPTOR.message_types_by_name['AclEntryEsNonTerminatingAction'] = _ACLENTRYESNONTERMINATINGACTION
DESCRIPTOR.message_types_by_name['AclEntryEsAction'] = _ACLENTRYESACTION
DESCRIPTOR.message_types_by_name['AclEsEntry'] = _ACLESENTRY
DESCRIPTOR.message_types_by_name['AclEntryMatchInet6'] = _ACLENTRYMATCHINET6
DESCRIPTOR.message_types_by_name['AclEntryInet6TerminatingAction'] = _ACLENTRYINET6TERMINATINGACTION
DESCRIPTOR.message_types_by_name['AclEntryInet6NonTerminatingAction'] = _ACLENTRYINET6NONTERMINATINGACTION
DESCRIPTOR.message_types_by_name['AclEntryInet6Action'] = _ACLENTRYINET6ACTION
DESCRIPTOR.message_types_by_name['AclEntryMatchVpls'] = _ACLENTRYMATCHVPLS
DESCRIPTOR.message_types_by_name['AclEntryVplsTerminatingAction'] = _ACLENTRYVPLSTERMINATINGACTION
DESCRIPTOR.message_types_by_name['AclEntryVplsNonTerminatingAction'] = _ACLENTRYVPLSNONTERMINATINGACTION
DESCRIPTOR.message_types_by_name['AclEntryVplsAction'] = _ACLENTRYVPLSACTION
DESCRIPTOR.message_types_by_name['AclEntryMatchCcc'] = _ACLENTRYMATCHCCC
DESCRIPTOR.message_types_by_name['AclEntryCccTerminatingAction'] = _ACLENTRYCCCTERMINATINGACTION
DESCRIPTOR.message_types_by_name['AclEntryCccNonTerminatingAction'] = _ACLENTRYCCCNONTERMINATINGACTION
DESCRIPTOR.message_types_by_name['AclEntryCccAction'] = _ACLENTRYCCCACTION
DESCRIPTOR.message_types_by_name['AclEntryMatchMultiService'] = _ACLENTRYMATCHMULTISERVICE
DESCRIPTOR.message_types_by_name['AclEntryMultiServiceTerminatingAction'] = _ACLENTRYMULTISERVICETERMINATINGACTION
DESCRIPTOR.message_types_by_name['AclEntryMultiServiceNonTerminatingAction'] = _ACLENTRYMULTISERVICENONTERMINATINGACTION
DESCRIPTOR.message_types_by_name['AclEntryMultiServiceAction'] = _ACLENTRYMULTISERVICEACTION
DESCRIPTOR.message_types_by_name['AclEntryMatchMpls'] = _ACLENTRYMATCHMPLS
DESCRIPTOR.message_types_by_name['AclEntryMplsTerminatingAction'] = _ACLENTRYMPLSTERMINATINGACTION
DESCRIPTOR.message_types_by_name['AclEntryMplsNonTerminatingAction'] = _ACLENTRYMPLSNONTERMINATINGACTION
DESCRIPTOR.message_types_by_name['AclEntryMplsAction'] = _ACLENTRYMPLSACTION
DESCRIPTOR.message_types_by_name['AclInet6Entry'] = _ACLINET6ENTRY
DESCRIPTOR.message_types_by_name['AclVplsEntry'] = _ACLVPLSENTRY
DESCRIPTOR.message_types_by_name['AclCccEntry'] = _ACLCCCENTRY
DESCRIPTOR.message_types_by_name['AclMultiServiceEntry'] = _ACLMULTISERVICEENTRY
DESCRIPTOR.message_types_by_name['AclMplsEntry'] = _ACLMPLSENTRY
DESCRIPTOR.message_types_by_name['AclEntry'] = _ACLENTRY
DESCRIPTOR.message_types_by_name['AccessList'] = _ACCESSLIST
DESCRIPTOR.message_types_by_name['AccessListCounter'] = _ACCESSLISTCOUNTER
DESCRIPTOR.message_types_by_name['AccessListCounterBulk'] = _ACCESSLISTCOUNTERBULK
DESCRIPTOR.message_types_by_name['AccessListReturnStatus'] = _ACCESSLISTRETURNSTATUS
DESCRIPTOR.message_types_by_name['AccessListCounterVal'] = _ACCESSLISTCOUNTERVAL
DESCRIPTOR.message_types_by_name['AclBindObjVlan'] = _ACLBINDOBJVLAN
DESCRIPTOR.message_types_by_name['AclBindObjBridgeDomain'] = _ACLBINDOBJBRIDGEDOMAIN
DESCRIPTOR.message_types_by_name['AccessListBindObjPoint'] = _ACCESSLISTBINDOBJPOINT
DESCRIPTOR.message_types_by_name['AccessListObjBind'] = _ACCESSLISTOBJBIND
DESCRIPTOR.enum_types_by_name['AclBooleanType'] = _ACLBOOLEANTYPE
DESCRIPTOR.enum_types_by_name['AclMatchOperation'] = _ACLMATCHOPERATION
DESCRIPTOR.enum_types_by_name['AclPolicerType'] = _ACLPOLICERTYPE
DESCRIPTOR.enum_types_by_name['AclPolicerFlags'] = _ACLPOLICERFLAGS
DESCRIPTOR.enum_types_by_name['AclPolicerRate'] = _ACLPOLICERRATE
DESCRIPTOR.enum_types_by_name['AclPolicerBurstSize'] = _ACLPOLICERBURSTSIZE
DESCRIPTOR.enum_types_by_name['AclColorModeType'] = _ACLCOLORMODETYPE
DESCRIPTOR.enum_types_by_name['AclLossPriority'] = _ACLLOSSPRIORITY
DESCRIPTOR.enum_types_by_name['AclForwardingClass'] = _ACLFORWARDINGCLASS
DESCRIPTOR.enum_types_by_name['AclStpMatchFlags'] = _ACLSTPMATCHFLAGS
DESCRIPTOR.enum_types_by_name['AclEntryActionRejectReason'] = _ACLENTRYACTIONREJECTREASON
DESCRIPTOR.enum_types_by_name['AclFragmentFlags'] = _ACLFRAGMENTFLAGS
DESCRIPTOR.enum_types_by_name['Precedence'] = _PRECEDENCE
DESCRIPTOR.enum_types_by_name['AclEntryOperation'] = _ACLENTRYOPERATION
DESCRIPTOR.enum_types_by_name['AclAdjacencyType'] = _ACLADJACENCYTYPE
DESCRIPTOR.enum_types_by_name['AclEntryMatchFlexStartOffest'] = _ACLENTRYMATCHFLEXSTARTOFFEST
DESCRIPTOR.enum_types_by_name['AccessListTypes'] = _ACCESSLISTTYPES
DESCRIPTOR.enum_types_by_name['AccessListFamilies'] = _ACCESSLISTFAMILIES
DESCRIPTOR.enum_types_by_name['AccessListFlags'] = _ACCESSLISTFLAGS
DESCRIPTOR.enum_types_by_name['AclBindDirection'] = _ACLBINDDIRECTION
DESCRIPTOR.enum_types_by_name['AccessListReturnVal'] = _ACCESSLISTRETURNVAL
DESCRIPTOR.enum_types_by_name['AccessListBindObjType'] = _ACCESSLISTBINDOBJTYPE

AccessListVoid = _reflection.GeneratedProtocolMessageType('AccessListVoid', (_message.Message,), dict(
  DESCRIPTOR = _ACCESSLISTVOID,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AccessListVoid)
  ))
_sym_db.RegisterMessage(AccessListVoid)

AclPolicerTwoColor = _reflection.GeneratedProtocolMessageType('AclPolicerTwoColor', (_message.Message,), dict(
  DESCRIPTOR = _ACLPOLICERTWOCOLOR,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclPolicerTwoColor)
  ))
_sym_db.RegisterMessage(AclPolicerTwoColor)

AclPolicerSingleRateThreeColor = _reflection.GeneratedProtocolMessageType('AclPolicerSingleRateThreeColor', (_message.Message,), dict(
  DESCRIPTOR = _ACLPOLICERSINGLERATETHREECOLOR,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclPolicerSingleRateThreeColor)
  ))
_sym_db.RegisterMessage(AclPolicerSingleRateThreeColor)

AclPolicerTwoRateThreeColor = _reflection.GeneratedProtocolMessageType('AclPolicerTwoRateThreeColor', (_message.Message,), dict(
  DESCRIPTOR = _ACLPOLICERTWORATETHREECOLOR,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclPolicerTwoRateThreeColor)
  ))
_sym_db.RegisterMessage(AclPolicerTwoRateThreeColor)

AclPolicerHierarchical = _reflection.GeneratedProtocolMessageType('AclPolicerHierarchical', (_message.Message,), dict(
  DESCRIPTOR = _ACLPOLICERHIERARCHICAL,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclPolicerHierarchical)
  ))
_sym_db.RegisterMessage(AclPolicerHierarchical)

AclPolicerParameter = _reflection.GeneratedProtocolMessageType('AclPolicerParameter', (_message.Message,), dict(
  DESCRIPTOR = _ACLPOLICERPARAMETER,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclPolicerParameter)
  ))
_sym_db.RegisterMessage(AclPolicerParameter)

AccessListPolicer = _reflection.GeneratedProtocolMessageType('AccessListPolicer', (_message.Message,), dict(
  DESCRIPTOR = _ACCESSLISTPOLICER,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AccessListPolicer)
  ))
_sym_db.RegisterMessage(AccessListPolicer)

AclMatchIpAddress = _reflection.GeneratedProtocolMessageType('AclMatchIpAddress', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHIPADDRESS,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchIpAddress)
  ))
_sym_db.RegisterMessage(AclMatchIpAddress)

AclMatchPort = _reflection.GeneratedProtocolMessageType('AclMatchPort', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHPORT,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchPort)
  ))
_sym_db.RegisterMessage(AclMatchPort)

AclMatchIpPrecedence = _reflection.GeneratedProtocolMessageType('AclMatchIpPrecedence', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHIPPRECEDENCE,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchIpPrecedence)
  ))
_sym_db.RegisterMessage(AclMatchIpPrecedence)

AclMatchTrafficClass = _reflection.GeneratedProtocolMessageType('AclMatchTrafficClass', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHTRAFFICCLASS,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchTrafficClass)
  ))
_sym_db.RegisterMessage(AclMatchTrafficClass)

AclMatchDscpCode = _reflection.GeneratedProtocolMessageType('AclMatchDscpCode', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHDSCPCODE,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchDscpCode)
  ))
_sym_db.RegisterMessage(AclMatchDscpCode)

AclMatchProtocol = _reflection.GeneratedProtocolMessageType('AclMatchProtocol', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHPROTOCOL,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchProtocol)
  ))
_sym_db.RegisterMessage(AclMatchProtocol)

AclMatchIcmpType = _reflection.GeneratedProtocolMessageType('AclMatchIcmpType', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHICMPTYPE,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchIcmpType)
  ))
_sym_db.RegisterMessage(AclMatchIcmpType)

AclMatchIcmpCode = _reflection.GeneratedProtocolMessageType('AclMatchIcmpCode', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHICMPCODE,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchIcmpCode)
  ))
_sym_db.RegisterMessage(AclMatchIcmpCode)

AclMatchPktLen = _reflection.GeneratedProtocolMessageType('AclMatchPktLen', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHPKTLEN,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchPktLen)
  ))
_sym_db.RegisterMessage(AclMatchPktLen)

AclMatchLossPriority = _reflection.GeneratedProtocolMessageType('AclMatchLossPriority', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHLOSSPRIORITY,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchLossPriority)
  ))
_sym_db.RegisterMessage(AclMatchLossPriority)

AclMatchForwardingClass = _reflection.GeneratedProtocolMessageType('AclMatchForwardingClass', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHFORWARDINGCLASS,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchForwardingClass)
  ))
_sym_db.RegisterMessage(AclMatchForwardingClass)

AclMatchNextHeader = _reflection.GeneratedProtocolMessageType('AclMatchNextHeader', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHNEXTHEADER,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchNextHeader)
  ))
_sym_db.RegisterMessage(AclMatchNextHeader)

AclMatchMplsLabel = _reflection.GeneratedProtocolMessageType('AclMatchMplsLabel', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHMPLSLABEL,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchMplsLabel)
  ))
_sym_db.RegisterMessage(AclMatchMplsLabel)

AclMatchVlanId = _reflection.GeneratedProtocolMessageType('AclMatchVlanId', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHVLANID,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchVlanId)
  ))
_sym_db.RegisterMessage(AclMatchVlanId)

AclMatchMeshGroup = _reflection.GeneratedProtocolMessageType('AclMatchMeshGroup', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHMESHGROUP,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchMeshGroup)
  ))
_sym_db.RegisterMessage(AclMatchMeshGroup)

AclMatchL2Token = _reflection.GeneratedProtocolMessageType('AclMatchL2Token', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHL2TOKEN,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchL2Token)
  ))
_sym_db.RegisterMessage(AclMatchL2Token)

AclMatchCfmLevel = _reflection.GeneratedProtocolMessageType('AclMatchCfmLevel', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHCFMLEVEL,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchCfmLevel)
  ))
_sym_db.RegisterMessage(AclMatchCfmLevel)

AclMatchCfmOpcode = _reflection.GeneratedProtocolMessageType('AclMatchCfmOpcode', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHCFMOPCODE,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchCfmOpcode)
  ))
_sym_db.RegisterMessage(AclMatchCfmOpcode)

AclMatchTtl = _reflection.GeneratedProtocolMessageType('AclMatchTtl', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHTTL,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchTtl)
  ))
_sym_db.RegisterMessage(AclMatchTtl)

AclMatchFragmentOffset = _reflection.GeneratedProtocolMessageType('AclMatchFragmentOffset', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHFRAGMENTOFFSET,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchFragmentOffset)
  ))
_sym_db.RegisterMessage(AclMatchFragmentOffset)

AclActionPolicer = _reflection.GeneratedProtocolMessageType('AclActionPolicer', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONPOLICER,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionPolicer)
  ))
_sym_db.RegisterMessage(AclActionPolicer)

AclActionCounter = _reflection.GeneratedProtocolMessageType('AclActionCounter', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONCOUNTER,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionCounter)
  ))
_sym_db.RegisterMessage(AclActionCounter)

AclActionSendToClient = _reflection.GeneratedProtocolMessageType('AclActionSendToClient', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONSENDTOCLIENT,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionSendToClient)
  ))
_sym_db.RegisterMessage(AclActionSendToClient)

AclActionCopyToHost = _reflection.GeneratedProtocolMessageType('AclActionCopyToHost', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONCOPYTOHOST,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionCopyToHost)
  ))
_sym_db.RegisterMessage(AclActionCopyToHost)

AclActionRoutingInstance = _reflection.GeneratedProtocolMessageType('AclActionRoutingInstance', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONROUTINGINSTANCE,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionRoutingInstance)
  ))
_sym_db.RegisterMessage(AclActionRoutingInstance)

AclActionPolicerInstance = _reflection.GeneratedProtocolMessageType('AclActionPolicerInstance', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONPOLICERINSTANCE,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionPolicerInstance)
  ))
_sym_db.RegisterMessage(AclActionPolicerInstance)

AclActionTopologyRedirect = _reflection.GeneratedProtocolMessageType('AclActionTopologyRedirect', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONTOPOLOGYREDIRECT,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionTopologyRedirect)
  ))
_sym_db.RegisterMessage(AclActionTopologyRedirect)

AclActionSetNexthop = _reflection.GeneratedProtocolMessageType('AclActionSetNexthop', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONSETNEXTHOP,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionSetNexthop)
  ))
_sym_db.RegisterMessage(AclActionSetNexthop)

AclActionLossPriority = _reflection.GeneratedProtocolMessageType('AclActionLossPriority', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONLOSSPRIORITY,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionLossPriority)
  ))
_sym_db.RegisterMessage(AclActionLossPriority)

AclActionForwardingPriority = _reflection.GeneratedProtocolMessageType('AclActionForwardingPriority', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONFORWARDINGPRIORITY,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionForwardingPriority)
  ))
_sym_db.RegisterMessage(AclActionForwardingPriority)

AclActionForwardingClass = _reflection.GeneratedProtocolMessageType('AclActionForwardingClass', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONFORWARDINGCLASS,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionForwardingClass)
  ))
_sym_db.RegisterMessage(AclActionForwardingClass)

AclActionSetIpDscp = _reflection.GeneratedProtocolMessageType('AclActionSetIpDscp', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONSETIPDSCP,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionSetIpDscp)
  ))
_sym_db.RegisterMessage(AclActionSetIpDscp)

AclActionIflNameIndex = _reflection.GeneratedProtocolMessageType('AclActionIflNameIndex', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONIFLNAMEINDEX,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionIflNameIndex)
  ))
_sym_db.RegisterMessage(AclActionIflNameIndex)

AclActionNextInterface = _reflection.GeneratedProtocolMessageType('AclActionNextInterface', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONNEXTINTERFACE,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionNextInterface)
  ))
_sym_db.RegisterMessage(AclActionNextInterface)

AclActionNextIp = _reflection.GeneratedProtocolMessageType('AclActionNextIp', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONNEXTIP,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionNextIp)
  ))
_sym_db.RegisterMessage(AclActionNextIp)

AclAdjacency = _reflection.GeneratedProtocolMessageType('AclAdjacency', (_message.Message,), dict(
  DESCRIPTOR = _ACLADJACENCY,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclAdjacency)
  ))
_sym_db.RegisterMessage(AclAdjacency)

AclMatchIflNameIndex = _reflection.GeneratedProtocolMessageType('AclMatchIflNameIndex', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHIFLNAMEINDEX,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchIflNameIndex)
  ))
_sym_db.RegisterMessage(AclMatchIflNameIndex)

AclMatchFlexOffset = _reflection.GeneratedProtocolMessageType('AclMatchFlexOffset', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHFLEXOFFSET,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchFlexOffset)
  ))
_sym_db.RegisterMessage(AclMatchFlexOffset)

AclMatchFlexibleRange = _reflection.GeneratedProtocolMessageType('AclMatchFlexibleRange', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHFLEXIBLERANGE,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchFlexibleRange)
  ))
_sym_db.RegisterMessage(AclMatchFlexibleRange)

AclMatchFlexibleOffsetRange = _reflection.GeneratedProtocolMessageType('AclMatchFlexibleOffsetRange', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHFLEXIBLEOFFSETRANGE,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchFlexibleOffsetRange)
  ))
_sym_db.RegisterMessage(AclMatchFlexibleOffsetRange)

AclMatchFlexibleMask = _reflection.GeneratedProtocolMessageType('AclMatchFlexibleMask', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHFLEXIBLEMASK,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchFlexibleMask)
  ))
_sym_db.RegisterMessage(AclMatchFlexibleMask)

AclMatchFlexibleOffsetMask = _reflection.GeneratedProtocolMessageType('AclMatchFlexibleOffsetMask', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHFLEXIBLEOFFSETMASK,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchFlexibleOffsetMask)
  ))
_sym_db.RegisterMessage(AclMatchFlexibleOffsetMask)

AclMatchMacAddress = _reflection.GeneratedProtocolMessageType('AclMatchMacAddress', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHMACADDRESS,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchMacAddress)
  ))
_sym_db.RegisterMessage(AclMatchMacAddress)

AclMatchEtherType = _reflection.GeneratedProtocolMessageType('AclMatchEtherType', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHETHERTYPE,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchEtherType)
  ))
_sym_db.RegisterMessage(AclMatchEtherType)

AclMatchLearnVlanId = _reflection.GeneratedProtocolMessageType('AclMatchLearnVlanId', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHLEARNVLANID,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchLearnVlanId)
  ))
_sym_db.RegisterMessage(AclMatchLearnVlanId)

AclMatchLearnVlanPriority = _reflection.GeneratedProtocolMessageType('AclMatchLearnVlanPriority', (_message.Message,), dict(
  DESCRIPTOR = _ACLMATCHLEARNVLANPRIORITY,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMatchLearnVlanPriority)
  ))
_sym_db.RegisterMessage(AclMatchLearnVlanPriority)

AclActionNextHop = _reflection.GeneratedProtocolMessageType('AclActionNextHop', (_message.Message,), dict(
  DESCRIPTOR = _ACLACTIONNEXTHOP,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclActionNextHop)
  ))
_sym_db.RegisterMessage(AclActionNextHop)

AclEntryMatchInet = _reflection.GeneratedProtocolMessageType('AclEntryMatchInet', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYMATCHINET,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryMatchInet)
  ))
_sym_db.RegisterMessage(AclEntryMatchInet)

AclEntryInetTerminatingAction = _reflection.GeneratedProtocolMessageType('AclEntryInetTerminatingAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYINETTERMINATINGACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryInetTerminatingAction)
  ))
_sym_db.RegisterMessage(AclEntryInetTerminatingAction)

AclEntryInetNonTerminatingAction = _reflection.GeneratedProtocolMessageType('AclEntryInetNonTerminatingAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYINETNONTERMINATINGACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryInetNonTerminatingAction)
  ))
_sym_db.RegisterMessage(AclEntryInetNonTerminatingAction)

AclEntryInetAction = _reflection.GeneratedProtocolMessageType('AclEntryInetAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYINETACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryInetAction)
  ))
_sym_db.RegisterMessage(AclEntryInetAction)

AclInetEntry = _reflection.GeneratedProtocolMessageType('AclInetEntry', (_message.Message,), dict(
  DESCRIPTOR = _ACLINETENTRY,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclInetEntry)
  ))
_sym_db.RegisterMessage(AclInetEntry)

AclEntryMatchEs = _reflection.GeneratedProtocolMessageType('AclEntryMatchEs', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYMATCHES,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryMatchEs)
  ))
_sym_db.RegisterMessage(AclEntryMatchEs)

AclEntryEsTerminatingAction = _reflection.GeneratedProtocolMessageType('AclEntryEsTerminatingAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYESTERMINATINGACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryEsTerminatingAction)
  ))
_sym_db.RegisterMessage(AclEntryEsTerminatingAction)

AclEntryEsNonTerminatingAction = _reflection.GeneratedProtocolMessageType('AclEntryEsNonTerminatingAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYESNONTERMINATINGACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryEsNonTerminatingAction)
  ))
_sym_db.RegisterMessage(AclEntryEsNonTerminatingAction)

AclEntryEsAction = _reflection.GeneratedProtocolMessageType('AclEntryEsAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYESACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryEsAction)
  ))
_sym_db.RegisterMessage(AclEntryEsAction)

AclEsEntry = _reflection.GeneratedProtocolMessageType('AclEsEntry', (_message.Message,), dict(
  DESCRIPTOR = _ACLESENTRY,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEsEntry)
  ))
_sym_db.RegisterMessage(AclEsEntry)

AclEntryMatchInet6 = _reflection.GeneratedProtocolMessageType('AclEntryMatchInet6', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYMATCHINET6,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryMatchInet6)
  ))
_sym_db.RegisterMessage(AclEntryMatchInet6)

AclEntryInet6TerminatingAction = _reflection.GeneratedProtocolMessageType('AclEntryInet6TerminatingAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYINET6TERMINATINGACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryInet6TerminatingAction)
  ))
_sym_db.RegisterMessage(AclEntryInet6TerminatingAction)

AclEntryInet6NonTerminatingAction = _reflection.GeneratedProtocolMessageType('AclEntryInet6NonTerminatingAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYINET6NONTERMINATINGACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryInet6NonTerminatingAction)
  ))
_sym_db.RegisterMessage(AclEntryInet6NonTerminatingAction)

AclEntryInet6Action = _reflection.GeneratedProtocolMessageType('AclEntryInet6Action', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYINET6ACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryInet6Action)
  ))
_sym_db.RegisterMessage(AclEntryInet6Action)

AclEntryMatchVpls = _reflection.GeneratedProtocolMessageType('AclEntryMatchVpls', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYMATCHVPLS,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryMatchVpls)
  ))
_sym_db.RegisterMessage(AclEntryMatchVpls)

AclEntryVplsTerminatingAction = _reflection.GeneratedProtocolMessageType('AclEntryVplsTerminatingAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYVPLSTERMINATINGACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryVplsTerminatingAction)
  ))
_sym_db.RegisterMessage(AclEntryVplsTerminatingAction)

AclEntryVplsNonTerminatingAction = _reflection.GeneratedProtocolMessageType('AclEntryVplsNonTerminatingAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYVPLSNONTERMINATINGACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryVplsNonTerminatingAction)
  ))
_sym_db.RegisterMessage(AclEntryVplsNonTerminatingAction)

AclEntryVplsAction = _reflection.GeneratedProtocolMessageType('AclEntryVplsAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYVPLSACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryVplsAction)
  ))
_sym_db.RegisterMessage(AclEntryVplsAction)

AclEntryMatchCcc = _reflection.GeneratedProtocolMessageType('AclEntryMatchCcc', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYMATCHCCC,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryMatchCcc)
  ))
_sym_db.RegisterMessage(AclEntryMatchCcc)

AclEntryCccTerminatingAction = _reflection.GeneratedProtocolMessageType('AclEntryCccTerminatingAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYCCCTERMINATINGACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryCccTerminatingAction)
  ))
_sym_db.RegisterMessage(AclEntryCccTerminatingAction)

AclEntryCccNonTerminatingAction = _reflection.GeneratedProtocolMessageType('AclEntryCccNonTerminatingAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYCCCNONTERMINATINGACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryCccNonTerminatingAction)
  ))
_sym_db.RegisterMessage(AclEntryCccNonTerminatingAction)

AclEntryCccAction = _reflection.GeneratedProtocolMessageType('AclEntryCccAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYCCCACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryCccAction)
  ))
_sym_db.RegisterMessage(AclEntryCccAction)

AclEntryMatchMultiService = _reflection.GeneratedProtocolMessageType('AclEntryMatchMultiService', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYMATCHMULTISERVICE,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryMatchMultiService)
  ))
_sym_db.RegisterMessage(AclEntryMatchMultiService)

AclEntryMultiServiceTerminatingAction = _reflection.GeneratedProtocolMessageType('AclEntryMultiServiceTerminatingAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYMULTISERVICETERMINATINGACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryMultiServiceTerminatingAction)
  ))
_sym_db.RegisterMessage(AclEntryMultiServiceTerminatingAction)

AclEntryMultiServiceNonTerminatingAction = _reflection.GeneratedProtocolMessageType('AclEntryMultiServiceNonTerminatingAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYMULTISERVICENONTERMINATINGACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryMultiServiceNonTerminatingAction)
  ))
_sym_db.RegisterMessage(AclEntryMultiServiceNonTerminatingAction)

AclEntryMultiServiceAction = _reflection.GeneratedProtocolMessageType('AclEntryMultiServiceAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYMULTISERVICEACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryMultiServiceAction)
  ))
_sym_db.RegisterMessage(AclEntryMultiServiceAction)

AclEntryMatchMpls = _reflection.GeneratedProtocolMessageType('AclEntryMatchMpls', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYMATCHMPLS,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryMatchMpls)
  ))
_sym_db.RegisterMessage(AclEntryMatchMpls)

AclEntryMplsTerminatingAction = _reflection.GeneratedProtocolMessageType('AclEntryMplsTerminatingAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYMPLSTERMINATINGACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryMplsTerminatingAction)
  ))
_sym_db.RegisterMessage(AclEntryMplsTerminatingAction)

AclEntryMplsNonTerminatingAction = _reflection.GeneratedProtocolMessageType('AclEntryMplsNonTerminatingAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYMPLSNONTERMINATINGACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryMplsNonTerminatingAction)
  ))
_sym_db.RegisterMessage(AclEntryMplsNonTerminatingAction)

AclEntryMplsAction = _reflection.GeneratedProtocolMessageType('AclEntryMplsAction', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRYMPLSACTION,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntryMplsAction)
  ))
_sym_db.RegisterMessage(AclEntryMplsAction)

AclInet6Entry = _reflection.GeneratedProtocolMessageType('AclInet6Entry', (_message.Message,), dict(
  DESCRIPTOR = _ACLINET6ENTRY,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclInet6Entry)
  ))
_sym_db.RegisterMessage(AclInet6Entry)

AclVplsEntry = _reflection.GeneratedProtocolMessageType('AclVplsEntry', (_message.Message,), dict(
  DESCRIPTOR = _ACLVPLSENTRY,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclVplsEntry)
  ))
_sym_db.RegisterMessage(AclVplsEntry)

AclCccEntry = _reflection.GeneratedProtocolMessageType('AclCccEntry', (_message.Message,), dict(
  DESCRIPTOR = _ACLCCCENTRY,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclCccEntry)
  ))
_sym_db.RegisterMessage(AclCccEntry)

AclMultiServiceEntry = _reflection.GeneratedProtocolMessageType('AclMultiServiceEntry', (_message.Message,), dict(
  DESCRIPTOR = _ACLMULTISERVICEENTRY,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMultiServiceEntry)
  ))
_sym_db.RegisterMessage(AclMultiServiceEntry)

AclMplsEntry = _reflection.GeneratedProtocolMessageType('AclMplsEntry', (_message.Message,), dict(
  DESCRIPTOR = _ACLMPLSENTRY,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclMplsEntry)
  ))
_sym_db.RegisterMessage(AclMplsEntry)

AclEntry = _reflection.GeneratedProtocolMessageType('AclEntry', (_message.Message,), dict(
  DESCRIPTOR = _ACLENTRY,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclEntry)
  ))
_sym_db.RegisterMessage(AclEntry)

AccessList = _reflection.GeneratedProtocolMessageType('AccessList', (_message.Message,), dict(
  DESCRIPTOR = _ACCESSLIST,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AccessList)
  ))
_sym_db.RegisterMessage(AccessList)

AccessListCounter = _reflection.GeneratedProtocolMessageType('AccessListCounter', (_message.Message,), dict(
  DESCRIPTOR = _ACCESSLISTCOUNTER,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AccessListCounter)
  ))
_sym_db.RegisterMessage(AccessListCounter)

AccessListCounterBulk = _reflection.GeneratedProtocolMessageType('AccessListCounterBulk', (_message.Message,), dict(
  DESCRIPTOR = _ACCESSLISTCOUNTERBULK,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AccessListCounterBulk)
  ))
_sym_db.RegisterMessage(AccessListCounterBulk)

AccessListReturnStatus = _reflection.GeneratedProtocolMessageType('AccessListReturnStatus', (_message.Message,), dict(
  DESCRIPTOR = _ACCESSLISTRETURNSTATUS,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AccessListReturnStatus)
  ))
_sym_db.RegisterMessage(AccessListReturnStatus)

AccessListCounterVal = _reflection.GeneratedProtocolMessageType('AccessListCounterVal', (_message.Message,), dict(
  DESCRIPTOR = _ACCESSLISTCOUNTERVAL,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AccessListCounterVal)
  ))
_sym_db.RegisterMessage(AccessListCounterVal)

AclBindObjVlan = _reflection.GeneratedProtocolMessageType('AclBindObjVlan', (_message.Message,), dict(
  DESCRIPTOR = _ACLBINDOBJVLAN,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclBindObjVlan)
  ))
_sym_db.RegisterMessage(AclBindObjVlan)

AclBindObjBridgeDomain = _reflection.GeneratedProtocolMessageType('AclBindObjBridgeDomain', (_message.Message,), dict(
  DESCRIPTOR = _ACLBINDOBJBRIDGEDOMAIN,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AclBindObjBridgeDomain)
  ))
_sym_db.RegisterMessage(AclBindObjBridgeDomain)

AccessListBindObjPoint = _reflection.GeneratedProtocolMessageType('AccessListBindObjPoint', (_message.Message,), dict(
  DESCRIPTOR = _ACCESSLISTBINDOBJPOINT,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AccessListBindObjPoint)
  ))
_sym_db.RegisterMessage(AccessListBindObjPoint)

AccessListObjBind = _reflection.GeneratedProtocolMessageType('AccessListObjBind', (_message.Message,), dict(
  DESCRIPTOR = _ACCESSLISTOBJBIND,
  __module__ = 'firewall_service_pb2'
  # @@protoc_insertion_point(class_scope:acl.AccessListObjBind)
  ))
_sym_db.RegisterMessage(AccessListObjBind)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class AclServiceStub(object):
    """
    ACL Service APIs defines a set of simple RPCs to operate upon the various
    components, viz. 
    - ACL
    - ACE
    - Policer
    - Attachment Points
    - Statistics.

    Each of RPCs are named by concatenating the corresponding Acl object and the operation 
    to be performed. This give a easy to understand semantics to the RPCs.


    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.AccessListAdd = channel.unary_unary(
          '/acl.AclService/AccessListAdd',
          request_serializer=AccessList.SerializeToString,
          response_deserializer=AccessListReturnStatus.FromString,
          )
      self.AccessListDelete = channel.unary_unary(
          '/acl.AclService/AccessListDelete',
          request_serializer=AccessList.SerializeToString,
          response_deserializer=AccessListReturnStatus.FromString,
          )
      self.AccessListChange = channel.unary_unary(
          '/acl.AclService/AccessListChange',
          request_serializer=AccessList.SerializeToString,
          response_deserializer=AccessListReturnStatus.FromString,
          )
      self.AccessListBindAdd = channel.unary_unary(
          '/acl.AclService/AccessListBindAdd',
          request_serializer=AccessListObjBind.SerializeToString,
          response_deserializer=AccessListReturnStatus.FromString,
          )
      self.AccessListBindDelete = channel.unary_unary(
          '/acl.AclService/AccessListBindDelete',
          request_serializer=AccessListObjBind.SerializeToString,
          response_deserializer=AccessListReturnStatus.FromString,
          )
      self.AccessListPolicerAdd = channel.unary_unary(
          '/acl.AclService/AccessListPolicerAdd',
          request_serializer=AccessListPolicer.SerializeToString,
          response_deserializer=AccessListReturnStatus.FromString,
          )
      self.AccessListPolicerReplace = channel.unary_unary(
          '/acl.AclService/AccessListPolicerReplace',
          request_serializer=AccessListPolicer.SerializeToString,
          response_deserializer=AccessListReturnStatus.FromString,
          )
      self.AccessListPolicerDelete = channel.unary_unary(
          '/acl.AclService/AccessListPolicerDelete',
          request_serializer=AccessListPolicer.SerializeToString,
          response_deserializer=AccessListReturnStatus.FromString,
          )
      self.AccessListPileupStart = channel.unary_unary(
          '/acl.AclService/AccessListPileupStart',
          request_serializer=AccessListVoid.SerializeToString,
          response_deserializer=AccessListReturnStatus.FromString,
          )
      self.AccessListPileupEnd = channel.unary_unary(
          '/acl.AclService/AccessListPileupEnd',
          request_serializer=AccessListVoid.SerializeToString,
          response_deserializer=AccessListReturnStatus.FromString,
          )
      self.AccessListCounterGet = channel.unary_unary(
          '/acl.AclService/AccessListCounterGet',
          request_serializer=AccessListCounter.SerializeToString,
          response_deserializer=AccessListCounterVal.FromString,
          )
      self.AccessListPolicerCounterGet = channel.unary_unary(
          '/acl.AclService/AccessListPolicerCounterGet',
          request_serializer=AccessListCounter.SerializeToString,
          response_deserializer=AccessListCounterVal.FromString,
          )
      self.AccessListCounterClear = channel.unary_unary(
          '/acl.AclService/AccessListCounterClear',
          request_serializer=AccessListCounter.SerializeToString,
          response_deserializer=AccessListReturnStatus.FromString,
          )
      self.AccessListCounterBulkGet = channel.unary_stream(
          '/acl.AclService/AccessListCounterBulkGet',
          request_serializer=AccessListCounterBulk.SerializeToString,
          response_deserializer=AccessListCounterVal.FromString,
          )
      self.AccessListPolicerCounterBulkGet = channel.unary_stream(
          '/acl.AclService/AccessListPolicerCounterBulkGet',
          request_serializer=AccessListCounterBulk.SerializeToString,
          response_deserializer=AccessListCounterVal.FromString,
          )


  class AclServiceServicer(object):
    """
    ACL Service APIs defines a set of simple RPCs to operate upon the various
    components, viz. 
    - ACL
    - ACE
    - Policer
    - Attachment Points
    - Statistics.

    Each of RPCs are named by concatenating the corresponding Acl object and the operation 
    to be performed. This give a easy to understand semantics to the RPCs.


    """

    def AccessListAdd(self, request, context):
      """Adds an ACL and returns the result.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AccessListDelete(self, request, context):
      """Delete an ACL from the system and return the result.
      For successful delete to happen, the ACL should not be bound to any object.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AccessListChange(self, request, context):
      """Changes an ACL based on the list of ACL entries provided, and returns the result.
      It is advisable to use this API to for small incremental changes. For wholesale 
      changes, it is recommended to use the 'Replace' version of the API.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AccessListBindAdd(self, request, context):
      """Add a binding of an ACL with a bind object and return the result.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AccessListBindDelete(self, request, context):
      """Deletes a binding of an ACL with a bind object and return the result.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AccessListPolicerAdd(self, request, context):
      """Adds a policer and returns the result.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AccessListPolicerReplace(self, request, context):
      """Changes a policer and returns the result.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AccessListPolicerDelete(self, request, context):
      """Deletes a policer and returns the result.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AccessListPileupStart(self, request, context):
      """Following are optimized command to let the server know to <br>
      accumulate the Access List Entries and configure on when AccessListPileupEnd is received. <br>
      For every AccessList RPC invocation, the entire ACL is applied to the system <br>
      For application which wants to do batching for better performance, the AccessListPileupStart <br>
      and AccessListPileupEnd will help achive that.

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AccessListPileupEnd(self, request, context):
      """Following are optimized command to let the server know to <br>
      accumulate the ace_list and configure on when AccessListPileupEnd is received. <br>
      For every AccessList RPC invocation, the entire ACL is applied to the system <br>
      For application which wants to do batching for better performance, the AccessListPileupStart <br>
      and AccessListPileupEnd will help achive that.

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AccessListCounterGet(self, request, context):
      """Few points to note with this API. 
      The call is going to be blocking for worst case of 10 seconds which is non configurable.
      The counter name is expected to be fully resolved. For eg. for term specific policer counter
      it is expected to be passed to full counter name.

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AccessListPolicerCounterGet(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AccessListCounterClear(self, request, context):
      """Clears a particular counter whose fully qualified name is provided,  associated with an ACL.
      Few points to note with this API. Currently only 1 counter get is supported.
      The counter name is expected to be fully resolved. For eg. for term specific policer counter
      it is expected to be passed to full counter name.

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AccessListCounterBulkGet(self, request, context):
      """Get all the counters associated with an ACL.
      Each call to this API will return 10 counters from the starting_index specified in AccessListCounterBulk message.
      The client is expected to run this API in loop which should stop in either one of the following condition:
      a. The targeted number of counters are retrieved.
      b. An error is returned.
      c. The API returns less than 10 counters.

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AccessListPolicerCounterBulkGet(self, request, context):
      """Get all the policer counters associated with an ACL.
      Each call to this API will return 10 counters from the starting_index specified in AccessListCounterBulk message.
      The client is expected to run this API in loop which should stop in either one of the following condition:
      a. The targeted number of counters are retrieved.
      b. An error is returned.
      c. The API returns less than 10 counters.

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_AclServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'AccessListAdd': grpc.unary_unary_rpc_method_handler(
            servicer.AccessListAdd,
            request_deserializer=AccessList.FromString,
            response_serializer=AccessListReturnStatus.SerializeToString,
        ),
        'AccessListDelete': grpc.unary_unary_rpc_method_handler(
            servicer.AccessListDelete,
            request_deserializer=AccessList.FromString,
            response_serializer=AccessListReturnStatus.SerializeToString,
        ),
        'AccessListChange': grpc.unary_unary_rpc_method_handler(
            servicer.AccessListChange,
            request_deserializer=AccessList.FromString,
            response_serializer=AccessListReturnStatus.SerializeToString,
        ),
        'AccessListBindAdd': grpc.unary_unary_rpc_method_handler(
            servicer.AccessListBindAdd,
            request_deserializer=AccessListObjBind.FromString,
            response_serializer=AccessListReturnStatus.SerializeToString,
        ),
        'AccessListBindDelete': grpc.unary_unary_rpc_method_handler(
            servicer.AccessListBindDelete,
            request_deserializer=AccessListObjBind.FromString,
            response_serializer=AccessListReturnStatus.SerializeToString,
        ),
        'AccessListPolicerAdd': grpc.unary_unary_rpc_method_handler(
            servicer.AccessListPolicerAdd,
            request_deserializer=AccessListPolicer.FromString,
            response_serializer=AccessListReturnStatus.SerializeToString,
        ),
        'AccessListPolicerReplace': grpc.unary_unary_rpc_method_handler(
            servicer.AccessListPolicerReplace,
            request_deserializer=AccessListPolicer.FromString,
            response_serializer=AccessListReturnStatus.SerializeToString,
        ),
        'AccessListPolicerDelete': grpc.unary_unary_rpc_method_handler(
            servicer.AccessListPolicerDelete,
            request_deserializer=AccessListPolicer.FromString,
            response_serializer=AccessListReturnStatus.SerializeToString,
        ),
        'AccessListPileupStart': grpc.unary_unary_rpc_method_handler(
            servicer.AccessListPileupStart,
            request_deserializer=AccessListVoid.FromString,
            response_serializer=AccessListReturnStatus.SerializeToString,
        ),
        'AccessListPileupEnd': grpc.unary_unary_rpc_method_handler(
            servicer.AccessListPileupEnd,
            request_deserializer=AccessListVoid.FromString,
            response_serializer=AccessListReturnStatus.SerializeToString,
        ),
        'AccessListCounterGet': grpc.unary_unary_rpc_method_handler(
            servicer.AccessListCounterGet,
            request_deserializer=AccessListCounter.FromString,
            response_serializer=AccessListCounterVal.SerializeToString,
        ),
        'AccessListPolicerCounterGet': grpc.unary_unary_rpc_method_handler(
            servicer.AccessListPolicerCounterGet,
            request_deserializer=AccessListCounter.FromString,
            response_serializer=AccessListCounterVal.SerializeToString,
        ),
        'AccessListCounterClear': grpc.unary_unary_rpc_method_handler(
            servicer.AccessListCounterClear,
            request_deserializer=AccessListCounter.FromString,
            response_serializer=AccessListReturnStatus.SerializeToString,
        ),
        'AccessListCounterBulkGet': grpc.unary_stream_rpc_method_handler(
            servicer.AccessListCounterBulkGet,
            request_deserializer=AccessListCounterBulk.FromString,
            response_serializer=AccessListCounterVal.SerializeToString,
        ),
        'AccessListPolicerCounterBulkGet': grpc.unary_stream_rpc_method_handler(
            servicer.AccessListPolicerCounterBulkGet,
            request_deserializer=AccessListCounterBulk.FromString,
            response_serializer=AccessListCounterVal.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'acl.AclService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaAclServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """
    ACL Service APIs defines a set of simple RPCs to operate upon the various
    components, viz. 
    - ACL
    - ACE
    - Policer
    - Attachment Points
    - Statistics.

    Each of RPCs are named by concatenating the corresponding Acl object and the operation 
    to be performed. This give a easy to understand semantics to the RPCs.


    """
    def AccessListAdd(self, request, context):
      """Adds an ACL and returns the result.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AccessListDelete(self, request, context):
      """Delete an ACL from the system and return the result.
      For successful delete to happen, the ACL should not be bound to any object.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AccessListChange(self, request, context):
      """Changes an ACL based on the list of ACL entries provided, and returns the result.
      It is advisable to use this API to for small incremental changes. For wholesale 
      changes, it is recommended to use the 'Replace' version of the API.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AccessListBindAdd(self, request, context):
      """Add a binding of an ACL with a bind object and return the result.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AccessListBindDelete(self, request, context):
      """Deletes a binding of an ACL with a bind object and return the result.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AccessListPolicerAdd(self, request, context):
      """Adds a policer and returns the result.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AccessListPolicerReplace(self, request, context):
      """Changes a policer and returns the result.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AccessListPolicerDelete(self, request, context):
      """Deletes a policer and returns the result.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AccessListPileupStart(self, request, context):
      """Following are optimized command to let the server know to <br>
      accumulate the Access List Entries and configure on when AccessListPileupEnd is received. <br>
      For every AccessList RPC invocation, the entire ACL is applied to the system <br>
      For application which wants to do batching for better performance, the AccessListPileupStart <br>
      and AccessListPileupEnd will help achive that.

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AccessListPileupEnd(self, request, context):
      """Following are optimized command to let the server know to <br>
      accumulate the ace_list and configure on when AccessListPileupEnd is received. <br>
      For every AccessList RPC invocation, the entire ACL is applied to the system <br>
      For application which wants to do batching for better performance, the AccessListPileupStart <br>
      and AccessListPileupEnd will help achive that.

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AccessListCounterGet(self, request, context):
      """Few points to note with this API. 
      The call is going to be blocking for worst case of 10 seconds which is non configurable.
      The counter name is expected to be fully resolved. For eg. for term specific policer counter
      it is expected to be passed to full counter name.

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AccessListPolicerCounterGet(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AccessListCounterClear(self, request, context):
      """Clears a particular counter whose fully qualified name is provided,  associated with an ACL.
      Few points to note with this API. Currently only 1 counter get is supported.
      The counter name is expected to be fully resolved. For eg. for term specific policer counter
      it is expected to be passed to full counter name.

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AccessListCounterBulkGet(self, request, context):
      """Get all the counters associated with an ACL.
      Each call to this API will return 10 counters from the starting_index specified in AccessListCounterBulk message.
      The client is expected to run this API in loop which should stop in either one of the following condition:
      a. The targeted number of counters are retrieved.
      b. An error is returned.
      c. The API returns less than 10 counters.

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AccessListPolicerCounterBulkGet(self, request, context):
      """Get all the policer counters associated with an ACL.
      Each call to this API will return 10 counters from the starting_index specified in AccessListCounterBulk message.
      The client is expected to run this API in loop which should stop in either one of the following condition:
      a. The targeted number of counters are retrieved.
      b. An error is returned.
      c. The API returns less than 10 counters.

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaAclServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """
    ACL Service APIs defines a set of simple RPCs to operate upon the various
    components, viz. 
    - ACL
    - ACE
    - Policer
    - Attachment Points
    - Statistics.

    Each of RPCs are named by concatenating the corresponding Acl object and the operation 
    to be performed. This give a easy to understand semantics to the RPCs.


    """
    def AccessListAdd(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Adds an ACL and returns the result.
      """
      raise NotImplementedError()
    AccessListAdd.future = None
    def AccessListDelete(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Delete an ACL from the system and return the result.
      For successful delete to happen, the ACL should not be bound to any object.
      """
      raise NotImplementedError()
    AccessListDelete.future = None
    def AccessListChange(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Changes an ACL based on the list of ACL entries provided, and returns the result.
      It is advisable to use this API to for small incremental changes. For wholesale 
      changes, it is recommended to use the 'Replace' version of the API.
      """
      raise NotImplementedError()
    AccessListChange.future = None
    def AccessListBindAdd(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Add a binding of an ACL with a bind object and return the result.
      """
      raise NotImplementedError()
    AccessListBindAdd.future = None
    def AccessListBindDelete(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Deletes a binding of an ACL with a bind object and return the result.
      """
      raise NotImplementedError()
    AccessListBindDelete.future = None
    def AccessListPolicerAdd(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Adds a policer and returns the result.
      """
      raise NotImplementedError()
    AccessListPolicerAdd.future = None
    def AccessListPolicerReplace(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Changes a policer and returns the result.
      """
      raise NotImplementedError()
    AccessListPolicerReplace.future = None
    def AccessListPolicerDelete(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Deletes a policer and returns the result.
      """
      raise NotImplementedError()
    AccessListPolicerDelete.future = None
    def AccessListPileupStart(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Following are optimized command to let the server know to <br>
      accumulate the Access List Entries and configure on when AccessListPileupEnd is received. <br>
      For every AccessList RPC invocation, the entire ACL is applied to the system <br>
      For application which wants to do batching for better performance, the AccessListPileupStart <br>
      and AccessListPileupEnd will help achive that.

      """
      raise NotImplementedError()
    AccessListPileupStart.future = None
    def AccessListPileupEnd(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Following are optimized command to let the server know to <br>
      accumulate the ace_list and configure on when AccessListPileupEnd is received. <br>
      For every AccessList RPC invocation, the entire ACL is applied to the system <br>
      For application which wants to do batching for better performance, the AccessListPileupStart <br>
      and AccessListPileupEnd will help achive that.

      """
      raise NotImplementedError()
    AccessListPileupEnd.future = None
    def AccessListCounterGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Few points to note with this API. 
      The call is going to be blocking for worst case of 10 seconds which is non configurable.
      The counter name is expected to be fully resolved. For eg. for term specific policer counter
      it is expected to be passed to full counter name.

      """
      raise NotImplementedError()
    AccessListCounterGet.future = None
    def AccessListPolicerCounterGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    AccessListPolicerCounterGet.future = None
    def AccessListCounterClear(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Clears a particular counter whose fully qualified name is provided,  associated with an ACL.
      Few points to note with this API. Currently only 1 counter get is supported.
      The counter name is expected to be fully resolved. For eg. for term specific policer counter
      it is expected to be passed to full counter name.

      """
      raise NotImplementedError()
    AccessListCounterClear.future = None
    def AccessListCounterBulkGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Get all the counters associated with an ACL.
      Each call to this API will return 10 counters from the starting_index specified in AccessListCounterBulk message.
      The client is expected to run this API in loop which should stop in either one of the following condition:
      a. The targeted number of counters are retrieved.
      b. An error is returned.
      c. The API returns less than 10 counters.

      """
      raise NotImplementedError()
    def AccessListPolicerCounterBulkGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Get all the policer counters associated with an ACL.
      Each call to this API will return 10 counters from the starting_index specified in AccessListCounterBulk message.
      The client is expected to run this API in loop which should stop in either one of the following condition:
      a. The targeted number of counters are retrieved.
      b. An error is returned.
      c. The API returns less than 10 counters.

      """
      raise NotImplementedError()


  def beta_create_AclService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('acl.AclService', 'AccessListAdd'): AccessList.FromString,
      ('acl.AclService', 'AccessListBindAdd'): AccessListObjBind.FromString,
      ('acl.AclService', 'AccessListBindDelete'): AccessListObjBind.FromString,
      ('acl.AclService', 'AccessListChange'): AccessList.FromString,
      ('acl.AclService', 'AccessListCounterBulkGet'): AccessListCounterBulk.FromString,
      ('acl.AclService', 'AccessListCounterClear'): AccessListCounter.FromString,
      ('acl.AclService', 'AccessListCounterGet'): AccessListCounter.FromString,
      ('acl.AclService', 'AccessListDelete'): AccessList.FromString,
      ('acl.AclService', 'AccessListPileupEnd'): AccessListVoid.FromString,
      ('acl.AclService', 'AccessListPileupStart'): AccessListVoid.FromString,
      ('acl.AclService', 'AccessListPolicerAdd'): AccessListPolicer.FromString,
      ('acl.AclService', 'AccessListPolicerCounterBulkGet'): AccessListCounterBulk.FromString,
      ('acl.AclService', 'AccessListPolicerCounterGet'): AccessListCounter.FromString,
      ('acl.AclService', 'AccessListPolicerDelete'): AccessListPolicer.FromString,
      ('acl.AclService', 'AccessListPolicerReplace'): AccessListPolicer.FromString,
    }
    response_serializers = {
      ('acl.AclService', 'AccessListAdd'): AccessListReturnStatus.SerializeToString,
      ('acl.AclService', 'AccessListBindAdd'): AccessListReturnStatus.SerializeToString,
      ('acl.AclService', 'AccessListBindDelete'): AccessListReturnStatus.SerializeToString,
      ('acl.AclService', 'AccessListChange'): AccessListReturnStatus.SerializeToString,
      ('acl.AclService', 'AccessListCounterBulkGet'): AccessListCounterVal.SerializeToString,
      ('acl.AclService', 'AccessListCounterClear'): AccessListReturnStatus.SerializeToString,
      ('acl.AclService', 'AccessListCounterGet'): AccessListCounterVal.SerializeToString,
      ('acl.AclService', 'AccessListDelete'): AccessListReturnStatus.SerializeToString,
      ('acl.AclService', 'AccessListPileupEnd'): AccessListReturnStatus.SerializeToString,
      ('acl.AclService', 'AccessListPileupStart'): AccessListReturnStatus.SerializeToString,
      ('acl.AclService', 'AccessListPolicerAdd'): AccessListReturnStatus.SerializeToString,
      ('acl.AclService', 'AccessListPolicerCounterBulkGet'): AccessListCounterVal.SerializeToString,
      ('acl.AclService', 'AccessListPolicerCounterGet'): AccessListCounterVal.SerializeToString,
      ('acl.AclService', 'AccessListPolicerDelete'): AccessListReturnStatus.SerializeToString,
      ('acl.AclService', 'AccessListPolicerReplace'): AccessListReturnStatus.SerializeToString,
    }
    method_implementations = {
      ('acl.AclService', 'AccessListAdd'): face_utilities.unary_unary_inline(servicer.AccessListAdd),
      ('acl.AclService', 'AccessListBindAdd'): face_utilities.unary_unary_inline(servicer.AccessListBindAdd),
      ('acl.AclService', 'AccessListBindDelete'): face_utilities.unary_unary_inline(servicer.AccessListBindDelete),
      ('acl.AclService', 'AccessListChange'): face_utilities.unary_unary_inline(servicer.AccessListChange),
      ('acl.AclService', 'AccessListCounterBulkGet'): face_utilities.unary_stream_inline(servicer.AccessListCounterBulkGet),
      ('acl.AclService', 'AccessListCounterClear'): face_utilities.unary_unary_inline(servicer.AccessListCounterClear),
      ('acl.AclService', 'AccessListCounterGet'): face_utilities.unary_unary_inline(servicer.AccessListCounterGet),
      ('acl.AclService', 'AccessListDelete'): face_utilities.unary_unary_inline(servicer.AccessListDelete),
      ('acl.AclService', 'AccessListPileupEnd'): face_utilities.unary_unary_inline(servicer.AccessListPileupEnd),
      ('acl.AclService', 'AccessListPileupStart'): face_utilities.unary_unary_inline(servicer.AccessListPileupStart),
      ('acl.AclService', 'AccessListPolicerAdd'): face_utilities.unary_unary_inline(servicer.AccessListPolicerAdd),
      ('acl.AclService', 'AccessListPolicerCounterBulkGet'): face_utilities.unary_stream_inline(servicer.AccessListPolicerCounterBulkGet),
      ('acl.AclService', 'AccessListPolicerCounterGet'): face_utilities.unary_unary_inline(servicer.AccessListPolicerCounterGet),
      ('acl.AclService', 'AccessListPolicerDelete'): face_utilities.unary_unary_inline(servicer.AccessListPolicerDelete),
      ('acl.AclService', 'AccessListPolicerReplace'): face_utilities.unary_unary_inline(servicer.AccessListPolicerReplace),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_AclService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('acl.AclService', 'AccessListAdd'): AccessList.SerializeToString,
      ('acl.AclService', 'AccessListBindAdd'): AccessListObjBind.SerializeToString,
      ('acl.AclService', 'AccessListBindDelete'): AccessListObjBind.SerializeToString,
      ('acl.AclService', 'AccessListChange'): AccessList.SerializeToString,
      ('acl.AclService', 'AccessListCounterBulkGet'): AccessListCounterBulk.SerializeToString,
      ('acl.AclService', 'AccessListCounterClear'): AccessListCounter.SerializeToString,
      ('acl.AclService', 'AccessListCounterGet'): AccessListCounter.SerializeToString,
      ('acl.AclService', 'AccessListDelete'): AccessList.SerializeToString,
      ('acl.AclService', 'AccessListPileupEnd'): AccessListVoid.SerializeToString,
      ('acl.AclService', 'AccessListPileupStart'): AccessListVoid.SerializeToString,
      ('acl.AclService', 'AccessListPolicerAdd'): AccessListPolicer.SerializeToString,
      ('acl.AclService', 'AccessListPolicerCounterBulkGet'): AccessListCounterBulk.SerializeToString,
      ('acl.AclService', 'AccessListPolicerCounterGet'): AccessListCounter.SerializeToString,
      ('acl.AclService', 'AccessListPolicerDelete'): AccessListPolicer.SerializeToString,
      ('acl.AclService', 'AccessListPolicerReplace'): AccessListPolicer.SerializeToString,
    }
    response_deserializers = {
      ('acl.AclService', 'AccessListAdd'): AccessListReturnStatus.FromString,
      ('acl.AclService', 'AccessListBindAdd'): AccessListReturnStatus.FromString,
      ('acl.AclService', 'AccessListBindDelete'): AccessListReturnStatus.FromString,
      ('acl.AclService', 'AccessListChange'): AccessListReturnStatus.FromString,
      ('acl.AclService', 'AccessListCounterBulkGet'): AccessListCounterVal.FromString,
      ('acl.AclService', 'AccessListCounterClear'): AccessListReturnStatus.FromString,
      ('acl.AclService', 'AccessListCounterGet'): AccessListCounterVal.FromString,
      ('acl.AclService', 'AccessListDelete'): AccessListReturnStatus.FromString,
      ('acl.AclService', 'AccessListPileupEnd'): AccessListReturnStatus.FromString,
      ('acl.AclService', 'AccessListPileupStart'): AccessListReturnStatus.FromString,
      ('acl.AclService', 'AccessListPolicerAdd'): AccessListReturnStatus.FromString,
      ('acl.AclService', 'AccessListPolicerCounterBulkGet'): AccessListCounterVal.FromString,
      ('acl.AclService', 'AccessListPolicerCounterGet'): AccessListCounterVal.FromString,
      ('acl.AclService', 'AccessListPolicerDelete'): AccessListReturnStatus.FromString,
      ('acl.AclService', 'AccessListPolicerReplace'): AccessListReturnStatus.FromString,
    }
    cardinalities = {
      'AccessListAdd': cardinality.Cardinality.UNARY_UNARY,
      'AccessListBindAdd': cardinality.Cardinality.UNARY_UNARY,
      'AccessListBindDelete': cardinality.Cardinality.UNARY_UNARY,
      'AccessListChange': cardinality.Cardinality.UNARY_UNARY,
      'AccessListCounterBulkGet': cardinality.Cardinality.UNARY_STREAM,
      'AccessListCounterClear': cardinality.Cardinality.UNARY_UNARY,
      'AccessListCounterGet': cardinality.Cardinality.UNARY_UNARY,
      'AccessListDelete': cardinality.Cardinality.UNARY_UNARY,
      'AccessListPileupEnd': cardinality.Cardinality.UNARY_UNARY,
      'AccessListPileupStart': cardinality.Cardinality.UNARY_UNARY,
      'AccessListPolicerAdd': cardinality.Cardinality.UNARY_UNARY,
      'AccessListPolicerCounterBulkGet': cardinality.Cardinality.UNARY_STREAM,
      'AccessListPolicerCounterGet': cardinality.Cardinality.UNARY_UNARY,
      'AccessListPolicerDelete': cardinality.Cardinality.UNARY_UNARY,
      'AccessListPolicerReplace': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'acl.AclService', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
