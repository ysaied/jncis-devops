# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: prpd_common.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import jnx_addr_pb2 as jnx__addr__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='prpd_common.proto',
  package='routing',
  syntax='proto3',
  serialized_pb=_b('\n\x11prpd_common.proto\x12\x07routing\x1a\x0ejnx_addr.proto\"\x1e\n\x0eRouteTableName\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1a\n\x0cRouteTableId\x12\n\n\x02id\x18\x01 \x01(\r\"s\n\nRouteTable\x12\'\n\x06rtt_id\x18\x01 \x01(\x0b\x32\x15.routing.RouteTableIdH\x00\x12+\n\x08rtt_name\x18\x02 \x01(\x0b\x32\x17.routing.RouteTableNameH\x00\x42\x0f\n\rRtTableFormat\"5\n\x07RdType0\x12\x11\n\tas_number\x18\x01 \x01(\r\x12\x17\n\x0f\x61ssigned_number\x18\x02 \x01(\r\"J\n\x07RdType1\x12&\n\nip_address\x18\x01 \x01(\x0b\x32\x12.jnxBase.IpAddress\x12\x17\n\x0f\x61ssigned_number\x18\x02 \x01(\r\"5\n\x07RdType2\x12\x11\n\tas_number\x18\x01 \x01(\r\x12\x17\n\x0f\x61ssigned_number\x18\x02 \x01(\r\"\x83\x01\n\x12RouteDistinguisher\x12\x1f\n\x03rd0\x18\x01 \x01(\x0b\x32\x10.routing.RdType0H\x00\x12\x1f\n\x03rd1\x18\x02 \x01(\x0b\x32\x10.routing.RdType1H\x00\x12\x1f\n\x03rd2\x18\x03 \x01(\x0b\x32\x10.routing.RdType2H\x00\x42\n\n\x08RdFormat\"]\n\x0cL3vpnAddress\x12\'\n\x02rd\x18\x01 \x01(\x0b\x32\x1b.routing.RouteDistinguisher\x12$\n\x08vpn_addr\x18\x02 \x01(\x0b\x32\x12.jnxBase.IpAddress\"\xd8\x01\n\nLabelEntry\x12\r\n\x05label\x18\x01 \x01(\r\x12\x15\n\rtraffic_class\x18\x02 \x01(\r\x12\x0b\n\x03ttl\x18\x03 \x01(\r\x12\x17\n\x0f\x62ottom_of_stack\x18\x04 \x01(\x08\"~\n\x0fWellKnownLabels\x12\x1c\n\x18IPV4_EXPLICIT_NULL_LABEL\x10\x00\x12\x16\n\x12ROUTER_ALERT_LABEL\x10\x01\x12\x1c\n\x18IPV6_EXPLICIT_NULL_LABEL\x10\x02\x12\x17\n\x13IMPLICIT_NULL_LABEL\x10\x03\"d\n\x0fLabelStackEntry\x12\'\n\x06opcode\x18\x01 \x01(\x0e\x32\x17.routing.LabelOperation\x12(\n\x0blabel_entry\x18\x02 \x01(\x0b\x32\x13.routing.LabelEntry\"\x1c\n\x0bMplsAddress\x12\r\n\x05label\x18\x01 \x01(\r\"7\n\nLabelStack\x12)\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x18.routing.LabelStackEntry\"J\n\x08SidEntry\x12.\n\x0fsid_label_entry\x18\x01 \x01(\x0b\x32\x13.routing.LabelEntryH\x00\x42\x0e\n\x0cSidEntryType\"<\n\x0cSegmentType1\x12,\n\x0fsid_label_entry\x18\x01 \x01(\x0b\x32\x13.routing.LabelEntry\"I\n\x0bSRTESegment\x12.\n\rsegment_type1\x18\x01 \x01(\x0b\x32\x15.routing.SegmentType1H\x00\x42\n\n\x08SRTEType\"I\n\x0fSRTESegmentList\x12\x0e\n\x06weight\x18\x01 \x01(\r\x12&\n\x08segments\x18\x02 \x03(\x0b\x32\x14.routing.SRTESegment\"*\n\x11SRTEDistinguisher\x12\x15\n\rdistinguisher\x18\x01 \x01(\r\"\x1a\n\tSRTEColor\x12\r\n\x05\x63olor\x18\x01 \x01(\r\":\n\x0eSRTEBindingSID\x12(\n\rbinding_sr_id\x18\x01 \x01(\x0b\x32\x11.routing.SidEntry\"\x92\x01\n\x0bSRTEAddress\x12\'\n\x0b\x64\x65stination\x18\x01 \x01(\x0b\x32\x12.jnxBase.IpAddress\x12$\n\x08sr_color\x18\x02 \x01(\x0b\x32\x12.routing.SRTEColor\x12\x34\n\x10sr_distinguisher\x18\x03 \x01(\x0b\x32\x1a.routing.SRTEDistinguisher\"\x82\x01\n\rSRTERouteData\x12,\n\x0b\x62inding_sid\x18\x01 \x01(\x0b\x32\x17.routing.SRTEBindingSID\x12\x12\n\npreference\x18\x02 \x01(\r\x12/\n\rsegment_lists\x18\x03 \x03(\x0b\x32\x18.routing.SRTESegmentList\"^\n\x19\x41\x64\x64ressFamilySpecificData\x12\x32\n\x10srte_policy_data\x18\x01 \x01(\x0b\x32\x16.routing.SRTERouteDataH\x00\x42\r\n\x0bRouteDataAf\"\xfa\x02\n\x0bRoutePrefix\x12\"\n\x04inet\x18\x01 \x01(\x0b\x32\x12.jnxBase.IpAddressH\x00\x12#\n\x05inet6\x18\x02 \x01(\x0b\x32\x12.jnxBase.IpAddressH\x00\x12(\n\x07inetvpn\x18\x03 \x01(\x0b\x32\x15.routing.L3vpnAddressH\x00\x12)\n\x08inet6vpn\x18\x04 \x01(\x0b\x32\x15.routing.L3vpnAddressH\x00\x12*\n\x0clabeled_inet\x18\x05 \x01(\x0b\x32\x12.jnxBase.IpAddressH\x00\x12+\n\rlabeled_inet6\x18\x06 \x01(\x0b\x32\x12.jnxBase.IpAddressH\x00\x12\x30\n\x10inet_srte_policy\x18\x07 \x01(\x0b\x32\x14.routing.SRTEAddressH\x00\x12\x31\n\x11inet6_srte_policy\x18\x08 \x01(\x0b\x32\x14.routing.SRTEAddressH\x00\x42\x0f\n\rRoutePrefixAf\"\x85\x01\n\x0eNetworkAddress\x12\"\n\x04inet\x18\x01 \x01(\x0b\x32\x12.jnxBase.IpAddressH\x00\x12#\n\x05inet6\x18\x02 \x01(\x0b\x32\x12.jnxBase.IpAddressH\x00\x12$\n\x04mpls\x18\x03 \x01(\x0b\x32\x14.routing.MplsAddressH\x00\x42\x04\n\x02\x41\x66*Y\n\nReturnCode\x12\x0f\n\x0bRET_SUCCESS\x10\x00\x12\x0f\n\x0bRET_FAILURE\x10\x01\x12\x11\n\rRET_NOT_FOUND\x10\x02\x12\x16\n\x12RET_INVALID_PARAMS\x10\x03*2\n\x10RouteTableFormat\x12\x10\n\x0cTABLE_STRING\x10\x00\x12\x0c\n\x08TABLE_ID\x10\x01*\xc3\x01\n\x0bRouteAfType\x12\x10\n\x0cRT_AF_UNSPEC\x10\x00\x12\x0e\n\nRT_AF_INET\x10\x01\x12\x0f\n\x0bRT_AF_INET6\x10\x02\x12\x11\n\rRT_AF_INETVPN\x10\x03\x12\x12\n\x0eRT_AF_INET6VPN\x10\x04\x12\x16\n\x12RT_AF_LABELED_INET\x10\x05\x12\x17\n\x13RT_AF_LABELED_INET6\x10\x06\x12\x13\n\x0fRT_AF_INET_SRTE\x10\x07\x12\x14\n\x10RT_AF_INET6_SRTE\x10\x08*7\n\x0eLabelOperation\x12\x08\n\x04NOOP\x10\x00\x12\x07\n\x03POP\x10\x01\x12\x08\n\x04PUSH\x10\x02\x12\x08\n\x04SWAP\x10\x03*\xd6\x02\n\x0eRouteProtoType\x12\x07\n\x03\x41NY\x10\x00\x12\n\n\x06\x44IRECT\x10\x01\x12\t\n\x05LOCAL\x10\x02\x12\n\n\x06KERNEL\x10\x03\x12\x0c\n\x08REDIRECT\x10\x04\x12\x08\n\x04OSPF\x10\x05\x12\t\n\x05OSPF3\x10\x06\x12\x0c\n\x08OSPF_ANY\x10\x07\x12\x07\n\x03RIP\x10\x08\x12\t\n\x05RIPNG\x10\t\x12\x07\n\x03\x42GP\x10\n\x12\n\n\x06STATIC\x10\x0b\x12\x08\n\x04ISIS\x10\x0c\x12\x08\n\x04IGMP\x10\r\x12\r\n\tAGGREGATE\x10\x0e\x12\t\n\x05\x44VMRP\x10\x0f\x12\x07\n\x03PIM\x10\x10\x12\x08\n\x04MSDP\x10\x11\x12\x08\n\x04MPLS\x10\x12\x12\x08\n\x04RSVP\x10\x13\x12\x07\n\x03\x43\x43\x43\x10\x14\x12\x07\n\x03LDP\x10\x15\x12\x07\n\x03VPN\x10\x16\x12\x08\n\x04MVPN\x10\x17\x12\t\n\x05MCAST\x10\x18\x12\t\n\x05L2VPN\x10\x19\x12\t\n\x05L2CKT\x10\x1a\x12\x0e\n\nBGP_STATIC\x10\x1b\x12\x08\n\x04RIFT\x10\x1c\x12\t\n\x05OTHER\x10\x1d\x62\x06proto3')
  ,
  dependencies=[jnx__addr__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_RETURNCODE = _descriptor.EnumDescriptor(
  name='ReturnCode',
  full_name='routing.ReturnCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RET_SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RET_FAILURE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RET_NOT_FOUND', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RET_INVALID_PARAMS', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2361,
  serialized_end=2450,
)
_sym_db.RegisterEnumDescriptor(_RETURNCODE)

ReturnCode = enum_type_wrapper.EnumTypeWrapper(_RETURNCODE)
_ROUTETABLEFORMAT = _descriptor.EnumDescriptor(
  name='RouteTableFormat',
  full_name='routing.RouteTableFormat',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TABLE_STRING', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TABLE_ID', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2452,
  serialized_end=2502,
)
_sym_db.RegisterEnumDescriptor(_ROUTETABLEFORMAT)

RouteTableFormat = enum_type_wrapper.EnumTypeWrapper(_ROUTETABLEFORMAT)
_ROUTEAFTYPE = _descriptor.EnumDescriptor(
  name='RouteAfType',
  full_name='routing.RouteAfType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RT_AF_UNSPEC', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RT_AF_INET', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RT_AF_INET6', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RT_AF_INETVPN', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RT_AF_INET6VPN', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RT_AF_LABELED_INET', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RT_AF_LABELED_INET6', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RT_AF_INET_SRTE', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RT_AF_INET6_SRTE', index=8, number=8,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2505,
  serialized_end=2700,
)
_sym_db.RegisterEnumDescriptor(_ROUTEAFTYPE)

RouteAfType = enum_type_wrapper.EnumTypeWrapper(_ROUTEAFTYPE)
_LABELOPERATION = _descriptor.EnumDescriptor(
  name='LabelOperation',
  full_name='routing.LabelOperation',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NOOP', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POP', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PUSH', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SWAP', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2702,
  serialized_end=2757,
)
_sym_db.RegisterEnumDescriptor(_LABELOPERATION)

LabelOperation = enum_type_wrapper.EnumTypeWrapper(_LABELOPERATION)
_ROUTEPROTOTYPE = _descriptor.EnumDescriptor(
  name='RouteProtoType',
  full_name='routing.RouteProtoType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ANY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIRECT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOCAL', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KERNEL', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REDIRECT', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OSPF', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OSPF3', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OSPF_ANY', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RIP', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RIPNG', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BGP', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATIC', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ISIS', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IGMP', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AGGREGATE', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DVMRP', index=15, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PIM', index=16, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MSDP', index=17, number=17,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MPLS', index=18, number=18,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSVP', index=19, number=19,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CCC', index=20, number=20,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LDP', index=21, number=21,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VPN', index=22, number=22,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MVPN', index=23, number=23,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MCAST', index=24, number=24,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='L2VPN', index=25, number=25,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='L2CKT', index=26, number=26,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BGP_STATIC', index=27, number=27,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RIFT', index=28, number=28,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OTHER', index=29, number=29,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2760,
  serialized_end=3102,
)
_sym_db.RegisterEnumDescriptor(_ROUTEPROTOTYPE)

RouteProtoType = enum_type_wrapper.EnumTypeWrapper(_ROUTEPROTOTYPE)
RET_SUCCESS = 0
RET_FAILURE = 1
RET_NOT_FOUND = 2
RET_INVALID_PARAMS = 3
TABLE_STRING = 0
TABLE_ID = 1
RT_AF_UNSPEC = 0
RT_AF_INET = 1
RT_AF_INET6 = 2
RT_AF_INETVPN = 3
RT_AF_INET6VPN = 4
RT_AF_LABELED_INET = 5
RT_AF_LABELED_INET6 = 6
RT_AF_INET_SRTE = 7
RT_AF_INET6_SRTE = 8
NOOP = 0
POP = 1
PUSH = 2
SWAP = 3
ANY = 0
DIRECT = 1
LOCAL = 2
KERNEL = 3
REDIRECT = 4
OSPF = 5
OSPF3 = 6
OSPF_ANY = 7
RIP = 8
RIPNG = 9
BGP = 10
STATIC = 11
ISIS = 12
IGMP = 13
AGGREGATE = 14
DVMRP = 15
PIM = 16
MSDP = 17
MPLS = 18
RSVP = 19
CCC = 20
LDP = 21
VPN = 22
MVPN = 23
MCAST = 24
L2VPN = 25
L2CKT = 26
BGP_STATIC = 27
RIFT = 28
OTHER = 29


_LABELENTRY_WELLKNOWNLABELS = _descriptor.EnumDescriptor(
  name='WellKnownLabels',
  full_name='routing.LabelEntry.WellKnownLabels',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IPV4_EXPLICIT_NULL_LABEL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROUTER_ALERT_LABEL', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IPV6_EXPLICIT_NULL_LABEL', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IMPLICIT_NULL_LABEL', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=729,
  serialized_end=855,
)
_sym_db.RegisterEnumDescriptor(_LABELENTRY_WELLKNOWNLABELS)


_ROUTETABLENAME = _descriptor.Descriptor(
  name='RouteTableName',
  full_name='routing.RouteTableName',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='routing.RouteTableName.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=46,
  serialized_end=76,
)


_ROUTETABLEID = _descriptor.Descriptor(
  name='RouteTableId',
  full_name='routing.RouteTableId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='routing.RouteTableId.id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=78,
  serialized_end=104,
)


_ROUTETABLE = _descriptor.Descriptor(
  name='RouteTable',
  full_name='routing.RouteTable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rtt_id', full_name='routing.RouteTable.rtt_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rtt_name', full_name='routing.RouteTable.rtt_name', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='RtTableFormat', full_name='routing.RouteTable.RtTableFormat',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=106,
  serialized_end=221,
)


_RDTYPE0 = _descriptor.Descriptor(
  name='RdType0',
  full_name='routing.RdType0',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='as_number', full_name='routing.RdType0.as_number', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='assigned_number', full_name='routing.RdType0.assigned_number', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=223,
  serialized_end=276,
)


_RDTYPE1 = _descriptor.Descriptor(
  name='RdType1',
  full_name='routing.RdType1',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip_address', full_name='routing.RdType1.ip_address', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='assigned_number', full_name='routing.RdType1.assigned_number', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=278,
  serialized_end=352,
)


_RDTYPE2 = _descriptor.Descriptor(
  name='RdType2',
  full_name='routing.RdType2',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='as_number', full_name='routing.RdType2.as_number', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='assigned_number', full_name='routing.RdType2.assigned_number', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=354,
  serialized_end=407,
)


_ROUTEDISTINGUISHER = _descriptor.Descriptor(
  name='RouteDistinguisher',
  full_name='routing.RouteDistinguisher',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rd0', full_name='routing.RouteDistinguisher.rd0', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rd1', full_name='routing.RouteDistinguisher.rd1', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rd2', full_name='routing.RouteDistinguisher.rd2', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='RdFormat', full_name='routing.RouteDistinguisher.RdFormat',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=410,
  serialized_end=541,
)


_L3VPNADDRESS = _descriptor.Descriptor(
  name='L3vpnAddress',
  full_name='routing.L3vpnAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rd', full_name='routing.L3vpnAddress.rd', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vpn_addr', full_name='routing.L3vpnAddress.vpn_addr', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=543,
  serialized_end=636,
)


_LABELENTRY = _descriptor.Descriptor(
  name='LabelEntry',
  full_name='routing.LabelEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='routing.LabelEntry.label', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='traffic_class', full_name='routing.LabelEntry.traffic_class', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ttl', full_name='routing.LabelEntry.ttl', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bottom_of_stack', full_name='routing.LabelEntry.bottom_of_stack', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LABELENTRY_WELLKNOWNLABELS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=639,
  serialized_end=855,
)


_LABELSTACKENTRY = _descriptor.Descriptor(
  name='LabelStackEntry',
  full_name='routing.LabelStackEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='opcode', full_name='routing.LabelStackEntry.opcode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label_entry', full_name='routing.LabelStackEntry.label_entry', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=857,
  serialized_end=957,
)


_MPLSADDRESS = _descriptor.Descriptor(
  name='MplsAddress',
  full_name='routing.MplsAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='routing.MplsAddress.label', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=959,
  serialized_end=987,
)


_LABELSTACK = _descriptor.Descriptor(
  name='LabelStack',
  full_name='routing.LabelStack',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entries', full_name='routing.LabelStack.entries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=989,
  serialized_end=1044,
)


_SIDENTRY = _descriptor.Descriptor(
  name='SidEntry',
  full_name='routing.SidEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sid_label_entry', full_name='routing.SidEntry.sid_label_entry', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='SidEntryType', full_name='routing.SidEntry.SidEntryType',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1046,
  serialized_end=1120,
)


_SEGMENTTYPE1 = _descriptor.Descriptor(
  name='SegmentType1',
  full_name='routing.SegmentType1',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sid_label_entry', full_name='routing.SegmentType1.sid_label_entry', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1122,
  serialized_end=1182,
)


_SRTESEGMENT = _descriptor.Descriptor(
  name='SRTESegment',
  full_name='routing.SRTESegment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='segment_type1', full_name='routing.SRTESegment.segment_type1', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='SRTEType', full_name='routing.SRTESegment.SRTEType',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1184,
  serialized_end=1257,
)


_SRTESEGMENTLIST = _descriptor.Descriptor(
  name='SRTESegmentList',
  full_name='routing.SRTESegmentList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='weight', full_name='routing.SRTESegmentList.weight', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='segments', full_name='routing.SRTESegmentList.segments', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1259,
  serialized_end=1332,
)


_SRTEDISTINGUISHER = _descriptor.Descriptor(
  name='SRTEDistinguisher',
  full_name='routing.SRTEDistinguisher',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='distinguisher', full_name='routing.SRTEDistinguisher.distinguisher', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1334,
  serialized_end=1376,
)


_SRTECOLOR = _descriptor.Descriptor(
  name='SRTEColor',
  full_name='routing.SRTEColor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='color', full_name='routing.SRTEColor.color', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1378,
  serialized_end=1404,
)


_SRTEBINDINGSID = _descriptor.Descriptor(
  name='SRTEBindingSID',
  full_name='routing.SRTEBindingSID',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='binding_sr_id', full_name='routing.SRTEBindingSID.binding_sr_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1406,
  serialized_end=1464,
)


_SRTEADDRESS = _descriptor.Descriptor(
  name='SRTEAddress',
  full_name='routing.SRTEAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='destination', full_name='routing.SRTEAddress.destination', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sr_color', full_name='routing.SRTEAddress.sr_color', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sr_distinguisher', full_name='routing.SRTEAddress.sr_distinguisher', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1467,
  serialized_end=1613,
)


_SRTEROUTEDATA = _descriptor.Descriptor(
  name='SRTERouteData',
  full_name='routing.SRTERouteData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='binding_sid', full_name='routing.SRTERouteData.binding_sid', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='preference', full_name='routing.SRTERouteData.preference', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='segment_lists', full_name='routing.SRTERouteData.segment_lists', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1616,
  serialized_end=1746,
)


_ADDRESSFAMILYSPECIFICDATA = _descriptor.Descriptor(
  name='AddressFamilySpecificData',
  full_name='routing.AddressFamilySpecificData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='srte_policy_data', full_name='routing.AddressFamilySpecificData.srte_policy_data', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='RouteDataAf', full_name='routing.AddressFamilySpecificData.RouteDataAf',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1748,
  serialized_end=1842,
)


_ROUTEPREFIX = _descriptor.Descriptor(
  name='RoutePrefix',
  full_name='routing.RoutePrefix',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='inet', full_name='routing.RoutePrefix.inet', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='inet6', full_name='routing.RoutePrefix.inet6', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='inetvpn', full_name='routing.RoutePrefix.inetvpn', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='inet6vpn', full_name='routing.RoutePrefix.inet6vpn', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='labeled_inet', full_name='routing.RoutePrefix.labeled_inet', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='labeled_inet6', full_name='routing.RoutePrefix.labeled_inet6', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='inet_srte_policy', full_name='routing.RoutePrefix.inet_srte_policy', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='inet6_srte_policy', full_name='routing.RoutePrefix.inet6_srte_policy', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='RoutePrefixAf', full_name='routing.RoutePrefix.RoutePrefixAf',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1845,
  serialized_end=2223,
)


_NETWORKADDRESS = _descriptor.Descriptor(
  name='NetworkAddress',
  full_name='routing.NetworkAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='inet', full_name='routing.NetworkAddress.inet', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='inet6', full_name='routing.NetworkAddress.inet6', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mpls', full_name='routing.NetworkAddress.mpls', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Af', full_name='routing.NetworkAddress.Af',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2226,
  serialized_end=2359,
)

_ROUTETABLE.fields_by_name['rtt_id'].message_type = _ROUTETABLEID
_ROUTETABLE.fields_by_name['rtt_name'].message_type = _ROUTETABLENAME
_ROUTETABLE.oneofs_by_name['RtTableFormat'].fields.append(
  _ROUTETABLE.fields_by_name['rtt_id'])
_ROUTETABLE.fields_by_name['rtt_id'].containing_oneof = _ROUTETABLE.oneofs_by_name['RtTableFormat']
_ROUTETABLE.oneofs_by_name['RtTableFormat'].fields.append(
  _ROUTETABLE.fields_by_name['rtt_name'])
_ROUTETABLE.fields_by_name['rtt_name'].containing_oneof = _ROUTETABLE.oneofs_by_name['RtTableFormat']
_RDTYPE1.fields_by_name['ip_address'].message_type = jnx__addr__pb2._IPADDRESS
_ROUTEDISTINGUISHER.fields_by_name['rd0'].message_type = _RDTYPE0
_ROUTEDISTINGUISHER.fields_by_name['rd1'].message_type = _RDTYPE1
_ROUTEDISTINGUISHER.fields_by_name['rd2'].message_type = _RDTYPE2
_ROUTEDISTINGUISHER.oneofs_by_name['RdFormat'].fields.append(
  _ROUTEDISTINGUISHER.fields_by_name['rd0'])
_ROUTEDISTINGUISHER.fields_by_name['rd0'].containing_oneof = _ROUTEDISTINGUISHER.oneofs_by_name['RdFormat']
_ROUTEDISTINGUISHER.oneofs_by_name['RdFormat'].fields.append(
  _ROUTEDISTINGUISHER.fields_by_name['rd1'])
_ROUTEDISTINGUISHER.fields_by_name['rd1'].containing_oneof = _ROUTEDISTINGUISHER.oneofs_by_name['RdFormat']
_ROUTEDISTINGUISHER.oneofs_by_name['RdFormat'].fields.append(
  _ROUTEDISTINGUISHER.fields_by_name['rd2'])
_ROUTEDISTINGUISHER.fields_by_name['rd2'].containing_oneof = _ROUTEDISTINGUISHER.oneofs_by_name['RdFormat']
_L3VPNADDRESS.fields_by_name['rd'].message_type = _ROUTEDISTINGUISHER
_L3VPNADDRESS.fields_by_name['vpn_addr'].message_type = jnx__addr__pb2._IPADDRESS
_LABELENTRY_WELLKNOWNLABELS.containing_type = _LABELENTRY
_LABELSTACKENTRY.fields_by_name['opcode'].enum_type = _LABELOPERATION
_LABELSTACKENTRY.fields_by_name['label_entry'].message_type = _LABELENTRY
_LABELSTACK.fields_by_name['entries'].message_type = _LABELSTACKENTRY
_SIDENTRY.fields_by_name['sid_label_entry'].message_type = _LABELENTRY
_SIDENTRY.oneofs_by_name['SidEntryType'].fields.append(
  _SIDENTRY.fields_by_name['sid_label_entry'])
_SIDENTRY.fields_by_name['sid_label_entry'].containing_oneof = _SIDENTRY.oneofs_by_name['SidEntryType']
_SEGMENTTYPE1.fields_by_name['sid_label_entry'].message_type = _LABELENTRY
_SRTESEGMENT.fields_by_name['segment_type1'].message_type = _SEGMENTTYPE1
_SRTESEGMENT.oneofs_by_name['SRTEType'].fields.append(
  _SRTESEGMENT.fields_by_name['segment_type1'])
_SRTESEGMENT.fields_by_name['segment_type1'].containing_oneof = _SRTESEGMENT.oneofs_by_name['SRTEType']
_SRTESEGMENTLIST.fields_by_name['segments'].message_type = _SRTESEGMENT
_SRTEBINDINGSID.fields_by_name['binding_sr_id'].message_type = _SIDENTRY
_SRTEADDRESS.fields_by_name['destination'].message_type = jnx__addr__pb2._IPADDRESS
_SRTEADDRESS.fields_by_name['sr_color'].message_type = _SRTECOLOR
_SRTEADDRESS.fields_by_name['sr_distinguisher'].message_type = _SRTEDISTINGUISHER
_SRTEROUTEDATA.fields_by_name['binding_sid'].message_type = _SRTEBINDINGSID
_SRTEROUTEDATA.fields_by_name['segment_lists'].message_type = _SRTESEGMENTLIST
_ADDRESSFAMILYSPECIFICDATA.fields_by_name['srte_policy_data'].message_type = _SRTEROUTEDATA
_ADDRESSFAMILYSPECIFICDATA.oneofs_by_name['RouteDataAf'].fields.append(
  _ADDRESSFAMILYSPECIFICDATA.fields_by_name['srte_policy_data'])
_ADDRESSFAMILYSPECIFICDATA.fields_by_name['srte_policy_data'].containing_oneof = _ADDRESSFAMILYSPECIFICDATA.oneofs_by_name['RouteDataAf']
_ROUTEPREFIX.fields_by_name['inet'].message_type = jnx__addr__pb2._IPADDRESS
_ROUTEPREFIX.fields_by_name['inet6'].message_type = jnx__addr__pb2._IPADDRESS
_ROUTEPREFIX.fields_by_name['inetvpn'].message_type = _L3VPNADDRESS
_ROUTEPREFIX.fields_by_name['inet6vpn'].message_type = _L3VPNADDRESS
_ROUTEPREFIX.fields_by_name['labeled_inet'].message_type = jnx__addr__pb2._IPADDRESS
_ROUTEPREFIX.fields_by_name['labeled_inet6'].message_type = jnx__addr__pb2._IPADDRESS
_ROUTEPREFIX.fields_by_name['inet_srte_policy'].message_type = _SRTEADDRESS
_ROUTEPREFIX.fields_by_name['inet6_srte_policy'].message_type = _SRTEADDRESS
_ROUTEPREFIX.oneofs_by_name['RoutePrefixAf'].fields.append(
  _ROUTEPREFIX.fields_by_name['inet'])
_ROUTEPREFIX.fields_by_name['inet'].containing_oneof = _ROUTEPREFIX.oneofs_by_name['RoutePrefixAf']
_ROUTEPREFIX.oneofs_by_name['RoutePrefixAf'].fields.append(
  _ROUTEPREFIX.fields_by_name['inet6'])
_ROUTEPREFIX.fields_by_name['inet6'].containing_oneof = _ROUTEPREFIX.oneofs_by_name['RoutePrefixAf']
_ROUTEPREFIX.oneofs_by_name['RoutePrefixAf'].fields.append(
  _ROUTEPREFIX.fields_by_name['inetvpn'])
_ROUTEPREFIX.fields_by_name['inetvpn'].containing_oneof = _ROUTEPREFIX.oneofs_by_name['RoutePrefixAf']
_ROUTEPREFIX.oneofs_by_name['RoutePrefixAf'].fields.append(
  _ROUTEPREFIX.fields_by_name['inet6vpn'])
_ROUTEPREFIX.fields_by_name['inet6vpn'].containing_oneof = _ROUTEPREFIX.oneofs_by_name['RoutePrefixAf']
_ROUTEPREFIX.oneofs_by_name['RoutePrefixAf'].fields.append(
  _ROUTEPREFIX.fields_by_name['labeled_inet'])
_ROUTEPREFIX.fields_by_name['labeled_inet'].containing_oneof = _ROUTEPREFIX.oneofs_by_name['RoutePrefixAf']
_ROUTEPREFIX.oneofs_by_name['RoutePrefixAf'].fields.append(
  _ROUTEPREFIX.fields_by_name['labeled_inet6'])
_ROUTEPREFIX.fields_by_name['labeled_inet6'].containing_oneof = _ROUTEPREFIX.oneofs_by_name['RoutePrefixAf']
_ROUTEPREFIX.oneofs_by_name['RoutePrefixAf'].fields.append(
  _ROUTEPREFIX.fields_by_name['inet_srte_policy'])
_ROUTEPREFIX.fields_by_name['inet_srte_policy'].containing_oneof = _ROUTEPREFIX.oneofs_by_name['RoutePrefixAf']
_ROUTEPREFIX.oneofs_by_name['RoutePrefixAf'].fields.append(
  _ROUTEPREFIX.fields_by_name['inet6_srte_policy'])
_ROUTEPREFIX.fields_by_name['inet6_srte_policy'].containing_oneof = _ROUTEPREFIX.oneofs_by_name['RoutePrefixAf']
_NETWORKADDRESS.fields_by_name['inet'].message_type = jnx__addr__pb2._IPADDRESS
_NETWORKADDRESS.fields_by_name['inet6'].message_type = jnx__addr__pb2._IPADDRESS
_NETWORKADDRESS.fields_by_name['mpls'].message_type = _MPLSADDRESS
_NETWORKADDRESS.oneofs_by_name['Af'].fields.append(
  _NETWORKADDRESS.fields_by_name['inet'])
_NETWORKADDRESS.fields_by_name['inet'].containing_oneof = _NETWORKADDRESS.oneofs_by_name['Af']
_NETWORKADDRESS.oneofs_by_name['Af'].fields.append(
  _NETWORKADDRESS.fields_by_name['inet6'])
_NETWORKADDRESS.fields_by_name['inet6'].containing_oneof = _NETWORKADDRESS.oneofs_by_name['Af']
_NETWORKADDRESS.oneofs_by_name['Af'].fields.append(
  _NETWORKADDRESS.fields_by_name['mpls'])
_NETWORKADDRESS.fields_by_name['mpls'].containing_oneof = _NETWORKADDRESS.oneofs_by_name['Af']
DESCRIPTOR.message_types_by_name['RouteTableName'] = _ROUTETABLENAME
DESCRIPTOR.message_types_by_name['RouteTableId'] = _ROUTETABLEID
DESCRIPTOR.message_types_by_name['RouteTable'] = _ROUTETABLE
DESCRIPTOR.message_types_by_name['RdType0'] = _RDTYPE0
DESCRIPTOR.message_types_by_name['RdType1'] = _RDTYPE1
DESCRIPTOR.message_types_by_name['RdType2'] = _RDTYPE2
DESCRIPTOR.message_types_by_name['RouteDistinguisher'] = _ROUTEDISTINGUISHER
DESCRIPTOR.message_types_by_name['L3vpnAddress'] = _L3VPNADDRESS
DESCRIPTOR.message_types_by_name['LabelEntry'] = _LABELENTRY
DESCRIPTOR.message_types_by_name['LabelStackEntry'] = _LABELSTACKENTRY
DESCRIPTOR.message_types_by_name['MplsAddress'] = _MPLSADDRESS
DESCRIPTOR.message_types_by_name['LabelStack'] = _LABELSTACK
DESCRIPTOR.message_types_by_name['SidEntry'] = _SIDENTRY
DESCRIPTOR.message_types_by_name['SegmentType1'] = _SEGMENTTYPE1
DESCRIPTOR.message_types_by_name['SRTESegment'] = _SRTESEGMENT
DESCRIPTOR.message_types_by_name['SRTESegmentList'] = _SRTESEGMENTLIST
DESCRIPTOR.message_types_by_name['SRTEDistinguisher'] = _SRTEDISTINGUISHER
DESCRIPTOR.message_types_by_name['SRTEColor'] = _SRTECOLOR
DESCRIPTOR.message_types_by_name['SRTEBindingSID'] = _SRTEBINDINGSID
DESCRIPTOR.message_types_by_name['SRTEAddress'] = _SRTEADDRESS
DESCRIPTOR.message_types_by_name['SRTERouteData'] = _SRTEROUTEDATA
DESCRIPTOR.message_types_by_name['AddressFamilySpecificData'] = _ADDRESSFAMILYSPECIFICDATA
DESCRIPTOR.message_types_by_name['RoutePrefix'] = _ROUTEPREFIX
DESCRIPTOR.message_types_by_name['NetworkAddress'] = _NETWORKADDRESS
DESCRIPTOR.enum_types_by_name['ReturnCode'] = _RETURNCODE
DESCRIPTOR.enum_types_by_name['RouteTableFormat'] = _ROUTETABLEFORMAT
DESCRIPTOR.enum_types_by_name['RouteAfType'] = _ROUTEAFTYPE
DESCRIPTOR.enum_types_by_name['LabelOperation'] = _LABELOPERATION
DESCRIPTOR.enum_types_by_name['RouteProtoType'] = _ROUTEPROTOTYPE

RouteTableName = _reflection.GeneratedProtocolMessageType('RouteTableName', (_message.Message,), dict(
  DESCRIPTOR = _ROUTETABLENAME,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.RouteTableName)
  ))
_sym_db.RegisterMessage(RouteTableName)

RouteTableId = _reflection.GeneratedProtocolMessageType('RouteTableId', (_message.Message,), dict(
  DESCRIPTOR = _ROUTETABLEID,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.RouteTableId)
  ))
_sym_db.RegisterMessage(RouteTableId)

RouteTable = _reflection.GeneratedProtocolMessageType('RouteTable', (_message.Message,), dict(
  DESCRIPTOR = _ROUTETABLE,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.RouteTable)
  ))
_sym_db.RegisterMessage(RouteTable)

RdType0 = _reflection.GeneratedProtocolMessageType('RdType0', (_message.Message,), dict(
  DESCRIPTOR = _RDTYPE0,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.RdType0)
  ))
_sym_db.RegisterMessage(RdType0)

RdType1 = _reflection.GeneratedProtocolMessageType('RdType1', (_message.Message,), dict(
  DESCRIPTOR = _RDTYPE1,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.RdType1)
  ))
_sym_db.RegisterMessage(RdType1)

RdType2 = _reflection.GeneratedProtocolMessageType('RdType2', (_message.Message,), dict(
  DESCRIPTOR = _RDTYPE2,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.RdType2)
  ))
_sym_db.RegisterMessage(RdType2)

RouteDistinguisher = _reflection.GeneratedProtocolMessageType('RouteDistinguisher', (_message.Message,), dict(
  DESCRIPTOR = _ROUTEDISTINGUISHER,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.RouteDistinguisher)
  ))
_sym_db.RegisterMessage(RouteDistinguisher)

L3vpnAddress = _reflection.GeneratedProtocolMessageType('L3vpnAddress', (_message.Message,), dict(
  DESCRIPTOR = _L3VPNADDRESS,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.L3vpnAddress)
  ))
_sym_db.RegisterMessage(L3vpnAddress)

LabelEntry = _reflection.GeneratedProtocolMessageType('LabelEntry', (_message.Message,), dict(
  DESCRIPTOR = _LABELENTRY,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.LabelEntry)
  ))
_sym_db.RegisterMessage(LabelEntry)

LabelStackEntry = _reflection.GeneratedProtocolMessageType('LabelStackEntry', (_message.Message,), dict(
  DESCRIPTOR = _LABELSTACKENTRY,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.LabelStackEntry)
  ))
_sym_db.RegisterMessage(LabelStackEntry)

MplsAddress = _reflection.GeneratedProtocolMessageType('MplsAddress', (_message.Message,), dict(
  DESCRIPTOR = _MPLSADDRESS,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.MplsAddress)
  ))
_sym_db.RegisterMessage(MplsAddress)

LabelStack = _reflection.GeneratedProtocolMessageType('LabelStack', (_message.Message,), dict(
  DESCRIPTOR = _LABELSTACK,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.LabelStack)
  ))
_sym_db.RegisterMessage(LabelStack)

SidEntry = _reflection.GeneratedProtocolMessageType('SidEntry', (_message.Message,), dict(
  DESCRIPTOR = _SIDENTRY,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.SidEntry)
  ))
_sym_db.RegisterMessage(SidEntry)

SegmentType1 = _reflection.GeneratedProtocolMessageType('SegmentType1', (_message.Message,), dict(
  DESCRIPTOR = _SEGMENTTYPE1,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.SegmentType1)
  ))
_sym_db.RegisterMessage(SegmentType1)

SRTESegment = _reflection.GeneratedProtocolMessageType('SRTESegment', (_message.Message,), dict(
  DESCRIPTOR = _SRTESEGMENT,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.SRTESegment)
  ))
_sym_db.RegisterMessage(SRTESegment)

SRTESegmentList = _reflection.GeneratedProtocolMessageType('SRTESegmentList', (_message.Message,), dict(
  DESCRIPTOR = _SRTESEGMENTLIST,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.SRTESegmentList)
  ))
_sym_db.RegisterMessage(SRTESegmentList)

SRTEDistinguisher = _reflection.GeneratedProtocolMessageType('SRTEDistinguisher', (_message.Message,), dict(
  DESCRIPTOR = _SRTEDISTINGUISHER,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.SRTEDistinguisher)
  ))
_sym_db.RegisterMessage(SRTEDistinguisher)

SRTEColor = _reflection.GeneratedProtocolMessageType('SRTEColor', (_message.Message,), dict(
  DESCRIPTOR = _SRTECOLOR,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.SRTEColor)
  ))
_sym_db.RegisterMessage(SRTEColor)

SRTEBindingSID = _reflection.GeneratedProtocolMessageType('SRTEBindingSID', (_message.Message,), dict(
  DESCRIPTOR = _SRTEBINDINGSID,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.SRTEBindingSID)
  ))
_sym_db.RegisterMessage(SRTEBindingSID)

SRTEAddress = _reflection.GeneratedProtocolMessageType('SRTEAddress', (_message.Message,), dict(
  DESCRIPTOR = _SRTEADDRESS,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.SRTEAddress)
  ))
_sym_db.RegisterMessage(SRTEAddress)

SRTERouteData = _reflection.GeneratedProtocolMessageType('SRTERouteData', (_message.Message,), dict(
  DESCRIPTOR = _SRTEROUTEDATA,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.SRTERouteData)
  ))
_sym_db.RegisterMessage(SRTERouteData)

AddressFamilySpecificData = _reflection.GeneratedProtocolMessageType('AddressFamilySpecificData', (_message.Message,), dict(
  DESCRIPTOR = _ADDRESSFAMILYSPECIFICDATA,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.AddressFamilySpecificData)
  ))
_sym_db.RegisterMessage(AddressFamilySpecificData)

RoutePrefix = _reflection.GeneratedProtocolMessageType('RoutePrefix', (_message.Message,), dict(
  DESCRIPTOR = _ROUTEPREFIX,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.RoutePrefix)
  ))
_sym_db.RegisterMessage(RoutePrefix)

NetworkAddress = _reflection.GeneratedProtocolMessageType('NetworkAddress', (_message.Message,), dict(
  DESCRIPTOR = _NETWORKADDRESS,
  __module__ = 'prpd_common_pb2'
  # @@protoc_insertion_point(class_scope:routing.NetworkAddress)
  ))
_sym_db.RegisterMessage(NetworkAddress)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
