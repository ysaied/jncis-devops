# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import jnx_authentication_service_pb2 as jnx__authentication__service__pb2


class AuthenticationStub(object):
    """[brief]: Authentication service for Junos APIs
    [detail]: Authentication service to allow a client endpoint to authenticate
    itself to gain access to Junos APIs
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
                '/jnx.jet.authentication.Authentication/Login',
                request_serializer=jnx__authentication__service__pb2.LoginRequest.SerializeToString,
                response_deserializer=jnx__authentication__service__pb2.LoginResponse.FromString,
                )


class AuthenticationServicer(object):
    """[brief]: Authentication service for Junos APIs
    [detail]: Authentication service to allow a client endpoint to authenticate
    itself to gain access to Junos APIs
    """

    def Login(self, request, context):
        """[brief]: Verify client credentials
        [detail]: Verify client credentials by checking passed in
        username/password against what is registered with the Junos device
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthenticationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=jnx__authentication__service__pb2.LoginRequest.FromString,
                    response_serializer=jnx__authentication__service__pb2.LoginResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'jnx.jet.authentication.Authentication', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Authentication(object):
    """[brief]: Authentication service for Junos APIs
    [detail]: Authentication service to allow a client endpoint to authenticate
    itself to gain access to Junos APIs
    """

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/jnx.jet.authentication.Authentication/Login',
            jnx__authentication__service__pb2.LoginRequest.SerializeToString,
            jnx__authentication__service__pb2.LoginResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
